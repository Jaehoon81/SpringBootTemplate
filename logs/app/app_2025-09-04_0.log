2025-09-04 08:51:11.641[INFO ] : Starting SpringBootTemplateApplication using Java 17.0.12 with PID 5888 (D:\Web\Spring\Workspace\SpringBootTemplate\out\production\classes started by IDBS_Oculus in D:\Web\Spring\Workspace\SpringBootTemplate)
2025-09-04 08:51:11.643[DEBUG] : Running with Spring Boot v3.3.12, Spring v6.1.20
2025-09-04 08:51:11.644[INFO ] : No active profile set, falling back to 1 default profile: "default"
2025-09-04 08:51:11.709[INFO ] : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-09-04 08:51:11.709[INFO ] : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-09-04 08:51:13.482[INFO ] : Tomcat initialized with port 8080 (http)
2025-09-04 08:51:13.497[INFO ] : Starting service [Tomcat]
2025-09-04 08:51:13.497[INFO ] : Starting Servlet engine: [Apache Tomcat/10.1.41]
2025-09-04 08:51:13.708[INFO ] : At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2025-09-04 08:51:13.718[INFO ] : Initializing Spring embedded WebApplicationContext
2025-09-04 08:51:13.719[INFO ] : Root WebApplicationContext: initialization completed in 2009 ms
2025-09-04 08:51:14.101[DEBUG] : Filter 'jwtRequestFilter' configured for use
2025-09-04 08:51:14.181[INFO ] : Global AuthenticationManager configured with UserDetailsService bean with name userDetailsServiceImpl
2025-09-04 08:51:14.339[INFO ] : Adding welcome page template: index
2025-09-04 08:51:14.804[INFO ] : LiveReload server is running on port 35729
2025-09-04 08:51:14.872[INFO ] : Tomcat started on port 8080 (http) with context path '/'
2025-09-04 08:51:14.887[INFO ] : Started SpringBootTemplateApplication in 4.094 seconds (process running for 5.482)
2025-09-04 08:51:45.352[INFO ] : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-09-04 08:51:45.353[INFO ] : Initializing Servlet 'dispatcherServlet'
2025-09-04 08:51:45.354[INFO ] : Completed initialization in 1 ms
2025-09-04 08:52:04.338[ERROR] : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.RuntimeException: 의도적으로 발생시킨 에러입니다!] with root cause
java.lang.RuntimeException: 의도적으로 발생시킨 에러입니다!
	at kr.co.jaehoon.springboottemplate.controller.HomeController.triggerErrorPage(HomeController.java:37)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:527)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:614)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at kr.co.jaehoon.springboottemplate.security.JwtRequestFilter.doFilterInternal(JwtRequestFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:842)
2025-09-04 08:52:27.776[ERROR] : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.RuntimeException: 의도적으로 발생시킨 에러입니다!] with root cause
java.lang.RuntimeException: 의도적으로 발생시킨 에러입니다!
	at kr.co.jaehoon.springboottemplate.controller.HomeController.triggerErrorPage(HomeController.java:37)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:527)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:614)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at kr.co.jaehoon.springboottemplate.security.JwtRequestFilter.doFilterInternal(JwtRequestFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:842)
2025-09-04 08:52:50.056[ERROR] : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.RuntimeException: 의도적으로 발생시킨 에러입니다!] with root cause
java.lang.RuntimeException: 의도적으로 발생시킨 에러입니다!
	at kr.co.jaehoon.springboottemplate.controller.HomeController.triggerErrorPage(HomeController.java:37)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:527)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:614)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at kr.co.jaehoon.springboottemplate.security.JwtRequestFilter.doFilterInternal(JwtRequestFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:842)
2025-09-04 08:53:50.955[INFO ] : HikariPool-1 - Starting...
2025-09-04 08:53:51.134[INFO ] : HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@70c5d1bc
2025-09-04 08:53:51.136[INFO ] : HikariPool-1 - Start completed.
2025-09-04 08:53:51.144[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 08:53:51.177[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-04 08:53:51.190[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 12 msec}
2025-09-04 08:53:51.222[DEBUG] : <==      Total: 1
2025-09-04 08:53:51.314[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 08:53:51.315[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-04 08:53:51.316[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-04 08:53:51.317[DEBUG] : <==      Total: 1
2025-09-04 08:53:51.439[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 08:53:51.440[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-04 08:53:51.442[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 0 msec}
2025-09-04 08:53:51.444[DEBUG] : <==      Total: 1
2025-09-04 08:53:51.454[DEBUG] : Secure-Page_UserDetails: [ROLE_USER]
2025-09-04 08:53:51.954[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 08:53:51.954[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 08:53:51.954[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-04 08:53:51.954[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-04 08:53:51.956[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-04 08:53:51.956[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 0 msec}
2025-09-04 08:53:51.957[DEBUG] : <==      Total: 1
2025-09-04 08:53:51.958[DEBUG] : <==      Total: 1
2025-09-04 08:54:34.498[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 08:54:34.498[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-04 08:54:34.499[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-04 08:54:34.501[DEBUG] : <==      Total: 1
2025-09-04 08:54:34.569[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 08:54:34.571[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-04 08:54:34.572[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-04 08:54:34.574[DEBUG] : <==      Total: 1
2025-09-04 08:54:38.599[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 08:54:38.600[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-04 08:54:38.601[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-04 08:54:38.603[DEBUG] : <==      Total: 1
2025-09-04 08:54:38.610[DEBUG] : Secure-Page_UserDetails: [ROLE_USER]
2025-09-04 08:54:38.647[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 08:54:38.648[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 08:54:38.648[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-04 08:54:38.648[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-04 08:54:38.649[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-04 08:54:38.649[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-04 08:54:38.651[DEBUG] : <==      Total: 1
2025-09-04 08:54:38.651[DEBUG] : <==      Total: 1
2025-09-04 08:54:40.465[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 08:54:40.465[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-04 08:54:40.466[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-04 08:54:40.468[DEBUG] : <==      Total: 1
2025-09-04 08:54:40.516[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 08:54:40.516[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-04 08:54:40.517[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-04 08:54:40.519[DEBUG] : <==      Total: 1
2025-09-04 08:54:42.394[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 08:54:42.394[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-04 08:54:42.395[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-04 08:54:42.397[DEBUG] : <==      Total: 1
2025-09-04 08:54:42.402[DEBUG] : Secure-Page_UserDetails: [ROLE_USER]
2025-09-04 08:54:42.446[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 08:54:42.446[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-04 08:54:42.446[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 08:54:42.447[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-04 08:54:42.447[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-04 08:54:42.448[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-04 08:54:42.449[DEBUG] : <==      Total: 1
2025-09-04 08:54:42.449[DEBUG] : <==      Total: 1
2025-09-04 08:54:44.817[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 08:54:44.818[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-04 08:54:44.819[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-04 08:54:44.822[DEBUG] : <==      Total: 1
2025-09-04 08:54:44.874[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 08:54:44.875[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-04 08:54:44.877[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 0 msec}
2025-09-04 08:54:44.878[DEBUG] : <==      Total: 1
2025-09-04 08:54:46.230[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 08:54:46.230[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-04 08:54:46.231[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-04 08:54:46.232[DEBUG] : <==      Total: 1
2025-09-04 08:54:46.237[DEBUG] : Secure-Page_UserDetails: [ROLE_USER]
2025-09-04 08:54:46.278[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 08:54:46.279[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-04 08:54:46.280[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-04 08:54:46.282[DEBUG] : <==      Total: 1
2025-09-04 08:54:46.331[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 08:54:46.332[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-04 08:54:46.333[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-04 08:54:46.335[DEBUG] : <==      Total: 1
2025-09-04 08:54:47.933[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 08:54:47.934[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-04 08:54:47.935[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-04 08:54:47.936[DEBUG] : <==      Total: 1
2025-09-04 08:54:47.985[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 08:54:47.986[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-04 08:54:47.987[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-04 08:54:47.989[DEBUG] : <==      Total: 1
2025-09-04 08:54:55.384[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 08:54:55.385[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-04 08:54:55.386[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-04 08:54:55.387[DEBUG] : <==      Total: 1
2025-09-04 08:54:55.394[DEBUG] : Secure-Page_UserDetails: [ROLE_USER]
2025-09-04 08:54:55.437[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 08:54:55.437[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-04 08:54:55.438[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-04 08:54:55.439[DEBUG] : <==      Total: 1
2025-09-04 08:54:55.451[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 08:54:55.452[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-04 08:54:55.454[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-04 08:54:55.457[DEBUG] : <==      Total: 1
2025-09-04 08:54:57.615[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 08:54:57.615[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-04 08:54:57.617[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-04 08:54:57.618[DEBUG] : <==      Total: 1
2025-09-04 08:54:57.694[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 08:54:57.694[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-04 08:54:57.696[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-04 08:54:57.697[DEBUG] : <==      Total: 1
2025-09-04 08:56:14.529[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 08:56:14.530[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-04 08:56:14.531[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 0 msec}
2025-09-04 08:56:14.531[DEBUG] : <==      Total: 1
2025-09-04 08:56:14.535[DEBUG] : Secure-Page_UserDetails: [ROLE_USER]
2025-09-04 08:56:14.581[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 08:56:14.582[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 08:56:14.582[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-04 08:56:14.582[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-04 08:56:14.583[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 0 msec}
2025-09-04 08:56:14.583[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 0 msec}
2025-09-04 08:56:14.584[DEBUG] : <==      Total: 1
2025-09-04 08:56:14.584[DEBUG] : <==      Total: 1
2025-09-04 08:56:15.415[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 08:56:15.415[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-04 08:56:15.416[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-04 08:56:15.418[DEBUG] : <==      Total: 1
2025-09-04 08:57:15.876[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 08:57:15.877[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 08:57:15.878[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 0 msec}
2025-09-04 08:57:15.883[DEBUG] : <==      Total: 1
2025-09-04 08:57:15.984[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 08:57:15.985[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 08:57:15.986[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 0 msec}
2025-09-04 08:57:15.987[DEBUG] : <==      Total: 1
2025-09-04 08:57:16.014[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 08:57:16.014[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 08:57:16.016[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 0 msec}
2025-09-04 08:57:16.016[DEBUG] : <==      Total: 1
2025-09-04 08:57:16.020[DEBUG] : Secure-Page_UserDetails: [ROLE_ADMIN]
2025-09-04 08:57:16.051[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 08:57:16.052[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 08:57:16.053[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 1 msec}
2025-09-04 08:57:16.054[DEBUG] : <==      Total: 1
2025-09-04 08:57:16.065[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 08:57:16.066[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 08:57:16.068[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 1 msec}
2025-09-04 08:57:16.069[DEBUG] : <==      Total: 1
2025-09-04 08:57:24.722[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 08:57:24.723[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 08:57:24.724[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 0 msec}
2025-09-04 08:57:24.725[DEBUG] : <==      Total: 1
2025-09-04 08:57:24.919[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 08:57:24.919[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 08:57:24.920[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 1 msec}
2025-09-04 08:57:24.921[DEBUG] : <==      Total: 1
2025-09-04 08:57:24.932[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 08:57:24.935[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 08:57:24.936[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 1 msec}
2025-09-04 08:57:24.937[DEBUG] : <==      Total: 1
2025-09-04 08:57:36.424[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 08:57:36.424[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 08:57:36.425[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 1 msec}
2025-09-04 08:57:36.426[DEBUG] : <==      Total: 1
2025-09-04 08:57:36.429[DEBUG] : Secure-Page_UserDetails: [ROLE_ADMIN]
2025-09-04 08:57:36.479[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 08:57:36.480[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 08:57:36.481[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 1 msec}
2025-09-04 08:57:36.482[DEBUG] : <==      Total: 1
2025-09-04 08:57:36.492[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 08:57:36.492[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 08:57:36.493[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 1 msec}
2025-09-04 08:57:36.495[DEBUG] : <==      Total: 1
2025-09-04 08:57:38.968[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 08:57:38.968[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 08:57:38.969[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 0 msec}
2025-09-04 08:57:38.970[DEBUG] : <==      Total: 1
2025-09-04 08:57:39.016[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 08:57:39.017[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 08:57:39.018[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 1 msec}
2025-09-04 08:57:39.019[DEBUG] : <==      Total: 1
2025-09-04 08:57:39.020[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 08:57:39.020[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 08:57:39.021[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 1 msec}
2025-09-04 08:57:39.023[DEBUG] : <==      Total: 1
2025-09-04 08:57:40.395[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 08:57:40.395[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 08:57:40.396[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 0 msec}
2025-09-04 08:57:40.397[DEBUG] : <==      Total: 1
2025-09-04 08:57:40.400[DEBUG] : Secure-Page_UserDetails: [ROLE_ADMIN]
2025-09-04 08:57:40.439[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 08:57:40.440[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 08:57:40.441[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 0 msec}
2025-09-04 08:57:40.441[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 08:57:40.442[DEBUG] : <==      Total: 1
2025-09-04 08:57:40.442[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 08:57:40.443[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 1 msec}
2025-09-04 08:57:40.444[DEBUG] : <==      Total: 1
2025-09-04 08:57:42.292[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 08:57:42.292[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 08:57:42.293[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 1 msec}
2025-09-04 08:57:42.294[DEBUG] : <==      Total: 1
2025-09-04 08:57:42.340[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 08:57:42.341[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 08:57:42.342[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 0 msec}
2025-09-04 08:57:42.343[DEBUG] : <==      Total: 1
2025-09-04 08:57:42.343[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 08:57:42.343[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 08:57:42.344[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 1 msec}
2025-09-04 08:57:42.346[DEBUG] : <==      Total: 1
2025-09-04 08:57:44.488[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 08:57:44.488[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 08:57:44.489[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 1 msec}
2025-09-04 08:57:44.490[DEBUG] : <==      Total: 1
2025-09-04 08:57:44.494[DEBUG] : Secure-Page_UserDetails: [ROLE_ADMIN]
2025-09-04 08:57:44.539[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 08:57:44.539[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 08:57:44.540[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 1 msec}
2025-09-04 08:57:44.541[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 08:57:44.541[DEBUG] : <==      Total: 1
2025-09-04 08:57:44.542[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 08:57:44.544[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 2 msec}
2025-09-04 08:57:44.545[DEBUG] : <==      Total: 1
2025-09-04 08:57:46.976[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 08:57:46.977[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 08:57:46.978[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 0 msec}
2025-09-04 08:57:46.979[DEBUG] : <==      Total: 1
2025-09-04 08:57:47.048[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 08:57:47.048[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 08:57:47.049[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 1 msec}
2025-09-04 08:57:47.050[DEBUG] : <==      Total: 1
2025-09-04 08:57:47.074[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 08:57:47.074[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 08:57:47.076[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 1 msec}
2025-09-04 08:57:47.076[DEBUG] : <==      Total: 1
2025-09-04 08:57:49.191[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 08:57:49.191[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 08:57:49.192[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 1 msec}
2025-09-04 08:57:49.193[DEBUG] : <==      Total: 1
2025-09-04 08:57:49.197[DEBUG] : Secure-Page_UserDetails: [ROLE_ADMIN]
2025-09-04 08:57:49.236[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 08:57:49.236[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 08:57:49.237[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 1 msec}
2025-09-04 08:57:49.238[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 08:57:49.238[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 08:57:49.238[DEBUG] : <==      Total: 1
2025-09-04 08:57:49.240[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 1 msec}
2025-09-04 08:57:49.241[DEBUG] : <==      Total: 1
2025-09-04 08:57:51.096[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 08:57:51.096[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 08:57:51.097[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 1 msec}
2025-09-04 08:57:51.098[DEBUG] : <==      Total: 1
2025-09-04 08:57:51.145[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 08:57:51.145[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 08:57:51.146[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 1 msec}
2025-09-04 08:57:51.147[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 08:57:51.147[DEBUG] : <==      Total: 1
2025-09-04 08:57:51.147[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 08:57:51.148[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 1 msec}
2025-09-04 08:57:51.150[DEBUG] : <==      Total: 1
2025-09-04 08:57:52.691[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 08:57:52.691[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 08:57:52.692[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 1 msec}
2025-09-04 08:57:52.693[DEBUG] : <==      Total: 1
2025-09-04 08:57:52.696[DEBUG] : Secure-Page_UserDetails: [ROLE_ADMIN]
2025-09-04 08:57:52.739[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 08:57:52.739[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 08:57:52.741[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 1 msec}
2025-09-04 08:57:52.742[DEBUG] : <==      Total: 1
2025-09-04 08:57:52.743[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 08:57:52.743[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 08:57:52.744[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 1 msec}
2025-09-04 08:57:52.746[DEBUG] : <==      Total: 1
2025-09-04 08:57:54.521[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 08:57:54.521[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 08:57:54.522[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 1 msec}
2025-09-04 08:57:54.523[DEBUG] : <==      Total: 1
2025-09-04 08:57:54.570[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 08:57:54.570[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 08:57:54.571[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 1 msec}
2025-09-04 08:57:54.572[DEBUG] : <==      Total: 1
2025-09-04 08:57:54.572[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 08:57:54.573[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 08:57:54.576[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 2 msec}
2025-09-04 08:57:54.577[DEBUG] : <==      Total: 1
2025-09-04 08:58:06.896[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 08:58:06.897[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 08:58:06.898[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 1 msec}
2025-09-04 08:58:06.899[DEBUG] : <==      Total: 1
2025-09-04 08:58:06.904[DEBUG] : Secure-Page_UserDetails: [ROLE_ADMIN]
2025-09-04 08:58:06.978[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 08:58:06.979[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 08:58:06.980[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 1 msec}
2025-09-04 08:58:06.981[DEBUG] : <==      Total: 1
2025-09-04 08:58:06.982[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 08:58:06.982[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 08:58:06.985[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 2 msec}
2025-09-04 08:58:06.986[DEBUG] : <==      Total: 1
2025-09-04 08:58:09.017[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 08:58:09.018[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 08:58:09.019[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 1 msec}
2025-09-04 08:58:09.019[DEBUG] : <==      Total: 1
2025-09-04 08:58:09.069[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 08:58:09.070[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 08:58:09.071[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 0 msec}
2025-09-04 08:58:09.071[DEBUG] : <==      Total: 1
2025-09-04 08:58:09.084[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 08:58:09.085[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 08:58:09.085[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 0 msec}
2025-09-04 08:58:09.086[DEBUG] : <==      Total: 1
2025-09-04 09:00:44.836[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:00:44.837[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 09:00:44.838[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 1 msec}
2025-09-04 09:00:44.840[DEBUG] : <==      Total: 1
2025-09-04 09:00:44.931[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:00:44.931[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 09:00:44.932[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 1 msec}
2025-09-04 09:00:44.932[DEBUG] : <==      Total: 1
2025-09-04 09:00:44.949[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:00:44.949[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 09:00:44.950[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 1 msec}
2025-09-04 09:00:44.951[DEBUG] : <==      Total: 1
2025-09-04 09:01:26.568[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:01:26.568[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 09:01:26.569[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 1 msec}
2025-09-04 09:01:26.570[DEBUG] : <==      Total: 1
2025-09-04 09:01:26.572[DEBUG] : Secure-Page_UserDetails: [ROLE_ADMIN]
2025-09-04 09:01:26.619[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:01:26.619[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 09:01:26.620[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 1 msec}
2025-09-04 09:01:26.621[DEBUG] : <==      Total: 1
2025-09-04 09:01:26.622[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:01:26.623[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 09:01:26.624[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 1 msec}
2025-09-04 09:01:26.625[DEBUG] : <==      Total: 1
2025-09-04 09:01:28.227[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:01:28.227[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 09:01:28.228[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 1 msec}
2025-09-04 09:01:28.229[DEBUG] : <==      Total: 1
2025-09-04 09:01:28.273[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:01:28.273[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 09:01:28.274[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:01:28.274[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 09:01:28.275[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 1 msec}
2025-09-04 09:01:28.275[DEBUG] : <==      Total: 1
2025-09-04 09:01:28.276[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 1 msec}
2025-09-04 09:01:28.277[DEBUG] : <==      Total: 1
2025-09-04 09:01:30.467[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:01:30.467[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 09:01:30.468[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 1 msec}
2025-09-04 09:01:30.469[DEBUG] : <==      Total: 1
2025-09-04 09:01:30.471[DEBUG] : Secure-Page_UserDetails: [ROLE_ADMIN]
2025-09-04 09:01:30.515[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:01:30.515[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 09:01:30.516[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 1 msec}
2025-09-04 09:01:30.516[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:01:30.517[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 09:01:30.517[DEBUG] : <==      Total: 1
2025-09-04 09:01:30.519[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 1 msec}
2025-09-04 09:01:30.520[DEBUG] : <==      Total: 1
2025-09-04 09:01:32.403[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:01:32.403[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 09:01:32.405[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 1 msec}
2025-09-04 09:01:32.405[DEBUG] : <==      Total: 1
2025-09-04 09:01:32.454[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:01:32.455[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 09:01:32.455[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:01:32.456[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 09:01:32.457[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 0 msec}
2025-09-04 09:01:32.457[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 1 msec}
2025-09-04 09:01:32.457[DEBUG] : <==      Total: 1
2025-09-04 09:01:32.457[DEBUG] : <==      Total: 1
2025-09-04 09:01:34.319[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:01:34.319[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 09:01:34.320[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 1 msec}
2025-09-04 09:01:34.321[DEBUG] : <==      Total: 1
2025-09-04 09:01:34.326[DEBUG] : Secure-Page_UserDetails: [ROLE_ADMIN]
2025-09-04 09:01:34.365[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:01:34.365[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:01:34.365[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 09:01:34.365[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 09:01:34.366[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 1 msec}
2025-09-04 09:01:34.367[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 1 msec}
2025-09-04 09:01:34.367[DEBUG] : <==      Total: 1
2025-09-04 09:01:34.367[DEBUG] : <==      Total: 1
2025-09-04 09:01:36.211[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:01:36.212[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 09:01:36.213[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 0 msec}
2025-09-04 09:01:36.214[DEBUG] : <==      Total: 1
2025-09-04 09:01:36.260[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:01:36.261[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 09:01:36.262[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 0 msec}
2025-09-04 09:01:36.262[DEBUG] : <==      Total: 1
2025-09-04 09:01:36.268[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:01:36.268[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 09:01:36.269[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 1 msec}
2025-09-04 09:01:36.270[DEBUG] : <==      Total: 1
2025-09-04 09:01:38.508[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:01:38.508[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 09:01:38.509[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 1 msec}
2025-09-04 09:01:38.510[DEBUG] : <==      Total: 1
2025-09-04 09:01:38.517[DEBUG] : Secure-Page_UserDetails: [ROLE_ADMIN]
2025-09-04 09:01:38.559[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:01:38.559[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 09:01:38.561[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 1 msec}
2025-09-04 09:01:38.562[DEBUG] : <==      Total: 1
2025-09-04 09:01:38.562[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:01:38.563[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 09:01:38.564[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 1 msec}
2025-09-04 09:01:38.565[DEBUG] : <==      Total: 1
2025-09-04 09:01:40.562[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:01:40.562[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 09:01:40.563[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 1 msec}
2025-09-04 09:01:40.564[DEBUG] : <==      Total: 1
2025-09-04 09:01:40.612[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:01:40.612[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 09:01:40.614[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 1 msec}
2025-09-04 09:01:40.616[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:01:40.617[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 09:01:40.617[DEBUG] : <==      Total: 1
2025-09-04 09:01:40.618[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 1 msec}
2025-09-04 09:01:40.619[DEBUG] : <==      Total: 1
2025-09-04 09:01:49.286[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:01:49.287[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 09:01:49.288[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 1 msec}
2025-09-04 09:01:49.289[DEBUG] : <==      Total: 1
2025-09-04 09:01:49.293[DEBUG] : Secure-Page_UserDetails: [ROLE_ADMIN]
2025-09-04 09:01:49.337[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:01:49.337[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 09:01:49.338[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 1 msec}
2025-09-04 09:01:49.339[DEBUG] : <==      Total: 1
2025-09-04 09:01:49.354[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:01:49.354[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 09:01:49.355[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 1 msec}
2025-09-04 09:01:49.356[DEBUG] : <==      Total: 1
2025-09-04 09:04:35.742[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:04:35.743[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 09:04:35.744[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 0 msec}
2025-09-04 09:04:35.745[DEBUG] : <==      Total: 1
2025-09-04 09:05:02.797[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:05:02.797[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-04 09:05:02.798[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-04 09:05:02.798[DEBUG] : <==      Total: 1
2025-09-04 09:05:02.902[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:05:02.902[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-04 09:05:02.903[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-04 09:05:02.904[DEBUG] : <==      Total: 1
2025-09-04 09:05:02.930[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:05:02.930[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-04 09:05:02.931[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-04 09:05:02.932[DEBUG] : <==      Total: 1
2025-09-04 09:05:02.936[DEBUG] : Secure-Page_UserDetails: [ROLE_USER]
2025-09-04 09:05:03.022[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:05:03.022[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-04 09:05:03.023[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-04 09:05:03.024[DEBUG] : <==      Total: 1
2025-09-04 09:05:03.033[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:05:03.034[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-04 09:05:03.035[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-04 09:05:03.036[DEBUG] : <==      Total: 1
2025-09-04 09:12:18.521[INFO ] : HikariPool-1 - Shutdown initiated...
2025-09-04 09:12:18.530[INFO ] : HikariPool-1 - Shutdown completed.
2025-09-04 09:12:23.989[INFO ] : Starting SpringBootTemplateApplication using Java 17.0.12 with PID 6024 (D:\Web\Spring\Workspace\SpringBootTemplate\out\production\classes started by IDBS_Oculus in D:\Web\Spring\Workspace\SpringBootTemplate)
2025-09-04 09:12:23.991[DEBUG] : Running with Spring Boot v3.3.12, Spring v6.1.20
2025-09-04 09:12:23.993[INFO ] : No active profile set, falling back to 1 default profile: "default"
2025-09-04 09:12:24.054[INFO ] : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-09-04 09:12:24.054[INFO ] : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-09-04 09:12:26.013[INFO ] : Tomcat initialized with port 8080 (http)
2025-09-04 09:12:26.031[INFO ] : Starting service [Tomcat]
2025-09-04 09:12:26.032[INFO ] : Starting Servlet engine: [Apache Tomcat/10.1.41]
2025-09-04 09:12:26.327[INFO ] : At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2025-09-04 09:12:26.339[INFO ] : Initializing Spring embedded WebApplicationContext
2025-09-04 09:12:26.339[INFO ] : Root WebApplicationContext: initialization completed in 2284 ms
2025-09-04 09:12:26.776[DEBUG] : Filter 'jwtRequestFilter' configured for use
2025-09-04 09:12:26.865[INFO ] : Global AuthenticationManager configured with UserDetailsService bean with name userDetailsServiceImpl
2025-09-04 09:12:27.038[INFO ] : Adding welcome page template: index
2025-09-04 09:12:27.432[INFO ] : LiveReload server is running on port 35729
2025-09-04 09:12:27.486[INFO ] : Tomcat started on port 8080 (http) with context path '/'
2025-09-04 09:12:27.497[INFO ] : Started SpringBootTemplateApplication in 4.268 seconds (process running for 5.341)
2025-09-04 09:13:00.441[INFO ] : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-09-04 09:13:00.442[INFO ] : Initializing Servlet 'dispatcherServlet'
2025-09-04 09:13:00.444[INFO ] : Completed initialization in 2 ms
2025-09-04 09:13:00.609[INFO ] : HikariPool-1 - Starting...
2025-09-04 09:13:00.843[INFO ] : HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@19d797ca
2025-09-04 09:13:00.845[INFO ] : HikariPool-1 - Start completed.
2025-09-04 09:13:00.854[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:13:00.899[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-04 09:13:00.915[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 15 msec}
2025-09-04 09:13:00.946[DEBUG] : <==      Total: 1
2025-09-04 09:13:01.858[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:13:01.858[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-04 09:13:01.860[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 0 msec}
2025-09-04 09:13:01.864[DEBUG] : <==      Total: 1
2025-09-04 09:13:01.875[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:13:01.876[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-04 09:13:01.876[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:13:01.877[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-04 09:13:01.878[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-04 09:13:01.879[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-04 09:13:01.880[DEBUG] : <==      Total: 1
2025-09-04 09:13:01.881[DEBUG] : <==      Total: 1
2025-09-04 09:13:03.760[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:13:03.761[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-04 09:13:03.762[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-04 09:13:03.765[DEBUG] : <==      Total: 1
2025-09-04 09:13:03.826[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:13:03.827[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-04 09:13:03.828[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-04 09:13:03.830[DEBUG] : <==      Total: 1
2025-09-04 09:13:03.845[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:13:03.846[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-04 09:13:03.846[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:13:03.846[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-04 09:13:03.847[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-04 09:13:03.847[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 0 msec}
2025-09-04 09:13:03.849[DEBUG] : <==      Total: 1
2025-09-04 09:13:03.850[DEBUG] : <==      Total: 1
2025-09-04 09:13:03.913[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:13:03.914[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-04 09:13:03.916[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-04 09:13:03.918[DEBUG] : <==      Total: 1
2025-09-04 09:13:16.615[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:13:16.615[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-04 09:13:16.617[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 0 msec}
2025-09-04 09:13:16.618[DEBUG] : <==      Total: 1
2025-09-04 09:13:16.785[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:13:16.785[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 09:13:16.786[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 1 msec}
2025-09-04 09:13:16.787[DEBUG] : <==      Total: 1
2025-09-04 09:13:16.888[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:13:16.889[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 09:13:16.890[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 1 msec}
2025-09-04 09:13:16.891[DEBUG] : <==      Total: 1
2025-09-04 09:13:16.940[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:13:16.940[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 09:13:16.941[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 1 msec}
2025-09-04 09:13:16.943[DEBUG] : <==      Total: 1
2025-09-04 09:13:16.951[DEBUG] : Secure-Page_UserDetails: [ROLE_ADMIN]
2025-09-04 09:13:17.175[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:13:17.176[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 09:13:17.178[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 1 msec}
2025-09-04 09:13:17.180[DEBUG] : <==      Total: 1
2025-09-04 09:13:17.192[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:13:17.199[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 09:13:17.201[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 1 msec}
2025-09-04 09:13:17.203[DEBUG] : <==      Total: 1
2025-09-04 09:13:26.755[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:13:26.756[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 09:13:26.757[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 1 msec}
2025-09-04 09:13:26.761[DEBUG] : <==      Total: 1
2025-09-04 09:13:26.889[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:13:26.889[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 09:13:26.890[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 1 msec}
2025-09-04 09:13:26.891[DEBUG] : <==      Total: 1
2025-09-04 09:13:26.904[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:13:26.905[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 09:13:26.906[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 1 msec}
2025-09-04 09:13:26.907[DEBUG] : <==      Total: 1
2025-09-04 09:13:31.963[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:13:31.963[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 09:13:31.964[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 1 msec}
2025-09-04 09:13:31.965[DEBUG] : <==      Total: 1
2025-09-04 09:13:31.970[DEBUG] : Secure-Page_UserDetails: [ROLE_ADMIN]
2025-09-04 09:13:32.075[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:13:32.075[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 09:13:32.077[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 1 msec}
2025-09-04 09:13:32.078[DEBUG] : <==      Total: 1
2025-09-04 09:13:32.081[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:13:32.082[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 09:13:32.083[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 1 msec}
2025-09-04 09:13:32.085[DEBUG] : <==      Total: 1
2025-09-04 09:13:34.822[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:13:34.823[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 09:13:34.824[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 1 msec}
2025-09-04 09:13:34.825[DEBUG] : <==      Total: 1
2025-09-04 09:14:06.194[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:14:06.194[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 09:14:06.195[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 1 msec}
2025-09-04 09:14:06.197[DEBUG] : <==      Total: 1
2025-09-04 09:14:06.300[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:14:06.300[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 09:14:06.301[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 1 msec}
2025-09-04 09:14:06.302[DEBUG] : <==      Total: 1
2025-09-04 09:14:06.329[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:14:06.330[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 09:14:06.331[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 1 msec}
2025-09-04 09:14:06.332[DEBUG] : <==      Total: 1
2025-09-04 09:14:06.338[DEBUG] : Secure-Page_UserDetails: [ROLE_ADMIN]
2025-09-04 09:14:06.533[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:14:06.533[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 09:14:06.535[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 0 msec}
2025-09-04 09:14:06.536[DEBUG] : <==      Total: 1
2025-09-04 09:14:06.545[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:14:06.545[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 09:14:06.546[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 1 msec}
2025-09-04 09:14:06.547[DEBUG] : <==      Total: 1
2025-09-04 09:14:16.779[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:14:16.779[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 09:14:16.780[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 1 msec}
2025-09-04 09:14:16.781[DEBUG] : <==      Total: 1
2025-09-04 09:14:16.832[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:14:16.833[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:14:16.833[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 09:14:16.833[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 09:14:16.834[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 1 msec}
2025-09-04 09:14:16.834[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 1 msec}
2025-09-04 09:14:16.835[DEBUG] : <==      Total: 1
2025-09-04 09:14:16.835[DEBUG] : <==      Total: 1
2025-09-04 09:14:20.594[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:14:20.594[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 09:14:20.595[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 1 msec}
2025-09-04 09:14:20.596[DEBUG] : <==      Total: 1
2025-09-04 09:14:20.601[DEBUG] : Secure-Page_UserDetails: [ROLE_ADMIN]
2025-09-04 09:14:20.688[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:14:20.688[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 09:14:20.690[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 1 msec}
2025-09-04 09:14:20.691[DEBUG] : <==      Total: 1
2025-09-04 09:14:20.697[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:14:20.698[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 09:14:20.699[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 1 msec}
2025-09-04 09:14:20.700[DEBUG] : <==      Total: 1
2025-09-04 09:14:21.871[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:14:21.872[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 09:14:21.873[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 0 msec}
2025-09-04 09:14:21.874[DEBUG] : <==      Total: 1
2025-09-04 09:14:32.997[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:14:32.997[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-04 09:14:32.998[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 0 msec}
2025-09-04 09:14:32.999[DEBUG] : <==      Total: 1
2025-09-04 09:14:33.103[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:14:33.103[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-04 09:14:33.104[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-04 09:14:33.105[DEBUG] : <==      Total: 1
2025-09-04 09:14:33.134[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:14:33.134[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-04 09:14:33.135[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-04 09:14:33.137[DEBUG] : <==      Total: 1
2025-09-04 09:14:33.142[DEBUG] : Secure-Page_UserDetails: [ROLE_USER]
2025-09-04 09:14:33.246[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:14:33.247[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-04 09:14:33.248[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-04 09:14:33.249[DEBUG] : <==      Total: 1
2025-09-04 09:14:33.274[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:14:33.275[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-04 09:14:33.276[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-04 09:14:33.278[DEBUG] : <==      Total: 1
2025-09-04 09:14:36.003[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:14:36.003[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-04 09:14:36.004[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-04 09:14:36.005[DEBUG] : <==      Total: 1
2025-09-04 09:14:36.074[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:14:36.075[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-04 09:14:36.076[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-04 09:14:36.077[DEBUG] : <==      Total: 1
2025-09-04 09:14:42.946[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:14:42.946[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-04 09:14:42.947[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-04 09:14:42.948[DEBUG] : <==      Total: 1
2025-09-04 09:14:43.032[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:14:43.033[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-04 09:14:43.034[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-04 09:14:43.035[DEBUG] : <==      Total: 1
2025-09-04 09:14:43.055[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:14:43.055[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-04 09:14:43.055[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:14:43.056[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-04 09:14:43.056[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-04 09:14:43.057[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 0 msec}
2025-09-04 09:14:43.057[DEBUG] : <==      Total: 1
2025-09-04 09:14:43.058[DEBUG] : <==      Total: 1
2025-09-04 09:14:45.147[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:14:45.148[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-04 09:14:45.148[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 0 msec}
2025-09-04 09:14:45.149[DEBUG] : <==      Total: 1
2025-09-04 09:14:45.152[DEBUG] : Secure-Page_UserDetails: [ROLE_USER]
2025-09-04 09:14:45.208[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:14:45.208[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-04 09:14:45.209[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-04 09:14:45.210[DEBUG] : <==      Total: 1
2025-09-04 09:14:45.235[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:14:45.235[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-04 09:14:45.236[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-04 09:14:45.237[DEBUG] : <==      Total: 1
2025-09-04 09:14:53.462[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:14:53.462[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-04 09:14:53.463[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-04 09:14:53.464[DEBUG] : <==      Total: 1
2025-09-04 09:14:53.572[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:14:53.572[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-04 09:14:53.573[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-04 09:14:53.574[DEBUG] : <==      Total: 1
2025-09-04 09:14:54.953[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:14:54.953[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-04 09:14:54.954[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-04 09:14:54.955[DEBUG] : <==      Total: 1
2025-09-04 09:14:54.997[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:14:54.998[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-04 09:14:54.998[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:14:54.998[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-04 09:14:54.999[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-04 09:14:54.999[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-04 09:14:55.000[DEBUG] : <==      Total: 1
2025-09-04 09:14:55.000[DEBUG] : <==      Total: 1
2025-09-04 09:14:55.009[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:14:55.010[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-04 09:14:55.011[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 0 msec}
2025-09-04 09:14:55.012[DEBUG] : <==      Total: 1
2025-09-04 09:14:57.363[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:14:57.363[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-04 09:14:57.364[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-04 09:14:57.365[DEBUG] : <==      Total: 1
2025-09-04 09:14:57.368[DEBUG] : Secure-Page_UserDetails: [ROLE_USER]
2025-09-04 09:14:57.461[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:14:57.461[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-04 09:14:57.462[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-04 09:14:57.463[DEBUG] : <==      Total: 1
2025-09-04 09:14:57.471[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:14:57.472[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-04 09:14:57.473[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-04 09:14:57.474[DEBUG] : <==      Total: 1
2025-09-04 09:14:58.852[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:14:58.853[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-04 09:14:58.855[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 2 msec}
2025-09-04 09:14:58.856[DEBUG] : <==      Total: 1
2025-09-04 09:15:11.550[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:15:11.550[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 09:15:11.551[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 1 msec}
2025-09-04 09:15:11.552[DEBUG] : <==      Total: 1
2025-09-04 09:15:11.672[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:15:11.672[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 09:15:11.673[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 1 msec}
2025-09-04 09:15:11.674[DEBUG] : <==      Total: 1
2025-09-04 09:15:11.701[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:15:11.702[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 09:15:11.703[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 1 msec}
2025-09-04 09:15:11.704[DEBUG] : <==      Total: 1
2025-09-04 09:15:11.709[DEBUG] : Secure-Page_UserDetails: [ROLE_ADMIN]
2025-09-04 09:15:11.809[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:15:11.809[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:15:11.809[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 09:15:11.810[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 09:15:11.811[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 0 msec}
2025-09-04 09:15:11.811[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 1 msec}
2025-09-04 09:15:11.812[DEBUG] : <==      Total: 1
2025-09-04 09:15:11.812[DEBUG] : <==      Total: 1
2025-09-04 09:15:14.938[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:15:14.939[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 09:15:14.940[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 1 msec}
2025-09-04 09:15:14.941[DEBUG] : <==      Total: 1
2025-09-04 09:15:15.000[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:15:15.000[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 09:15:15.001[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 1 msec}
2025-09-04 09:15:15.002[DEBUG] : <==      Total: 1
2025-09-04 09:15:15.023[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:15:15.024[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 09:15:15.025[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 1 msec}
2025-09-04 09:15:15.026[DEBUG] : <==      Total: 1
2025-09-04 09:15:20.459[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:15:20.459[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 09:15:20.464[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 5 msec}
2025-09-04 09:15:20.465[DEBUG] : <==      Total: 1
2025-09-04 09:15:20.470[DEBUG] : Secure-Page_UserDetails: [ROLE_ADMIN]
2025-09-04 09:15:20.576[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:15:20.576[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 09:15:20.577[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 1 msec}
2025-09-04 09:15:20.578[DEBUG] : <==      Total: 1
2025-09-04 09:15:20.588[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:15:20.589[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 09:15:20.590[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 0 msec}
2025-09-04 09:15:20.591[DEBUG] : <==      Total: 1
2025-09-04 09:15:22.538[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:15:22.538[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 09:15:22.539[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 1 msec}
2025-09-04 09:15:22.540[DEBUG] : <==      Total: 1
2025-09-04 09:15:22.598[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:15:22.598[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 09:15:22.599[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 1 msec}
2025-09-04 09:15:22.601[DEBUG] : <==      Total: 1
2025-09-04 09:15:22.626[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:15:22.627[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 09:15:22.629[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 1 msec}
2025-09-04 09:15:22.630[DEBUG] : <==      Total: 1
2025-09-04 09:16:35.928[INFO ] : HikariPool-1 - Shutdown initiated...
2025-09-04 09:16:35.935[INFO ] : HikariPool-1 - Shutdown completed.
2025-09-04 09:19:20.242[INFO ] : Starting SpringBootTemplateApplication using Java 17.0.12 with PID 16288 (D:\Web\Spring\Workspace\SpringBootTemplate\out\production\classes started by IDBS_Oculus in D:\Web\Spring\Workspace\SpringBootTemplate)
2025-09-04 09:19:20.243[DEBUG] : Running with Spring Boot v3.3.12, Spring v6.1.20
2025-09-04 09:19:20.244[INFO ] : No active profile set, falling back to 1 default profile: "default"
2025-09-04 09:19:20.310[INFO ] : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-09-04 09:19:20.310[INFO ] : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-09-04 09:19:21.819[INFO ] : Tomcat initialized with port 8080 (http)
2025-09-04 09:19:21.834[INFO ] : Starting service [Tomcat]
2025-09-04 09:19:21.834[INFO ] : Starting Servlet engine: [Apache Tomcat/10.1.41]
2025-09-04 09:19:22.067[INFO ] : At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2025-09-04 09:19:22.079[INFO ] : Initializing Spring embedded WebApplicationContext
2025-09-04 09:19:22.080[INFO ] : Root WebApplicationContext: initialization completed in 1769 ms
2025-09-04 09:19:22.434[DEBUG] : Filter 'jwtRequestFilter' configured for use
2025-09-04 09:19:22.508[INFO ] : Global AuthenticationManager configured with UserDetailsService bean with name userDetailsServiceImpl
2025-09-04 09:19:22.656[INFO ] : Adding welcome page template: index
2025-09-04 09:19:23.023[INFO ] : LiveReload server is running on port 35729
2025-09-04 09:19:23.077[INFO ] : Tomcat started on port 8080 (http) with context path '/'
2025-09-04 09:19:23.087[INFO ] : Started SpringBootTemplateApplication in 3.621 seconds (process running for 4.482)
2025-09-04 09:19:31.526[INFO ] : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-09-04 09:19:31.526[INFO ] : Initializing Servlet 'dispatcherServlet'
2025-09-04 09:19:31.528[INFO ] : Completed initialization in 1 ms
2025-09-04 09:19:31.674[INFO ] : HikariPool-1 - Starting...
2025-09-04 09:19:31.907[INFO ] : HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@19d797ca
2025-09-04 09:19:31.909[INFO ] : HikariPool-1 - Start completed.
2025-09-04 09:19:31.920[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:19:31.965[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 09:19:31.979[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 13 msec}
2025-09-04 09:19:32.003[DEBUG] : <==      Total: 1
2025-09-04 09:19:32.963[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:19:32.963[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:19:32.963[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 09:19:32.963[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 09:19:32.964[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 1 msec}
2025-09-04 09:19:32.965[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 0 msec}
2025-09-04 09:19:32.967[DEBUG] : <==      Total: 1
2025-09-04 09:19:32.967[DEBUG] : <==      Total: 1
2025-09-04 09:19:32.984[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:19:32.985[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 09:19:32.986[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 1 msec}
2025-09-04 09:19:32.990[DEBUG] : <==      Total: 1
2025-09-04 09:19:42.176[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:19:42.177[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 09:19:42.178[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 1 msec}
2025-09-04 09:19:42.179[DEBUG] : <==      Total: 1
2025-09-04 09:19:42.349[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:19:42.349[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 09:19:42.350[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 1 msec}
2025-09-04 09:19:42.351[DEBUG] : <==      Total: 1
2025-09-04 09:19:42.454[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:19:42.455[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 09:19:42.456[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 1 msec}
2025-09-04 09:19:42.458[DEBUG] : <==      Total: 1
2025-09-04 09:19:42.516[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:19:42.516[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 09:19:42.517[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 1 msec}
2025-09-04 09:19:42.520[DEBUG] : <==      Total: 1
2025-09-04 09:19:42.529[DEBUG] : Secure-Page_UserDetails: [ROLE_ADMIN]
2025-09-04 09:19:42.723[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:19:42.724[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 09:19:42.726[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 1 msec}
2025-09-04 09:19:42.729[DEBUG] : <==      Total: 1
2025-09-04 09:19:42.757[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:19:42.758[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 09:19:42.761[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 1 msec}
2025-09-04 09:19:42.764[DEBUG] : <==      Total: 1
2025-09-04 09:19:44.192[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:19:44.193[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 09:19:44.195[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 1 msec}
2025-09-04 09:19:44.196[DEBUG] : <==      Total: 1
2025-09-04 09:19:52.573[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:19:52.574[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 09:19:52.575[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 0 msec}
2025-09-04 09:19:52.576[DEBUG] : <==      Total: 1
2025-09-04 09:19:52.702[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:19:52.702[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 09:19:52.703[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 1 msec}
2025-09-04 09:19:52.704[DEBUG] : <==      Total: 1
2025-09-04 09:19:52.729[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:19:52.729[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 09:19:52.731[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 0 msec}
2025-09-04 09:19:52.732[DEBUG] : <==      Total: 1
2025-09-04 09:19:52.737[DEBUG] : Secure-Page_UserDetails: [ROLE_ADMIN]
2025-09-04 09:19:52.771[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:19:52.772[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 09:19:52.773[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 1 msec}
2025-09-04 09:19:52.774[DEBUG] : <==      Total: 1
2025-09-04 09:19:52.786[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:19:52.788[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 09:19:52.790[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 1 msec}
2025-09-04 09:19:52.795[DEBUG] : <==      Total: 1
2025-09-04 09:19:58.701[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:19:58.702[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 09:19:58.703[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 1 msec}
2025-09-04 09:19:58.704[DEBUG] : <==      Total: 1
2025-09-04 09:19:58.876[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:19:58.877[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 09:19:58.881[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 1 msec}
2025-09-04 09:19:58.882[DEBUG] : <==      Total: 1
2025-09-04 09:19:58.884[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:19:58.885[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 09:19:58.886[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 0 msec}
2025-09-04 09:19:58.887[DEBUG] : <==      Total: 1
2025-09-04 09:20:01.324[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:20:01.324[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 09:20:01.325[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 1 msec}
2025-09-04 09:20:01.327[DEBUG] : <==      Total: 1
2025-09-04 09:20:01.331[DEBUG] : Secure-Page_UserDetails: [ROLE_ADMIN]
2025-09-04 09:20:01.381[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:20:01.381[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 09:20:01.382[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 1 msec}
2025-09-04 09:20:01.383[DEBUG] : <==      Total: 1
2025-09-04 09:20:01.396[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:20:01.397[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 09:20:01.398[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 1 msec}
2025-09-04 09:20:01.400[DEBUG] : <==      Total: 1
2025-09-04 09:22:34.081[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:22:34.081[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 09:22:34.081[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 0 msec}
2025-09-04 09:22:34.084[DEBUG] : <==      Total: 1
2025-09-04 09:22:34.190[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:22:34.191[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 09:22:34.192[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 0 msec}
2025-09-04 09:22:34.193[DEBUG] : <==      Total: 1
2025-09-04 09:22:34.222[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:22:34.222[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 09:22:34.223[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 1 msec}
2025-09-04 09:22:34.224[DEBUG] : <==      Total: 1
2025-09-04 09:22:34.229[DEBUG] : Secure-Page_UserDetails: [ROLE_ADMIN]
2025-09-04 09:22:34.283[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:22:34.284[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 09:22:34.286[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 1 msec}
2025-09-04 09:22:34.289[DEBUG] : <==      Total: 1
2025-09-04 09:22:34.313[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:22:34.314[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 09:22:34.315[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 1 msec}
2025-09-04 09:22:34.317[DEBUG] : <==      Total: 1
2025-09-04 09:22:36.515[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:22:36.516[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 09:22:36.516[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 0 msec}
2025-09-04 09:22:36.517[DEBUG] : <==      Total: 1
2025-09-04 09:22:36.613[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:22:36.613[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 09:22:36.613[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:22:36.614[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 09:22:36.614[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 1 msec}
2025-09-04 09:22:36.615[DEBUG] : <==      Total: 1
2025-09-04 09:22:36.615[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 1 msec}
2025-09-04 09:22:36.616[DEBUG] : <==      Total: 1
2025-09-04 09:22:37.711[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:22:37.711[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 09:22:37.712[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 1 msec}
2025-09-04 09:22:37.713[DEBUG] : <==      Total: 1
2025-09-04 09:22:37.716[DEBUG] : Secure-Page_UserDetails: [ROLE_ADMIN]
2025-09-04 09:22:37.752[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:22:37.752[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 09:22:37.753[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 1 msec}
2025-09-04 09:22:37.754[DEBUG] : <==      Total: 1
2025-09-04 09:22:37.792[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:22:37.792[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 09:22:37.794[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 0 msec}
2025-09-04 09:22:37.795[DEBUG] : <==      Total: 1
2025-09-04 09:22:38.783[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:22:38.783[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 09:22:38.784[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 1 msec}
2025-09-04 09:22:38.784[DEBUG] : <==      Total: 1
2025-09-04 09:22:38.880[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:22:38.880[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 09:22:38.881[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 1 msec}
2025-09-04 09:22:38.882[DEBUG] : <==      Total: 1
2025-09-04 09:22:38.887[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:22:38.888[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 09:22:38.889[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 0 msec}
2025-09-04 09:22:38.891[DEBUG] : <==      Total: 1
2025-09-04 09:22:40.094[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:22:40.095[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 09:22:40.097[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 0 msec}
2025-09-04 09:22:40.098[DEBUG] : <==      Total: 1
2025-09-04 09:22:40.102[DEBUG] : Secure-Page_UserDetails: [ROLE_ADMIN]
2025-09-04 09:22:40.144[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:22:40.144[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 09:22:40.145[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 1 msec}
2025-09-04 09:22:40.146[DEBUG] : <==      Total: 1
2025-09-04 09:22:40.174[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:22:40.174[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 09:22:40.176[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 1 msec}
2025-09-04 09:22:40.177[DEBUG] : <==      Total: 1
2025-09-04 09:27:17.117[INFO ] : HikariPool-1 - Shutdown initiated...
2025-09-04 09:27:17.126[INFO ] : HikariPool-1 - Shutdown completed.
2025-09-04 09:28:30.062[INFO ] : Starting SpringBootTemplateApplication using Java 17.0.12 with PID 1992 (D:\Web\Spring\Workspace\SpringBootTemplate\out\production\classes started by IDBS_Oculus in D:\Web\Spring\Workspace\SpringBootTemplate)
2025-09-04 09:28:30.064[DEBUG] : Running with Spring Boot v3.3.12, Spring v6.1.20
2025-09-04 09:28:30.065[INFO ] : No active profile set, falling back to 1 default profile: "default"
2025-09-04 09:28:30.120[INFO ] : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-09-04 09:28:30.120[INFO ] : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-09-04 09:28:31.538[INFO ] : Tomcat initialized with port 8080 (http)
2025-09-04 09:28:31.552[INFO ] : Starting service [Tomcat]
2025-09-04 09:28:31.553[INFO ] : Starting Servlet engine: [Apache Tomcat/10.1.41]
2025-09-04 09:28:31.747[INFO ] : At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2025-09-04 09:28:31.758[INFO ] : Initializing Spring embedded WebApplicationContext
2025-09-04 09:28:31.759[INFO ] : Root WebApplicationContext: initialization completed in 1638 ms
2025-09-04 09:28:32.102[DEBUG] : Filter 'jwtRequestFilter' configured for use
2025-09-04 09:28:32.172[INFO ] : Global AuthenticationManager configured with UserDetailsService bean with name userDetailsServiceImpl
2025-09-04 09:28:32.298[INFO ] : Adding welcome page template: index
2025-09-04 09:28:32.709[INFO ] : LiveReload server is running on port 35729
2025-09-04 09:28:32.759[INFO ] : Tomcat started on port 8080 (http) with context path '/'
2025-09-04 09:28:32.770[INFO ] : Started SpringBootTemplateApplication in 3.437 seconds (process running for 4.35)
2025-09-04 09:28:56.544[INFO ] : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-09-04 09:28:56.545[INFO ] : Initializing Servlet 'dispatcherServlet'
2025-09-04 09:28:56.546[INFO ] : Completed initialization in 1 ms
2025-09-04 09:29:05.020[INFO ] : HikariPool-1 - Starting...
2025-09-04 09:29:05.183[INFO ] : HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@8c428c3
2025-09-04 09:29:05.185[INFO ] : HikariPool-1 - Start completed.
2025-09-04 09:29:05.192[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:29:05.222[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-04 09:29:05.236[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 13 msec}
2025-09-04 09:29:05.270[DEBUG] : <==      Total: 1
2025-09-04 09:29:05.363[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:29:05.364[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-04 09:29:05.365[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-04 09:29:05.366[DEBUG] : <==      Total: 1
2025-09-04 09:29:05.487[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:29:05.488[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-04 09:29:05.489[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-04 09:29:05.492[DEBUG] : <==      Total: 1
2025-09-04 09:29:05.599[DEBUG] : Secure-Page_UserDetails: [ROLE_USER]
2025-09-04 09:29:05.897[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:29:05.898[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-04 09:29:05.899[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-04 09:29:05.902[DEBUG] : <==      Total: 1
2025-09-04 09:29:05.931[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:29:05.931[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-04 09:29:05.933[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-04 09:29:05.935[DEBUG] : <==      Total: 1
2025-09-04 09:29:08.306[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:29:08.307[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-04 09:29:08.308[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-04 09:29:08.310[DEBUG] : <==      Total: 1
2025-09-04 09:29:08.430[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:29:08.430[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-04 09:29:08.432[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-04 09:29:08.434[DEBUG] : <==      Total: 1
2025-09-04 09:29:14.442[INFO ] : HikariPool-1 - Shutdown initiated...
2025-09-04 09:29:14.450[INFO ] : HikariPool-1 - Shutdown completed.
2025-09-04 09:29:23.024[INFO ] : Starting SpringBootTemplateApplication using Java 17.0.12 with PID 1532 (D:\Web\Spring\Workspace\SpringBootTemplate\out\production\classes started by IDBS_Oculus in D:\Web\Spring\Workspace\SpringBootTemplate)
2025-09-04 09:29:23.026[DEBUG] : Running with Spring Boot v3.3.12, Spring v6.1.20
2025-09-04 09:29:23.028[INFO ] : No active profile set, falling back to 1 default profile: "default"
2025-09-04 09:29:23.127[INFO ] : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-09-04 09:29:23.128[INFO ] : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-09-04 09:29:25.080[INFO ] : Tomcat initialized with port 8080 (http)
2025-09-04 09:29:25.099[INFO ] : Starting service [Tomcat]
2025-09-04 09:29:25.100[INFO ] : Starting Servlet engine: [Apache Tomcat/10.1.41]
2025-09-04 09:29:25.351[INFO ] : At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2025-09-04 09:29:25.364[INFO ] : Initializing Spring embedded WebApplicationContext
2025-09-04 09:29:25.365[INFO ] : Root WebApplicationContext: initialization completed in 2236 ms
2025-09-04 09:29:25.823[DEBUG] : Filter 'jwtRequestFilter' configured for use
2025-09-04 09:29:25.916[INFO ] : Global AuthenticationManager configured with UserDetailsService bean with name userDetailsServiceImpl
2025-09-04 09:29:26.070[INFO ] : Adding welcome page template: index
2025-09-04 09:29:26.519[INFO ] : LiveReload server is running on port 35729
2025-09-04 09:29:26.585[INFO ] : Tomcat started on port 8080 (http) with context path '/'
2025-09-04 09:29:26.598[INFO ] : Started SpringBootTemplateApplication in 5.036 seconds (process running for 6.794)
2025-09-04 09:29:42.372[INFO ] : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-09-04 09:29:42.372[INFO ] : Initializing Servlet 'dispatcherServlet'
2025-09-04 09:29:42.373[INFO ] : Completed initialization in 1 ms
2025-09-04 09:29:42.524[INFO ] : HikariPool-1 - Starting...
2025-09-04 09:29:42.771[INFO ] : HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@2dab16d3
2025-09-04 09:29:42.774[INFO ] : HikariPool-1 - Start completed.
2025-09-04 09:29:42.784[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:29:42.822[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-04 09:29:42.835[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 13 msec}
2025-09-04 09:29:42.858[DEBUG] : <==      Total: 1
2025-09-04 09:29:43.738[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:29:43.738[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-04 09:29:43.740[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-04 09:29:43.744[DEBUG] : <==      Total: 1
2025-09-04 09:29:43.753[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:29:43.754[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-04 09:29:43.756[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-04 09:29:43.759[DEBUG] : <==      Total: 1
2025-09-04 09:29:43.794[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:29:43.795[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-04 09:29:43.796[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-04 09:29:43.799[DEBUG] : <==      Total: 1
2025-09-04 09:30:16.420[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:30:16.421[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-04 09:30:16.422[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 0 msec}
2025-09-04 09:30:16.423[DEBUG] : <==      Total: 1
2025-09-04 09:30:16.620[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:30:16.621[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-04 09:30:16.622[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 0 msec}
2025-09-04 09:30:16.623[DEBUG] : <==      Total: 1
2025-09-04 09:30:16.711[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:30:16.712[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-04 09:30:16.713[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-04 09:30:16.714[DEBUG] : <==      Total: 1
2025-09-04 09:30:16.778[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:30:16.779[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-04 09:30:16.780[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-04 09:30:16.782[DEBUG] : <==      Total: 1
2025-09-04 09:30:16.790[DEBUG] : Secure-Page_UserDetails: [ROLE_USER]
2025-09-04 09:30:17.032[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:30:17.032[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-04 09:30:17.034[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-04 09:30:17.036[DEBUG] : <==      Total: 1
2025-09-04 09:30:22.322[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:30:22.325[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-04 09:30:23.178[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-04 09:30:23.630[DEBUG] : <==      Total: 1
2025-09-04 09:30:35.373[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:30:35.373[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-04 09:30:35.374[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-04 09:30:35.375[DEBUG] : <==      Total: 1
2025-09-04 09:30:48.154[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:30:48.154[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-04 09:30:48.156[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-04 09:30:48.157[DEBUG] : <==      Total: 1
2025-09-04 09:31:32.940[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:31:32.940[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-04 09:31:32.941[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-04 09:31:32.943[DEBUG] : <==      Total: 1
2025-09-04 09:31:33.031[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:31:33.031[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-04 09:31:33.031[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:31:33.032[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-04 09:31:33.033[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-04 09:31:33.034[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-04 09:31:33.034[DEBUG] : <==      Total: 1
2025-09-04 09:31:33.035[DEBUG] : <==      Total: 1
2025-09-04 09:31:35.508[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:31:35.509[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-04 09:31:35.511[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-04 09:31:35.517[DEBUG] : <==      Total: 1
2025-09-04 09:31:45.423[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:31:45.424[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-04 09:31:45.425[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 0 msec}
2025-09-04 09:31:45.426[DEBUG] : <==      Total: 1
2025-09-04 09:31:45.431[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:31:45.432[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-04 09:31:45.433[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 0 msec}
2025-09-04 09:31:45.434[DEBUG] : <==      Total: 1
2025-09-04 09:31:45.531[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:31:45.531[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-04 09:31:45.532[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-04 09:31:45.533[DEBUG] : <==      Total: 1
2025-09-04 09:31:45.561[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:31:45.561[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-04 09:31:45.563[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 0 msec}
2025-09-04 09:31:45.564[DEBUG] : <==      Total: 1
2025-09-04 09:31:45.569[DEBUG] : Secure-Page_UserDetails: [ROLE_USER]
2025-09-04 09:31:45.601[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:31:45.602[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-04 09:31:45.603[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-04 09:31:45.604[DEBUG] : <==      Total: 1
2025-09-04 09:31:45.700[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:31:45.700[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-04 09:31:45.702[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-04 09:31:45.703[DEBUG] : <==      Total: 1
2025-09-04 09:31:50.323[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:31:50.324[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-04 09:31:50.325[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-04 09:31:50.327[DEBUG] : <==      Total: 1
2025-09-04 09:32:17.718[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 09:32:17.719[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-04 09:32:17.719[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 0 msec}
2025-09-04 09:32:17.720[DEBUG] : <==      Total: 1
2025-09-04 09:32:28.277[INFO ] : HikariPool-1 - Shutdown initiated...
2025-09-04 09:32:28.286[INFO ] : HikariPool-1 - Shutdown completed.
2025-09-04 10:03:03.826[INFO ] : Starting SpringBootTemplateApplication using Java 17.0.12 with PID 6832 (D:\Web\Spring\Workspace\SpringBootTemplate\out\production\classes started by IDBS_Oculus in D:\Web\Spring\Workspace\SpringBootTemplate)
2025-09-04 10:03:03.828[DEBUG] : Running with Spring Boot v3.3.12, Spring v6.1.20
2025-09-04 10:03:03.829[INFO ] : No active profile set, falling back to 1 default profile: "default"
2025-09-04 10:03:03.891[INFO ] : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-09-04 10:03:03.891[INFO ] : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-09-04 10:03:05.481[INFO ] : Tomcat initialized with port 8080 (http)
2025-09-04 10:03:05.496[INFO ] : Starting service [Tomcat]
2025-09-04 10:03:05.496[INFO ] : Starting Servlet engine: [Apache Tomcat/10.1.41]
2025-09-04 10:03:05.726[INFO ] : At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2025-09-04 10:03:05.735[INFO ] : Initializing Spring embedded WebApplicationContext
2025-09-04 10:03:05.736[INFO ] : Root WebApplicationContext: initialization completed in 1844 ms
2025-09-04 10:03:06.101[DEBUG] : Filter 'jwtRequestFilter' configured for use
2025-09-04 10:03:06.169[INFO ] : Global AuthenticationManager configured with UserDetailsService bean with name userDetailsServiceImpl
2025-09-04 10:03:06.312[INFO ] : Adding welcome page template: index
2025-09-04 10:03:06.709[INFO ] : LiveReload server is running on port 35729
2025-09-04 10:03:06.762[INFO ] : Tomcat started on port 8080 (http) with context path '/'
2025-09-04 10:03:06.773[INFO ] : Started SpringBootTemplateApplication in 3.763 seconds (process running for 4.738)
2025-09-04 10:03:14.689[INFO ] : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-09-04 10:03:14.689[INFO ] : Initializing Servlet 'dispatcherServlet'
2025-09-04 10:03:14.691[INFO ] : Completed initialization in 2 ms
2025-09-04 10:03:14.801[INFO ] : HikariPool-1 - Starting...
2025-09-04 10:03:14.975[INFO ] : HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@68ee0165
2025-09-04 10:03:14.977[INFO ] : HikariPool-1 - Start completed.
2025-09-04 10:03:14.984[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 10:03:15.015[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-04 10:03:15.025[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 10 msec}
2025-09-04 10:03:15.046[DEBUG] : <==      Total: 1
2025-09-04 10:03:15.864[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 10:03:15.865[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-04 10:03:15.867[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-04 10:03:15.870[DEBUG] : <==      Total: 1
2025-09-04 10:03:15.881[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 10:03:15.882[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-04 10:03:15.884[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-04 10:03:15.887[DEBUG] : <==      Total: 1
2025-09-04 10:03:15.918[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 10:03:15.919[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-04 10:03:15.920[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-04 10:03:15.923[DEBUG] : <==      Total: 1
2025-09-04 10:03:24.634[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 10:03:24.634[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-04 10:03:24.635[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-04 10:03:24.637[DEBUG] : <==      Total: 1
2025-09-04 10:03:24.788[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 10:03:24.789[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-04 10:03:24.790[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-04 10:03:24.791[DEBUG] : <==      Total: 1
2025-09-04 10:03:24.892[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 10:03:24.893[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-04 10:03:24.894[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-04 10:03:24.896[DEBUG] : <==      Total: 1
2025-09-04 10:03:24.958[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 10:03:24.959[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-04 10:03:24.960[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 0 msec}
2025-09-04 10:03:24.961[DEBUG] : <==      Total: 1
2025-09-04 10:03:24.967[DEBUG] : Secure-Page_UserDetails: [ROLE_USER]
2025-09-04 10:03:25.217[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 10:03:25.218[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-04 10:03:25.219[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-04 10:03:25.221[DEBUG] : <==      Total: 1
2025-09-04 10:03:25.229[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 10:03:25.232[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-04 10:03:25.233[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-04 10:03:25.244[DEBUG] : <==      Total: 1
2025-09-04 10:03:27.001[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 10:03:27.002[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-04 10:03:27.003[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-04 10:03:27.004[DEBUG] : <==      Total: 1
2025-09-04 10:03:37.968[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 10:03:37.969[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-04 10:03:37.970[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-04 10:03:37.972[DEBUG] : <==      Total: 1
2025-09-04 10:03:38.072[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 10:03:38.073[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-04 10:03:38.074[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 0 msec}
2025-09-04 10:03:38.074[DEBUG] : <==      Total: 1
2025-09-04 10:03:38.101[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 10:03:38.102[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-04 10:03:38.103[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-04 10:03:38.105[DEBUG] : <==      Total: 1
2025-09-04 10:03:38.109[DEBUG] : Secure-Page_UserDetails: [ROLE_USER]
2025-09-04 10:03:38.193[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 10:03:38.194[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-04 10:03:38.195[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-04 10:03:38.197[DEBUG] : <==      Total: 1
2025-09-04 10:03:38.227[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 10:03:38.229[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-04 10:03:38.231[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-04 10:03:38.239[DEBUG] : <==      Total: 1
2025-09-04 10:03:40.229[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 10:03:40.229[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-04 10:03:40.230[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-04 10:03:40.231[DEBUG] : <==      Total: 1
2025-09-04 10:03:40.309[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 10:03:40.310[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-04 10:03:40.311[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-04 10:03:40.312[DEBUG] : <==      Total: 1
2025-09-04 10:04:45.948[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 10:04:45.949[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-04 10:04:45.950[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 0 msec}
2025-09-04 10:04:45.950[DEBUG] : <==      Total: 1
2025-09-04 10:04:46.057[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 10:04:46.058[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-04 10:04:46.059[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-04 10:04:46.061[DEBUG] : <==      Total: 1
2025-09-04 10:05:06.846[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 10:05:06.847[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-04 10:05:06.848[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-04 10:05:06.850[DEBUG] : <==      Total: 1
2025-09-04 10:05:06.887[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 10:05:06.888[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-04 10:05:06.889[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-04 10:05:06.891[DEBUG] : <==      Total: 1
2025-09-04 10:05:06.903[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 10:05:06.904[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-04 10:05:06.905[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-04 10:05:06.907[DEBUG] : <==      Total: 1
2025-09-04 10:05:06.972[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 10:05:06.972[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-04 10:05:06.974[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 2 msec}
2025-09-04 10:05:06.975[DEBUG] : <==      Total: 1
2025-09-04 10:05:08.973[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 10:05:08.973[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-04 10:05:08.974[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-04 10:05:08.975[DEBUG] : <==      Total: 1
2025-09-04 10:05:08.980[DEBUG] : Secure-Page_UserDetails: [ROLE_USER]
2025-09-04 10:05:09.094[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 10:05:09.095[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-04 10:05:09.096[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-04 10:05:09.097[DEBUG] : <==      Total: 1
2025-09-04 10:05:09.098[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 10:05:09.099[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-04 10:05:09.100[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-04 10:05:09.101[DEBUG] : <==      Total: 1
2025-09-04 10:05:10.201[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 10:05:10.202[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-04 10:05:10.203[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-04 10:05:10.204[DEBUG] : <==      Total: 1
2025-09-04 10:05:15.173[INFO ] : HikariPool-1 - Shutdown initiated...
2025-09-04 10:05:15.180[INFO ] : HikariPool-1 - Shutdown completed.
2025-09-04 12:44:16.528[INFO ] : Starting SpringBootTemplateApplication using Java 17.0.12 with PID 19124 (D:\Web\Spring\Workspace\SpringBootTemplate\out\production\classes started by IDBS_Oculus in D:\Web\Spring\Workspace\SpringBootTemplate)
2025-09-04 12:44:16.531[DEBUG] : Running with Spring Boot v3.3.12, Spring v6.1.20
2025-09-04 12:44:16.532[INFO ] : No active profile set, falling back to 1 default profile: "default"
2025-09-04 12:44:16.606[INFO ] : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-09-04 12:44:16.606[INFO ] : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-09-04 12:44:18.175[INFO ] : Tomcat initialized with port 8080 (http)
2025-09-04 12:44:18.189[INFO ] : Starting service [Tomcat]
2025-09-04 12:44:18.190[INFO ] : Starting Servlet engine: [Apache Tomcat/10.1.41]
2025-09-04 12:44:18.405[INFO ] : At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2025-09-04 12:44:18.415[INFO ] : Initializing Spring embedded WebApplicationContext
2025-09-04 12:44:18.416[INFO ] : Root WebApplicationContext: initialization completed in 1809 ms
2025-09-04 12:44:18.761[DEBUG] : Filter 'jwtRequestFilter' configured for use
2025-09-04 12:44:18.838[INFO ] : Global AuthenticationManager configured with UserDetailsService bean with name userDetailsServiceImpl
2025-09-04 12:44:18.988[INFO ] : Adding welcome page template: index
2025-09-04 12:44:19.419[INFO ] : LiveReload server is running on port 35729
2025-09-04 12:44:19.466[INFO ] : Tomcat started on port 8080 (http) with context path '/'
2025-09-04 12:44:19.477[INFO ] : Started SpringBootTemplateApplication in 3.787 seconds (process running for 4.778)
2025-09-04 12:44:42.053[INFO ] : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-09-04 12:44:42.054[INFO ] : Initializing Servlet 'dispatcherServlet'
2025-09-04 12:44:42.055[INFO ] : Completed initialization in 1 ms
2025-09-04 12:50:19.944[INFO ] : Starting SpringBootTemplateApplication using Java 17.0.12 with PID 14068 (D:\Web\Spring\Workspace\SpringBootTemplate\out\production\classes started by IDBS_Oculus in D:\Web\Spring\Workspace\SpringBootTemplate)
2025-09-04 12:50:19.946[DEBUG] : Running with Spring Boot v3.3.12, Spring v6.1.20
2025-09-04 12:50:19.947[INFO ] : No active profile set, falling back to 1 default profile: "default"
2025-09-04 12:50:20.006[INFO ] : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-09-04 12:50:20.007[INFO ] : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-09-04 12:50:21.578[INFO ] : Tomcat initialized with port 8080 (http)
2025-09-04 12:50:21.593[INFO ] : Starting service [Tomcat]
2025-09-04 12:50:21.593[INFO ] : Starting Servlet engine: [Apache Tomcat/10.1.41]
2025-09-04 12:50:21.819[INFO ] : At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2025-09-04 12:50:21.831[INFO ] : Initializing Spring embedded WebApplicationContext
2025-09-04 12:50:21.832[INFO ] : Root WebApplicationContext: initialization completed in 1825 ms
2025-09-04 12:50:22.209[DEBUG] : Filter 'jwtRequestFilter' configured for use
2025-09-04 12:50:22.282[INFO ] : Global AuthenticationManager configured with UserDetailsService bean with name userDetailsServiceImpl
2025-09-04 12:50:22.421[INFO ] : Adding welcome page template: index
2025-09-04 12:50:22.850[INFO ] : LiveReload server is running on port 35729
2025-09-04 12:50:22.897[INFO ] : Tomcat started on port 8080 (http) with context path '/'
2025-09-04 12:50:22.906[INFO ] : Started SpringBootTemplateApplication in 3.692 seconds (process running for 4.673)
2025-09-04 12:50:30.925[INFO ] : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-09-04 12:50:30.926[INFO ] : Initializing Servlet 'dispatcherServlet'
2025-09-04 12:50:30.927[INFO ] : Completed initialization in 1 ms
2025-09-04 12:54:38.753[INFO ] : Starting SpringBootTemplateApplication using Java 17.0.12 with PID 12348 (D:\Web\Spring\Workspace\SpringBootTemplate\out\production\classes started by IDBS_Oculus in D:\Web\Spring\Workspace\SpringBootTemplate)
2025-09-04 12:54:38.754[DEBUG] : Running with Spring Boot v3.3.12, Spring v6.1.20
2025-09-04 12:54:38.755[INFO ] : No active profile set, falling back to 1 default profile: "default"
2025-09-04 12:54:38.809[INFO ] : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-09-04 12:54:38.809[INFO ] : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-09-04 12:54:40.268[INFO ] : Tomcat initialized with port 8080 (http)
2025-09-04 12:54:40.285[INFO ] : Starting service [Tomcat]
2025-09-04 12:54:40.285[INFO ] : Starting Servlet engine: [Apache Tomcat/10.1.41]
2025-09-04 12:54:40.519[INFO ] : At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2025-09-04 12:54:40.531[INFO ] : Initializing Spring embedded WebApplicationContext
2025-09-04 12:54:40.531[INFO ] : Root WebApplicationContext: initialization completed in 1721 ms
2025-09-04 12:54:40.911[DEBUG] : Filter 'jwtRequestFilter' configured for use
2025-09-04 12:54:40.990[INFO ] : Global AuthenticationManager configured with UserDetailsService bean with name userDetailsServiceImpl
2025-09-04 12:54:41.130[INFO ] : Adding welcome page template: index
2025-09-04 12:54:41.547[INFO ] : LiveReload server is running on port 35729
2025-09-04 12:54:41.607[INFO ] : Tomcat started on port 8080 (http) with context path '/'
2025-09-04 12:54:41.618[INFO ] : Started SpringBootTemplateApplication in 3.62 seconds (process running for 4.602)
2025-09-04 12:54:46.665[INFO ] : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-09-04 12:54:46.666[INFO ] : Initializing Servlet 'dispatcherServlet'
2025-09-04 12:54:46.667[INFO ] : Completed initialization in 1 ms
2025-09-04 12:56:28.290[INFO ] : Starting SpringBootTemplateApplication using Java 17.0.12 with PID 11004 (D:\Web\Spring\Workspace\SpringBootTemplate\out\production\classes started by IDBS_Oculus in D:\Web\Spring\Workspace\SpringBootTemplate)
2025-09-04 12:56:28.292[DEBUG] : Running with Spring Boot v3.3.12, Spring v6.1.20
2025-09-04 12:56:28.293[INFO ] : No active profile set, falling back to 1 default profile: "default"
2025-09-04 12:56:28.356[INFO ] : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-09-04 12:56:28.356[INFO ] : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-09-04 12:56:29.862[INFO ] : Tomcat initialized with port 8080 (http)
2025-09-04 12:56:29.877[INFO ] : Starting service [Tomcat]
2025-09-04 12:56:29.877[INFO ] : Starting Servlet engine: [Apache Tomcat/10.1.41]
2025-09-04 12:56:30.103[INFO ] : At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2025-09-04 12:56:30.114[INFO ] : Initializing Spring embedded WebApplicationContext
2025-09-04 12:56:30.114[INFO ] : Root WebApplicationContext: initialization completed in 1757 ms
2025-09-04 12:56:30.494[DEBUG] : Filter 'jwtRequestFilter' configured for use
2025-09-04 12:56:30.573[INFO ] : Global AuthenticationManager configured with UserDetailsService bean with name userDetailsServiceImpl
2025-09-04 12:56:30.715[INFO ] : Adding welcome page template: index
2025-09-04 12:56:31.134[INFO ] : LiveReload server is running on port 35729
2025-09-04 12:56:31.180[INFO ] : Tomcat started on port 8080 (http) with context path '/'
2025-09-04 12:56:31.190[INFO ] : Started SpringBootTemplateApplication in 3.655 seconds (process running for 4.618)
2025-09-04 12:56:34.559[INFO ] : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-09-04 12:56:34.559[INFO ] : Initializing Servlet 'dispatcherServlet'
2025-09-04 12:56:34.560[INFO ] : Completed initialization in 1 ms
2025-09-04 12:57:48.611[INFO ] : HikariPool-1 - Starting...
2025-09-04 12:57:48.771[INFO ] : HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@546fa2cb
2025-09-04 12:57:48.773[INFO ] : HikariPool-1 - Start completed.
2025-09-04 12:57:48.801[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 12:57:48.835[DEBUG] : ==> Parameters: test123(String)
2025-09-04 12:57:48.852[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'test123'
 {executed in 16 msec}
2025-09-04 12:57:48.872[DEBUG] : <==      Total: 0
2025-09-04 12:57:48.988[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO users (username, password, displayname, role)
        VALUES ('test123', '$2a$10$Mdkcd1aFWEqnnMg8enum4OelVseE8VmRL56yyx4UJvpxtYyIhYVHa', '테스트', 'USER')
 {executed in 4 msec}
2025-09-04 12:57:48.989[DEBUG] :  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO users (username, password, displayname, role)
        VALUES ('test123', '$2a$10$Mdkcd1aFWEqnnMg8enum4OelVseE8VmRL56yyx4UJvpxtYyIhYVHa', '테스트', 'USER')
 {executed in 1 msec}
2025-09-04 12:59:07.563[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 12:59:07.565[DEBUG] : ==> Parameters: test123(String)
2025-09-04 12:59:07.566[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'test123'
 {executed in 1 msec}
2025-09-04 12:59:07.571[DEBUG] : <==      Total: 1
2025-09-04 12:59:07.666[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 12:59:07.666[DEBUG] : ==> Parameters: test123(String)
2025-09-04 12:59:07.667[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'test123'
 {executed in 1 msec}
2025-09-04 12:59:07.668[DEBUG] : <==      Total: 1
2025-09-04 12:59:07.769[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 12:59:07.770[DEBUG] : ==> Parameters: test123(String)
2025-09-04 12:59:07.772[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'test123'
 {executed in 1 msec}
2025-09-04 12:59:07.773[DEBUG] : <==      Total: 1
2025-09-04 12:59:07.866[DEBUG] : Secure-Page_UserDetails: [ROLE_USER]
2025-09-04 12:59:08.109[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 12:59:08.110[DEBUG] : ==> Parameters: test123(String)
2025-09-04 12:59:08.111[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'test123'
 {executed in 1 msec}
2025-09-04 12:59:08.113[DEBUG] : <==      Total: 1
2025-09-04 12:59:08.123[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 12:59:08.124[DEBUG] : ==> Parameters: test123(String)
2025-09-04 12:59:08.126[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'test123'
 {executed in 1 msec}
2025-09-04 12:59:08.128[DEBUG] : <==      Total: 1
2025-09-04 12:59:09.621[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 12:59:09.622[DEBUG] : ==> Parameters: test123(String)
2025-09-04 12:59:09.623[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'test123'
 {executed in 1 msec}
2025-09-04 12:59:09.624[DEBUG] : <==      Total: 1
2025-09-04 12:59:09.723[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 12:59:09.723[DEBUG] : ==> Parameters: test123(String)
2025-09-04 12:59:09.725[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'test123'
 {executed in 1 msec}
2025-09-04 12:59:09.727[DEBUG] : <==      Total: 1
2025-09-04 12:59:23.448[INFO ] : HikariPool-1 - Shutdown initiated...
2025-09-04 12:59:23.458[INFO ] : HikariPool-1 - Shutdown completed.
2025-09-04 15:11:22.416[INFO ] : Starting SpringBootTemplateApplication using Java 17.0.12 with PID 16444 (D:\Web\Spring\Workspace\SpringBootTemplate\out\production\classes started by IDBS_Oculus in D:\Web\Spring\Workspace\SpringBootTemplate)
2025-09-04 15:11:22.417[DEBUG] : Running with Spring Boot v3.3.12, Spring v6.1.20
2025-09-04 15:11:22.419[INFO ] : No active profile set, falling back to 1 default profile: "default"
2025-09-04 15:11:22.476[INFO ] : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-09-04 15:11:22.476[INFO ] : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-09-04 15:11:23.954[INFO ] : Tomcat initialized with port 8080 (http)
2025-09-04 15:11:23.971[INFO ] : Starting service [Tomcat]
2025-09-04 15:11:23.971[INFO ] : Starting Servlet engine: [Apache Tomcat/10.1.41]
2025-09-04 15:11:24.177[INFO ] : At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2025-09-04 15:11:24.187[INFO ] : Initializing Spring embedded WebApplicationContext
2025-09-04 15:11:24.188[INFO ] : Root WebApplicationContext: initialization completed in 1711 ms
2025-09-04 15:11:24.540[DEBUG] : Filter 'jwtRequestFilter' configured for use
2025-09-04 15:11:24.616[INFO ] : Global AuthenticationManager configured with UserDetailsService bean with name userDetailsServiceImpl
2025-09-04 15:11:24.749[INFO ] : Adding welcome page template: index
2025-09-04 15:11:25.167[INFO ] : LiveReload server is running on port 35729
2025-09-04 15:11:25.214[INFO ] : Tomcat started on port 8080 (http) with context path '/'
2025-09-04 15:11:25.226[INFO ] : Started SpringBootTemplateApplication in 3.596 seconds (process running for 4.559)
2025-09-04 15:11:34.757[INFO ] : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-09-04 15:11:34.758[INFO ] : Initializing Servlet 'dispatcherServlet'
2025-09-04 15:11:34.759[INFO ] : Completed initialization in 1 ms
2025-09-04 15:23:25.472[INFO ] : HikariPool-1 - Starting...
2025-09-04 15:23:25.643[INFO ] : HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@766d1936
2025-09-04 15:23:25.645[INFO ] : HikariPool-1 - Start completed.
2025-09-04 15:23:25.653[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 15:23:25.687[DEBUG] : ==> Parameters: test123(String)
2025-09-04 15:23:25.701[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'test123'
 {executed in 13 msec}
2025-09-04 15:23:25.736[DEBUG] : <==      Total: 1
2025-09-04 15:23:25.835[ERROR] : 자격 증명에 실패하였습니다.
org.springframework.security.authentication.BadCredentialsException: 자격 증명에 실패하였습니다.
	at org.springframework.security.authentication.dao.DaoAuthenticationProvider.additionalAuthenticationChecks(DaoAuthenticationProvider.java:93)
	at org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.authenticate(AbstractUserDetailsAuthenticationProvider.java:147)
	at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:182)
	at kr.co.jaehoon.springboottemplate.controller.UserRestController.createAuthenticationToken(UserRestController.java:71)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:547)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:614)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at kr.co.jaehoon.springboottemplate.security.JwtRequestFilter.doFilterInternal(JwtRequestFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:842)
2025-09-04 15:23:36.365[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 15:23:36.366[DEBUG] : ==> Parameters: test123(String)
2025-09-04 15:23:36.367[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'test123'
 {executed in 0 msec}
2025-09-04 15:23:36.368[DEBUG] : <==      Total: 1
2025-09-04 15:23:36.465[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 15:23:36.465[DEBUG] : ==> Parameters: test123(String)
2025-09-04 15:23:36.467[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'test123'
 {executed in 2 msec}
2025-09-04 15:23:36.469[DEBUG] : <==      Total: 1
2025-09-04 15:23:36.573[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 15:23:36.574[DEBUG] : ==> Parameters: test123(String)
2025-09-04 15:23:36.575[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'test123'
 {executed in 1 msec}
2025-09-04 15:23:36.578[DEBUG] : <==      Total: 1
2025-09-04 15:23:36.585[DEBUG] : Secure-Page_UserDetails: [ROLE_USER]
2025-09-04 15:23:36.792[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 15:23:36.793[DEBUG] : ==> Parameters: test123(String)
2025-09-04 15:23:36.794[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'test123'
 {executed in 1 msec}
2025-09-04 15:23:36.797[DEBUG] : <==      Total: 1
2025-09-04 15:23:36.859[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 15:23:36.861[DEBUG] : ==> Parameters: test123(String)
2025-09-04 15:23:36.863[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'test123'
 {executed in 2 msec}
2025-09-04 15:23:36.865[DEBUG] : <==      Total: 1
2025-09-04 15:23:39.356[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 15:23:39.356[DEBUG] : ==> Parameters: test123(String)
2025-09-04 15:23:39.357[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'test123'
 {executed in 1 msec}
2025-09-04 15:23:39.359[DEBUG] : <==      Total: 1
2025-09-04 15:23:39.462[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 15:23:39.462[DEBUG] : ==> Parameters: test123(String)
2025-09-04 15:23:39.464[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'test123'
 {executed in 0 msec}
2025-09-04 15:23:39.467[DEBUG] : <==      Total: 1
2025-09-04 15:23:43.448[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 15:23:43.448[DEBUG] : ==> Parameters: test123(String)
2025-09-04 15:23:43.449[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'test123'
 {executed in 1 msec}
2025-09-04 15:23:43.451[DEBUG] : <==      Total: 1
2025-09-04 15:23:43.455[DEBUG] : Secure-Page_UserDetails: [ROLE_USER]
2025-09-04 15:23:43.493[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 15:23:43.494[DEBUG] : ==> Parameters: test123(String)
2025-09-04 15:23:43.496[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'test123'
 {executed in 1 msec}
2025-09-04 15:23:43.498[DEBUG] : <==      Total: 1
2025-09-04 15:23:43.545[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 15:23:43.546[DEBUG] : ==> Parameters: test123(String)
2025-09-04 15:23:43.547[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'test123'
 {executed in 1 msec}
2025-09-04 15:23:43.550[DEBUG] : <==      Total: 1
2025-09-04 15:23:50.714[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 15:23:50.715[DEBUG] : ==> Parameters: test123(String)
2025-09-04 15:23:50.716[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'test123'
 {executed in 1 msec}
2025-09-04 15:23:50.718[DEBUG] : <==      Total: 1
2025-09-04 15:23:50.813[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 15:23:50.814[DEBUG] : ==> Parameters: test123(String)
2025-09-04 15:23:50.815[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'test123'
 {executed in 1 msec}
2025-09-04 15:23:50.817[DEBUG] : <==      Total: 1
2025-09-04 15:23:54.201[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 15:23:54.202[DEBUG] : ==> Parameters: test123(String)
2025-09-04 15:23:54.203[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'test123'
 {executed in 1 msec}
2025-09-04 15:23:54.204[DEBUG] : <==      Total: 1
2025-09-04 15:23:54.207[DEBUG] : Secure-Page_UserDetails: [ROLE_USER]
2025-09-04 15:23:54.246[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 15:23:54.247[DEBUG] : ==> Parameters: test123(String)
2025-09-04 15:23:54.248[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'test123'
 {executed in 1 msec}
2025-09-04 15:23:54.250[DEBUG] : <==      Total: 1
2025-09-04 15:23:54.290[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 15:23:54.292[DEBUG] : ==> Parameters: test123(String)
2025-09-04 15:23:54.294[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'test123'
 {executed in 1 msec}
2025-09-04 15:23:54.298[DEBUG] : <==      Total: 1
2025-09-04 15:24:03.671[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 15:24:03.672[DEBUG] : ==> Parameters: test123(String)
2025-09-04 15:24:03.673[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'test123'
 {executed in 1 msec}
2025-09-04 15:24:03.673[DEBUG] : <==      Total: 1
2025-09-04 15:24:47.032[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 15:24:47.032[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 15:24:47.033[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 1 msec}
2025-09-04 15:24:47.034[DEBUG] : <==      Total: 1
2025-09-04 15:24:47.036[DEBUG] : Register_UserDTO: UserDTO(id=1, username=jungjh0519, password=$2a$10$N/RtVj4F.Cp0B9oIbp7ug.zJAY27Xv03LJ1FtIcp0XQY0UQjG9pHS, displayname=정재훈, role=ADMIN, createdAt=null, updatedAt=null)
2025-09-04 15:25:47.001[INFO ] : HikariPool-1 - Shutdown initiated...
2025-09-04 15:25:47.008[INFO ] : HikariPool-1 - Shutdown completed.
2025-09-04 15:25:51.531[INFO ] : Starting SpringBootTemplateApplication using Java 17.0.12 with PID 14404 (D:\Web\Spring\Workspace\SpringBootTemplate\out\production\classes started by IDBS_Oculus in D:\Web\Spring\Workspace\SpringBootTemplate)
2025-09-04 15:25:51.533[DEBUG] : Running with Spring Boot v3.3.12, Spring v6.1.20
2025-09-04 15:25:51.534[INFO ] : No active profile set, falling back to 1 default profile: "default"
2025-09-04 15:25:51.590[INFO ] : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-09-04 15:25:51.590[INFO ] : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-09-04 15:25:53.088[INFO ] : Tomcat initialized with port 8080 (http)
2025-09-04 15:25:53.102[INFO ] : Starting service [Tomcat]
2025-09-04 15:25:53.102[INFO ] : Starting Servlet engine: [Apache Tomcat/10.1.41]
2025-09-04 15:25:53.304[INFO ] : At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2025-09-04 15:25:53.316[INFO ] : Initializing Spring embedded WebApplicationContext
2025-09-04 15:25:53.317[INFO ] : Root WebApplicationContext: initialization completed in 1725 ms
2025-09-04 15:25:53.681[DEBUG] : Filter 'jwtRequestFilter' configured for use
2025-09-04 15:25:53.748[INFO ] : Global AuthenticationManager configured with UserDetailsService bean with name userDetailsServiceImpl
2025-09-04 15:25:53.871[INFO ] : Adding welcome page template: index
2025-09-04 15:25:54.252[INFO ] : LiveReload server is running on port 35729
2025-09-04 15:25:54.299[INFO ] : Tomcat started on port 8080 (http) with context path '/'
2025-09-04 15:25:54.308[INFO ] : Started SpringBootTemplateApplication in 3.557 seconds (process running for 4.509)
2025-09-04 15:28:03.829[INFO ] : Starting SpringBootTemplateApplication using Java 17.0.12 with PID 2960 (D:\Web\Spring\Workspace\SpringBootTemplate\out\production\classes started by IDBS_Oculus in D:\Web\Spring\Workspace\SpringBootTemplate)
2025-09-04 15:28:03.831[DEBUG] : Running with Spring Boot v3.3.12, Spring v6.1.20
2025-09-04 15:28:03.832[INFO ] : No active profile set, falling back to 1 default profile: "default"
2025-09-04 15:28:03.892[INFO ] : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-09-04 15:28:03.892[INFO ] : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-09-04 15:28:05.325[INFO ] : Tomcat initialized with port 8080 (http)
2025-09-04 15:28:05.339[INFO ] : Starting service [Tomcat]
2025-09-04 15:28:05.339[INFO ] : Starting Servlet engine: [Apache Tomcat/10.1.41]
2025-09-04 15:28:05.556[INFO ] : At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2025-09-04 15:28:05.567[INFO ] : Initializing Spring embedded WebApplicationContext
2025-09-04 15:28:05.567[INFO ] : Root WebApplicationContext: initialization completed in 1674 ms
2025-09-04 15:28:05.941[DEBUG] : Filter 'jwtRequestFilter' configured for use
2025-09-04 15:28:06.016[INFO ] : Global AuthenticationManager configured with UserDetailsService bean with name userDetailsServiceImpl
2025-09-04 15:28:06.157[INFO ] : Adding welcome page template: index
2025-09-04 15:28:06.592[INFO ] : LiveReload server is running on port 35729
2025-09-04 15:28:06.650[INFO ] : Tomcat started on port 8080 (http) with context path '/'
2025-09-04 15:28:06.661[INFO ] : Started SpringBootTemplateApplication in 3.574 seconds (process running for 4.635)
2025-09-04 15:28:13.187[INFO ] : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-09-04 15:28:13.187[INFO ] : Initializing Servlet 'dispatcherServlet'
2025-09-04 15:28:13.188[INFO ] : Completed initialization in 1 ms
2025-09-04 15:33:24.971[INFO ] : HikariPool-1 - Starting...
2025-09-04 15:33:25.136[INFO ] : HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@4f4b5084
2025-09-04 15:33:25.138[INFO ] : HikariPool-1 - Start completed.
2025-09-04 15:33:25.165[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 15:33:25.196[DEBUG] : ==> Parameters: aible(String)
2025-09-04 15:33:25.208[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'aible'
 {executed in 10 msec}
2025-09-04 15:33:25.228[DEBUG] : <==      Total: 0
2025-09-04 15:33:25.336[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO users (username, password, displayname, role)
        VALUES ('aible', '$2a$10$oVMQ48YVTlMeV7/EFQDV3uGeQz5Nz/ZuQo6mUrE3YhjJeuIaRp3H.', '에이블', 'USER')
 {executed in 1 msec}
2025-09-04 15:33:25.337[DEBUG] :  com.zaxxer.hikari.pool.ProxyStatement.getGeneratedKeys(ProxyStatement.java:229)
1. getGeneratedKeys on query: INSERT INTO users (username, password, displayname, role)
        VALUES ('aible', '$2a$10$oVMQ48YVTlMeV7/EFQDV3uGeQz5Nz/ZuQo6mUrE3YhjJeuIaRp3H.', '에이블', 'USER')
 {executed in 0 msec}
2025-09-04 15:33:41.725[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 15:33:41.725[DEBUG] : ==> Parameters: aible(String)
2025-09-04 15:33:41.726[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'aible'
 {executed in 1 msec}
2025-09-04 15:33:41.731[DEBUG] : <==      Total: 1
2025-09-04 15:33:41.827[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 15:33:41.827[DEBUG] : ==> Parameters: aible(String)
2025-09-04 15:33:41.829[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'aible'
 {executed in 1 msec}
2025-09-04 15:33:41.831[DEBUG] : <==      Total: 1
2025-09-04 15:33:41.945[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 15:33:41.946[DEBUG] : ==> Parameters: aible(String)
2025-09-04 15:33:41.948[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'aible'
 {executed in 1 msec}
2025-09-04 15:33:41.951[DEBUG] : <==      Total: 1
2025-09-04 15:33:42.048[DEBUG] : Secure-Page_UserDetails: [ROLE_USER]
2025-09-04 15:33:42.326[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 15:33:42.326[DEBUG] : ==> Parameters: aible(String)
2025-09-04 15:33:42.328[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'aible'
 {executed in 0 msec}
2025-09-04 15:33:42.329[DEBUG] : <==      Total: 1
2025-09-04 15:33:42.370[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 15:33:42.372[DEBUG] : ==> Parameters: aible(String)
2025-09-04 15:33:42.375[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'aible'
 {executed in 1 msec}
2025-09-04 15:33:42.377[DEBUG] : <==      Total: 1
2025-09-04 15:33:54.868[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 15:33:54.869[DEBUG] : ==> Parameters: aible(String)
2025-09-04 15:33:54.870[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'aible'
 {executed in 1 msec}
2025-09-04 15:33:54.871[DEBUG] : <==      Total: 1
2025-09-04 15:33:55.001[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 15:33:55.002[DEBUG] : ==> Parameters: aible(String)
2025-09-04 15:33:55.004[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'aible'
 {executed in 1 msec}
2025-09-04 15:33:55.007[DEBUG] : <==      Total: 1
2025-09-04 15:33:58.530[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 15:33:58.530[DEBUG] : ==> Parameters: aible(String)
2025-09-04 15:33:58.531[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'aible'
 {executed in 1 msec}
2025-09-04 15:33:58.533[DEBUG] : <==      Total: 1
2025-09-04 15:33:58.536[DEBUG] : Secure-Page_UserDetails: [ROLE_USER]
2025-09-04 15:33:58.573[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 15:33:58.574[DEBUG] : ==> Parameters: aible(String)
2025-09-04 15:33:58.576[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'aible'
 {executed in 1 msec}
2025-09-04 15:33:58.578[DEBUG] : <==      Total: 1
2025-09-04 15:33:58.613[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 15:33:58.614[DEBUG] : ==> Parameters: aible(String)
2025-09-04 15:33:58.616[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'aible'
 {executed in 1 msec}
2025-09-04 15:33:58.617[DEBUG] : <==      Total: 1
2025-09-04 15:34:18.307[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 15:34:18.307[DEBUG] : ==> Parameters: aible(String)
2025-09-04 15:34:18.308[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'aible'
 {executed in 1 msec}
2025-09-04 15:34:18.309[DEBUG] : <==      Total: 1
2025-09-04 15:34:18.395[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 15:34:18.396[DEBUG] : ==> Parameters: aible(String)
2025-09-04 15:34:18.397[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'aible'
 {executed in 1 msec}
2025-09-04 15:34:18.399[DEBUG] : <==      Total: 1
2025-09-04 15:34:21.395[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 15:34:21.395[DEBUG] : ==> Parameters: aible(String)
2025-09-04 15:34:21.396[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'aible'
 {executed in 1 msec}
2025-09-04 15:34:21.397[DEBUG] : <==      Total: 1
2025-09-04 15:34:21.400[DEBUG] : Secure-Page_UserDetails: [ROLE_USER]
2025-09-04 15:34:21.438[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 15:34:21.438[DEBUG] : ==> Parameters: aible(String)
2025-09-04 15:34:21.440[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'aible'
 {executed in 1 msec}
2025-09-04 15:34:21.441[DEBUG] : <==      Total: 1
2025-09-04 15:34:21.480[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 15:34:21.481[DEBUG] : ==> Parameters: aible(String)
2025-09-04 15:34:21.483[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'aible'
 {executed in 1 msec}
2025-09-04 15:34:21.485[DEBUG] : <==      Total: 1
2025-09-04 15:34:23.135[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 15:34:23.136[DEBUG] : ==> Parameters: aible(String)
2025-09-04 15:34:23.137[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'aible'
 {executed in 1 msec}
2025-09-04 15:34:23.140[DEBUG] : <==      Total: 1
2025-09-04 15:37:58.967[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 15:37:58.968[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 15:37:58.970[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 1 msec}
2025-09-04 15:37:58.971[DEBUG] : <==      Total: 1
2025-09-04 15:37:59.066[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 15:37:59.067[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 15:37:59.068[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 0 msec}
2025-09-04 15:37:59.068[DEBUG] : <==      Total: 1
2025-09-04 15:37:59.096[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 15:37:59.096[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 15:37:59.097[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 1 msec}
2025-09-04 15:37:59.098[DEBUG] : <==      Total: 1
2025-09-04 15:37:59.103[DEBUG] : Secure-Page_UserDetails: [ROLE_ADMIN]
2025-09-04 15:37:59.369[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 15:37:59.369[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 15:37:59.370[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 1 msec}
2025-09-04 15:37:59.372[DEBUG] : <==      Total: 1
2025-09-04 15:37:59.379[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 15:37:59.380[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 15:37:59.381[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 1 msec}
2025-09-04 15:37:59.383[DEBUG] : <==      Total: 1
2025-09-04 15:38:15.027[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 15:38:15.028[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 15:38:15.029[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 0 msec}
2025-09-04 15:38:15.029[DEBUG] : <==      Total: 1
2025-09-04 15:38:15.147[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 15:38:15.147[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 15:38:15.149[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 0 msec}
2025-09-04 15:38:15.150[DEBUG] : <==      Total: 1
2025-09-04 15:38:15.194[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 15:38:15.195[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 15:38:15.198[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 2 msec}
2025-09-04 15:38:15.199[DEBUG] : <==      Total: 1
2025-09-04 15:38:22.059[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 15:38:22.060[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 15:38:22.061[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 0 msec}
2025-09-04 15:38:22.061[DEBUG] : <==      Total: 1
2025-09-04 15:38:22.064[DEBUG] : Secure-Page_UserDetails: [ROLE_ADMIN]
2025-09-04 15:38:22.152[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 15:38:22.152[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 15:38:22.152[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 15:38:22.153[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 15:38:22.153[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 1 msec}
2025-09-04 15:38:22.154[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 1 msec}
2025-09-04 15:38:22.155[DEBUG] : <==      Total: 1
2025-09-04 15:38:22.155[DEBUG] : <==      Total: 1
2025-09-04 15:38:23.241[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 15:38:23.241[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 15:38:23.243[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 1 msec}
2025-09-04 15:38:23.244[DEBUG] : <==      Total: 1
2025-09-04 16:14:51.260[INFO ] : HikariPool-1 - Shutdown initiated...
2025-09-04 16:14:51.264[INFO ] : HikariPool-1 - Shutdown completed.
2025-09-04 16:14:58.527[INFO ] : Starting SpringBootTemplateApplication using Java 17.0.12 with PID 7344 (D:\Web\Spring\Workspace\SpringBootTemplate\out\production\classes started by IDBS_Oculus in D:\Web\Spring\Workspace\SpringBootTemplate)
2025-09-04 16:14:58.529[DEBUG] : Running with Spring Boot v3.3.12, Spring v6.1.20
2025-09-04 16:14:58.529[INFO ] : No active profile set, falling back to 1 default profile: "default"
2025-09-04 16:14:58.585[INFO ] : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-09-04 16:14:58.586[INFO ] : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-09-04 16:15:00.185[INFO ] : Tomcat initialized with port 8080 (http)
2025-09-04 16:15:00.199[INFO ] : Starting service [Tomcat]
2025-09-04 16:15:00.200[INFO ] : Starting Servlet engine: [Apache Tomcat/10.1.41]
2025-09-04 16:15:00.446[INFO ] : At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2025-09-04 16:15:00.459[INFO ] : Initializing Spring embedded WebApplicationContext
2025-09-04 16:15:00.459[INFO ] : Root WebApplicationContext: initialization completed in 1873 ms
2025-09-04 16:15:00.845[DEBUG] : Filter 'jwtRequestFilter' configured for use
2025-09-04 16:15:00.925[INFO ] : Global AuthenticationManager configured with UserDetailsService bean with name userDetailsServiceImpl
2025-09-04 16:15:01.312[INFO ] : Adding welcome page template: index
2025-09-04 16:15:01.742[INFO ] : LiveReload server is running on port 35729
2025-09-04 16:15:01.791[INFO ] : Tomcat started on port 8080 (http) with context path '/'
2025-09-04 16:15:01.802[INFO ] : Started SpringBootTemplateApplication in 4.04 seconds (process running for 5.323)
2025-09-04 16:28:08.072[INFO ] : Starting SpringBootTemplateApplication using Java 17.0.12 with PID 12564 (D:\Web\Spring\Workspace\SpringBootTemplate\out\production\classes started by IDBS_Oculus in D:\Web\Spring\Workspace\SpringBootTemplate)
2025-09-04 16:28:08.074[DEBUG] : Running with Spring Boot v3.3.12, Spring v6.1.20
2025-09-04 16:28:08.075[INFO ] : No active profile set, falling back to 1 default profile: "default"
2025-09-04 16:28:08.131[INFO ] : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-09-04 16:28:08.132[INFO ] : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-09-04 16:28:09.642[INFO ] : Tomcat initialized with port 8080 (http)
2025-09-04 16:28:09.657[INFO ] : Starting service [Tomcat]
2025-09-04 16:28:09.658[INFO ] : Starting Servlet engine: [Apache Tomcat/10.1.41]
2025-09-04 16:28:09.891[INFO ] : At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2025-09-04 16:28:09.902[INFO ] : Initializing Spring embedded WebApplicationContext
2025-09-04 16:28:09.902[INFO ] : Root WebApplicationContext: initialization completed in 1769 ms
2025-09-04 16:28:10.275[DEBUG] : Filter 'jwtRequestFilter' configured for use
2025-09-04 16:28:10.350[INFO ] : Global AuthenticationManager configured with UserDetailsService bean with name userDetailsServiceImpl
2025-09-04 16:28:10.504[INFO ] : Adding welcome page template: index
2025-09-04 16:28:10.919[INFO ] : LiveReload server is running on port 35729
2025-09-04 16:28:10.969[INFO ] : Tomcat started on port 8080 (http) with context path '/'
2025-09-04 16:28:10.979[INFO ] : Started SpringBootTemplateApplication in 3.658 seconds (process running for 4.632)
2025-09-04 16:28:41.999[INFO ] : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-09-04 16:28:41.999[INFO ] : Initializing Servlet 'dispatcherServlet'
2025-09-04 16:28:42.000[INFO ] : Completed initialization in 0 ms
2025-09-04 16:29:04.023[INFO ] : HikariPool-1 - Starting...
2025-09-04 16:29:04.197[INFO ] : HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@5c9c2b25
2025-09-04 16:29:04.199[INFO ] : HikariPool-1 - Start completed.
2025-09-04 16:29:04.207[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 16:29:04.240[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 16:29:04.252[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 12 msec}
2025-09-04 16:29:04.286[DEBUG] : <==      Total: 1
2025-09-04 16:29:04.387[ERROR] : 자격 증명에 실패하였습니다.
org.springframework.security.authentication.BadCredentialsException: 자격 증명에 실패하였습니다.
	at org.springframework.security.authentication.dao.DaoAuthenticationProvider.additionalAuthenticationChecks(DaoAuthenticationProvider.java:93)
	at org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.authenticate(AbstractUserDetailsAuthenticationProvider.java:147)
	at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:182)
	at kr.co.jaehoon.springboottemplate.controller.UserRestController.createAuthenticationToken(UserRestController.java:71)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:547)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:614)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at kr.co.jaehoon.springboottemplate.security.JwtRequestFilter.doFilterInternal(JwtRequestFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:842)
2025-09-04 16:29:09.576[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 16:29:09.577[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 16:29:09.578[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 0 msec}
2025-09-04 16:29:09.580[DEBUG] : <==      Total: 1
2025-09-04 16:29:09.680[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 16:29:09.681[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 16:29:09.683[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 1 msec}
2025-09-04 16:29:09.684[DEBUG] : <==      Total: 1
2025-09-04 16:29:09.784[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 16:29:09.784[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 16:29:09.786[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 0 msec}
2025-09-04 16:29:09.790[DEBUG] : <==      Total: 1
2025-09-04 16:29:09.866[DEBUG] : Secure-Page_UserDetails: [ROLE_ADMIN]
2025-09-04 16:29:10.164[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 16:29:10.165[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 16:29:10.165[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 16:29:10.166[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 16:29:10.166[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 1 msec}
2025-09-04 16:29:10.167[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 1 msec}
2025-09-04 16:29:10.169[DEBUG] : <==      Total: 1
2025-09-04 16:29:10.169[DEBUG] : <==      Total: 1
2025-09-04 16:29:10.234[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 16:29:10.235[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 16:29:10.237[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 1 msec}
2025-09-04 16:29:10.243[DEBUG] : <==      Total: 1
2025-09-04 16:29:14.206[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 16:29:14.206[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 16:29:14.207[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 1 msec}
2025-09-04 16:29:14.208[DEBUG] : <==      Total: 1
2025-09-04 16:29:14.298[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 16:29:14.299[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 16:29:14.300[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 0 msec}
2025-09-04 16:29:14.301[DEBUG] : <==      Total: 1
2025-09-04 16:29:14.382[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 16:29:14.382[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 16:29:14.384[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 0 msec}
2025-09-04 16:29:14.385[DEBUG] : <==      Total: 1
2025-09-04 16:29:19.214[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 16:29:19.214[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 16:29:19.215[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 1 msec}
2025-09-04 16:29:19.216[DEBUG] : <==      Total: 1
2025-09-04 16:29:19.221[DEBUG] : Secure-Page_UserDetails: [ROLE_ADMIN]
2025-09-04 16:29:19.306[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 16:29:19.307[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 16:29:19.307[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 16:29:19.307[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 16:29:19.308[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 1 msec}
2025-09-04 16:29:19.308[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 1 msec}
2025-09-04 16:29:19.310[DEBUG] : <==      Total: 1
2025-09-04 16:29:19.310[DEBUG] : <==      Total: 1
2025-09-04 16:29:19.905[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 16:29:19.906[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-04 16:29:19.908[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 0 msec}
2025-09-04 16:29:19.909[DEBUG] : <==      Total: 1
2025-09-04 16:29:33.777[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 16:29:33.778[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-04 16:29:33.779[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-04 16:29:33.780[DEBUG] : <==      Total: 1
2025-09-04 16:29:33.886[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 16:29:33.887[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-04 16:29:33.888[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-04 16:29:33.891[DEBUG] : <==      Total: 1
2025-09-04 16:29:33.920[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 16:29:33.920[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-04 16:29:33.922[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 2 msec}
2025-09-04 16:29:33.923[DEBUG] : <==      Total: 1
2025-09-04 16:29:33.927[DEBUG] : Secure-Page_UserDetails: [ROLE_USER]
2025-09-04 16:29:34.023[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 16:29:34.023[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-04 16:29:34.024[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-04 16:29:34.026[DEBUG] : <==      Total: 1
2025-09-04 16:29:34.034[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 16:29:34.034[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-04 16:29:34.036[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-04 16:29:34.037[DEBUG] : <==      Total: 1
2025-09-04 16:29:36.077[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 16:29:36.078[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-04 16:29:36.079[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 0 msec}
2025-09-04 16:29:36.080[DEBUG] : <==      Total: 1
2025-09-04 16:29:36.155[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 16:29:36.156[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-04 16:29:36.157[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-04 16:29:36.159[DEBUG] : <==      Total: 1
2025-09-04 16:29:44.622[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 16:29:44.622[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-04 16:29:44.623[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-04 16:29:44.624[DEBUG] : <==      Total: 1
2025-09-04 16:29:44.708[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 16:29:44.708[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 16:29:44.709[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-04 16:29:44.709[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-04 16:29:44.710[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-04 16:29:44.710[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 16:29:44.710[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-04 16:29:44.711[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 0 msec}
2025-09-04 16:29:44.711[DEBUG] : <==      Total: 1
2025-09-04 16:29:44.712[DEBUG] : <==      Total: 1
2025-09-04 16:29:44.713[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-04 16:29:44.714[DEBUG] : <==      Total: 1
2025-09-04 16:29:46.518[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 16:29:46.519[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-04 16:29:46.520[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-04 16:29:46.521[DEBUG] : <==      Total: 1
2025-09-04 16:29:46.524[DEBUG] : Secure-Page_UserDetails: [ROLE_USER]
2025-09-04 16:29:46.560[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 16:29:46.560[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-04 16:29:46.562[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-04 16:29:46.563[DEBUG] : <==      Total: 1
2025-09-04 16:29:46.613[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 16:29:46.613[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-04 16:29:46.614[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-04 16:29:46.616[DEBUG] : <==      Total: 1
2025-09-04 16:29:47.546[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-04 16:29:47.546[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-04 16:29:47.548[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 2 msec}
2025-09-04 16:29:47.549[DEBUG] : <==      Total: 1
2025-09-04 16:30:28.756[INFO ] : HikariPool-1 - Shutdown initiated...
2025-09-04 16:30:28.764[INFO ] : HikariPool-1 - Shutdown completed.
