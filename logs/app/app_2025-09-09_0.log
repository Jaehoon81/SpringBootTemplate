2025-09-09 11:38:18.694[INFO ] : Starting SpringBootTemplateApplication using Java 17.0.12 with PID 6096 (D:\Web\Spring\Workspace\SpringBootTemplate\out\production\classes started by IDBS_Oculus in D:\Web\Spring\Workspace\SpringBootTemplate)
2025-09-09 11:38:18.695[DEBUG] : Running with Spring Boot v3.3.12, Spring v6.1.20
2025-09-09 11:38:18.696[INFO ] : No active profile set, falling back to 1 default profile: "default"
2025-09-09 11:38:18.763[INFO ] : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-09-09 11:38:18.763[INFO ] : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-09-09 11:38:20.670[INFO ] : Tomcat initialized with port 8080 (http)
2025-09-09 11:38:20.689[INFO ] : Starting service [Tomcat]
2025-09-09 11:38:20.690[INFO ] : Starting Servlet engine: [Apache Tomcat/10.1.41]
2025-09-09 11:38:20.979[INFO ] : At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2025-09-09 11:38:20.994[INFO ] : Initializing Spring embedded WebApplicationContext
2025-09-09 11:38:20.995[INFO ] : Root WebApplicationContext: initialization completed in 2231 ms
2025-09-09 11:38:21.542[DEBUG] : Filter 'jwtRequestFilter' configured for use
2025-09-09 11:38:21.706[INFO ] : Global AuthenticationManager configured with UserDetailsService bean with name userDetailsServiceImpl
2025-09-09 11:38:21.893[INFO ] : Adding welcome page template: index
2025-09-09 11:38:22.294[INFO ] : LiveReload server is running on port 35729
2025-09-09 11:38:22.342[INFO ] : Tomcat started on port 8080 (http) with context path '/'
2025-09-09 11:38:22.356[INFO ] : Started SpringBootTemplateApplication in 4.517 seconds (process running for 5.9)
2025-09-09 11:38:34.707[INFO ] : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-09-09 11:38:34.708[INFO ] : Initializing Servlet 'dispatcherServlet'
2025-09-09 11:38:34.710[INFO ] : Completed initialization in 2 ms
2025-09-09 11:38:55.013[INFO ] : HikariPool-1 - Starting...
2025-09-09 11:38:55.196[INFO ] : HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@50326820
2025-09-09 11:38:55.198[INFO ] : HikariPool-1 - Start completed.
2025-09-09 11:38:55.205[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 11:38:55.241[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 11:38:55.259[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 18 msec}
2025-09-09 11:38:55.295[DEBUG] : <==      Total: 1
2025-09-09 11:38:55.390[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 11:38:55.391[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 11:38:55.392[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-09 11:38:55.393[DEBUG] : <==      Total: 1
2025-09-09 11:38:55.487[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 11:38:55.488[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzg1NTM1LCJleHAiOjE3NTczODkxMzV9.DMFVRpphZz0bNsoQqoqXSgE19xlYSin3OuZZHCc0N_8(String)
2025-09-09 11:38:55.491[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzg1NTM1LCJleHAiOjE3NTczODkxMzV9.DMFVRpphZz0bNsoQqoqXSgE19xlYSin3OuZZHCc0N_8' AND expires_at > NOW()
 {executed in 1 msec}
2025-09-09 11:38:55.493[DEBUG] : <==      Total: 0
2025-09-09 11:38:55.544[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 11:38:55.544[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 11:38:55.546[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 0 msec}
2025-09-09 11:38:55.549[DEBUG] : <==      Total: 1
2025-09-09 11:38:55.557[DEBUG] : Secure-Page_UserDetails: [ROLE_USER]
2025-09-09 11:38:55.927[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 11:38:55.927[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzg1NTM1LCJleHAiOjE3NTczODkxMzV9.DMFVRpphZz0bNsoQqoqXSgE19xlYSin3OuZZHCc0N_8(String)
2025-09-09 11:38:55.928[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzg1NTM1LCJleHAiOjE3NTczODkxMzV9.DMFVRpphZz0bNsoQqoqXSgE19xlYSin3OuZZHCc0N_8' AND expires_at > NOW()
 {executed in 1 msec}
2025-09-09 11:38:55.929[DEBUG] : <==      Total: 0
2025-09-09 11:38:55.934[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 11:38:55.934[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 11:38:55.936[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-09 11:38:55.938[DEBUG] : <==      Total: 1
2025-09-09 11:38:55.939[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 11:38:55.940[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzg1NTM1LCJleHAiOjE3NTczODkxMzV9.DMFVRpphZz0bNsoQqoqXSgE19xlYSin3OuZZHCc0N_8(String)
2025-09-09 11:38:55.942[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzg1NTM1LCJleHAiOjE3NTczODkxMzV9.DMFVRpphZz0bNsoQqoqXSgE19xlYSin3OuZZHCc0N_8' AND expires_at > NOW()
 {executed in 1 msec}
2025-09-09 11:38:55.944[DEBUG] : <==      Total: 0
2025-09-09 11:38:55.948[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 11:38:55.948[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 11:38:55.950[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-09 11:38:55.952[DEBUG] : <==      Total: 1
2025-09-09 11:39:00.032[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 11:39:00.032[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzg1NTM1LCJleHAiOjE3NTczODkxMzV9.DMFVRpphZz0bNsoQqoqXSgE19xlYSin3OuZZHCc0N_8(String)
2025-09-09 11:39:00.034[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzg1NTM1LCJleHAiOjE3NTczODkxMzV9.DMFVRpphZz0bNsoQqoqXSgE19xlYSin3OuZZHCc0N_8' AND expires_at > NOW()
 {executed in 0 msec}
2025-09-09 11:39:00.035[DEBUG] : <==      Total: 0
2025-09-09 11:39:00.038[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 11:39:00.039[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 11:39:00.040[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-09 11:39:00.043[DEBUG] : <==      Total: 1
2025-09-09 11:39:00.092[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 11:39:00.093[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzg1NTM1LCJleHAiOjE3NTczODkxMzV9.DMFVRpphZz0bNsoQqoqXSgE19xlYSin3OuZZHCc0N_8(String)
2025-09-09 11:39:00.095[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzg1NTM1LCJleHAiOjE3NTczODkxMzV9.DMFVRpphZz0bNsoQqoqXSgE19xlYSin3OuZZHCc0N_8' AND expires_at > NOW()
 {executed in 1 msec}
2025-09-09 11:39:00.096[DEBUG] : <==      Total: 0
2025-09-09 11:39:00.101[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 11:39:00.101[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 11:39:00.103[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-09 11:39:00.105[DEBUG] : <==      Total: 1
2025-09-09 11:39:01.837[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 11:39:01.838[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzg1NTM1LCJleHAiOjE3NTczODkxMzV9.DMFVRpphZz0bNsoQqoqXSgE19xlYSin3OuZZHCc0N_8(String)
2025-09-09 11:39:01.839[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzg1NTM1LCJleHAiOjE3NTczODkxMzV9.DMFVRpphZz0bNsoQqoqXSgE19xlYSin3OuZZHCc0N_8' AND expires_at > NOW()
 {executed in 1 msec}
2025-09-09 11:39:01.840[DEBUG] : <==      Total: 0
2025-09-09 11:39:01.844[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 11:39:01.845[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 11:39:01.846[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 0 msec}
2025-09-09 11:39:01.848[DEBUG] : <==      Total: 1
2025-09-09 11:39:01.930[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 11:39:01.931[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzg1NTM1LCJleHAiOjE3NTczODkxMzV9.DMFVRpphZz0bNsoQqoqXSgE19xlYSin3OuZZHCc0N_8(String)
2025-09-09 11:39:01.932[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzg1NTM1LCJleHAiOjE3NTczODkxMzV9.DMFVRpphZz0bNsoQqoqXSgE19xlYSin3OuZZHCc0N_8' AND expires_at > NOW()
 {executed in 1 msec}
2025-09-09 11:39:01.934[DEBUG] : <==      Total: 0
2025-09-09 11:39:01.938[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 11:39:01.939[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 11:39:01.939[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 11:39:01.940[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzg1NTM1LCJleHAiOjE3NTczODkxMzV9.DMFVRpphZz0bNsoQqoqXSgE19xlYSin3OuZZHCc0N_8(String)
2025-09-09 11:39:01.941[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 0 msec}
2025-09-09 11:39:01.941[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzg1NTM1LCJleHAiOjE3NTczODkxMzV9.DMFVRpphZz0bNsoQqoqXSgE19xlYSin3OuZZHCc0N_8' AND expires_at > NOW()
 {executed in 0 msec}
2025-09-09 11:39:01.942[DEBUG] : <==      Total: 0
2025-09-09 11:39:01.942[DEBUG] : <==      Total: 1
2025-09-09 11:39:01.946[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 11:39:01.946[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 11:39:01.947[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-09 11:39:01.949[DEBUG] : <==      Total: 1
2025-09-09 11:39:01.958[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 11:39:01.959[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzg1NTM1LCJleHAiOjE3NTczODkxMzV9.DMFVRpphZz0bNsoQqoqXSgE19xlYSin3OuZZHCc0N_8(String)
2025-09-09 11:39:01.960[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzg1NTM1LCJleHAiOjE3NTczODkxMzV9.DMFVRpphZz0bNsoQqoqXSgE19xlYSin3OuZZHCc0N_8' AND expires_at > NOW()
 {executed in 1 msec}
2025-09-09 11:39:01.961[DEBUG] : <==      Total: 0
2025-09-09 11:39:01.965[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 11:39:01.966[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 11:39:01.967[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-09 11:39:01.968[DEBUG] : <==      Total: 1
2025-09-09 11:39:03.552[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 11:39:03.552[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzg1NTM1LCJleHAiOjE3NTczODkxMzV9.DMFVRpphZz0bNsoQqoqXSgE19xlYSin3OuZZHCc0N_8(String)
2025-09-09 11:39:03.553[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzg1NTM1LCJleHAiOjE3NTczODkxMzV9.DMFVRpphZz0bNsoQqoqXSgE19xlYSin3OuZZHCc0N_8' AND expires_at > NOW()
 {executed in 0 msec}
2025-09-09 11:39:03.554[DEBUG] : <==      Total: 0
2025-09-09 11:39:03.558[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 11:39:03.558[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 11:39:03.558[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 0 msec}
2025-09-09 11:39:03.559[DEBUG] : <==      Total: 1
2025-09-09 11:39:03.565[DEBUG] : Secure-Page_UserDetails: [ROLE_USER]
2025-09-09 11:39:03.607[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 11:39:03.607[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 11:39:03.607[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzg1NTM1LCJleHAiOjE3NTczODkxMzV9.DMFVRpphZz0bNsoQqoqXSgE19xlYSin3OuZZHCc0N_8(String)
2025-09-09 11:39:03.607[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzg1NTM1LCJleHAiOjE3NTczODkxMzV9.DMFVRpphZz0bNsoQqoqXSgE19xlYSin3OuZZHCc0N_8(String)
2025-09-09 11:39:03.609[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzg1NTM1LCJleHAiOjE3NTczODkxMzV9.DMFVRpphZz0bNsoQqoqXSgE19xlYSin3OuZZHCc0N_8' AND expires_at > NOW()
 {executed in 1 msec}
2025-09-09 11:39:03.609[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzg1NTM1LCJleHAiOjE3NTczODkxMzV9.DMFVRpphZz0bNsoQqoqXSgE19xlYSin3OuZZHCc0N_8' AND expires_at > NOW()
 {executed in 1 msec}
2025-09-09 11:39:03.609[DEBUG] : <==      Total: 0
2025-09-09 11:39:03.609[DEBUG] : <==      Total: 0
2025-09-09 11:39:03.612[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 11:39:03.612[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 11:39:03.613[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 11:39:03.613[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 11:39:03.614[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-09 11:39:03.615[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-09 11:39:03.616[DEBUG] : <==      Total: 1
2025-09-09 11:39:03.616[DEBUG] : <==      Total: 1
2025-09-09 11:39:44.779[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 11:39:44.779[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 11:39:44.781[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 0 msec}
2025-09-09 11:39:44.782[DEBUG] : <==      Total: 1
2025-09-09 11:39:44.884[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 11:39:44.884[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 11:39:44.886[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-09 11:39:44.889[DEBUG] : <==      Total: 1
2025-09-09 11:40:10.815[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 11:40:10.815[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzg1NTg0LCJleHAiOjE3NTczODYxODR9.B75FnvQ4wDyases-p4-5FCxCaJ_e9hQOGtKYxcbFJjU(String)
2025-09-09 11:40:10.816[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzg1NTg0LCJleHAiOjE3NTczODYxODR9.B75FnvQ4wDyases-p4-5FCxCaJ_e9hQOGtKYxcbFJjU' AND expires_at > NOW()
 {executed in 1 msec}
2025-09-09 11:40:10.817[DEBUG] : <==      Total: 0
2025-09-09 11:40:10.820[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 11:40:10.820[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 11:40:10.821[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-09 11:40:10.822[DEBUG] : <==      Total: 1
2025-09-09 11:40:26.821[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 11:40:26.822[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzg1NTg0LCJleHAiOjE3NTczODYxODR9.B75FnvQ4wDyases-p4-5FCxCaJ_e9hQOGtKYxcbFJjU(String)
2025-09-09 11:40:26.823[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzg1NTg0LCJleHAiOjE3NTczODYxODR9.B75FnvQ4wDyases-p4-5FCxCaJ_e9hQOGtKYxcbFJjU' AND expires_at > NOW()
 {executed in 0 msec}
2025-09-09 11:40:26.823[DEBUG] : <==      Total: 0
2025-09-09 11:40:26.825[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 11:40:26.826[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 11:40:26.827[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 0 msec}
2025-09-09 11:40:26.827[DEBUG] : <==      Total: 1
2025-09-09 11:40:43.943[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 11:40:43.944[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzg1NTg0LCJleHAiOjE3NTczODYxODR9.B75FnvQ4wDyases-p4-5FCxCaJ_e9hQOGtKYxcbFJjU(String)
2025-09-09 11:40:43.946[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzg1NTg0LCJleHAiOjE3NTczODYxODR9.B75FnvQ4wDyases-p4-5FCxCaJ_e9hQOGtKYxcbFJjU' AND expires_at > NOW()
 {executed in 1 msec}
2025-09-09 11:40:43.946[DEBUG] : <==      Total: 0
2025-09-09 11:40:43.951[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 11:40:43.952[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 11:40:43.954[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-09 11:40:43.956[DEBUG] : <==      Total: 1
2025-09-09 11:40:43.975[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO blacklisted_tokens (token, expires_at)
        VALUES ('eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzg1NTg0LCJleHAiOjE3NTczODYxODR9.B75FnvQ4wDyases-p4-5FCxCaJ_e9hQOGtKYxcbFJjU', 2025-09-09T11:49:44)
 {executed in 6 msec}
2025-09-09 11:41:00.281[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 11:41:00.282[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzg1NTg0LCJleHAiOjE3NTczODYxODR9.B75FnvQ4wDyases-p4-5FCxCaJ_e9hQOGtKYxcbFJjU(String)
2025-09-09 11:41:00.283[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzg1NTg0LCJleHAiOjE3NTczODYxODR9.B75FnvQ4wDyases-p4-5FCxCaJ_e9hQOGtKYxcbFJjU' AND expires_at > NOW()
 {executed in 1 msec}
2025-09-09 11:41:00.284[DEBUG] : <==      Total: 1
2025-09-09 11:41:00.285[WARN ] : Attempted to use a blacklisted JWT token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzg1NTg0LCJleHAiOjE3NTczODYxODR9.B75FnvQ4wDyases-p4-5FCxCaJ_e9hQOGtKYxcbFJjU
2025-09-09 11:41:00.286[ERROR] : Error checking if JWT token is in blacklist: 토큰이 무효화되었습니다. 다시 로그인해주세요.
2025-09-09 11:41:00.288[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 11:41:00.288[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 11:41:00.289[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-09 11:41:00.290[DEBUG] : <==      Total: 1
2025-09-09 11:41:00.313[ERROR] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. INSERT INTO blacklisted_tokens (token, expires_at)
        VALUES ('eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzg1NTg0LCJleHAiOjE3NTczODYxODR9.B75FnvQ4wDyases-p4-5FCxCaJ_e9hQOGtKYxcbFJjU', 2025-09-09T11:49:44)
 {FAILED after 15 msec}
java.sql.SQLIntegrityConstraintViolationException: Duplicate entry 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzg1NTg' for key 'blacklisted_tokens.token'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:118)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:912)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:354)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:333)
	at jdk.proxy2/jdk.proxy2.$Proxy75.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:224)
	at kr.co.jaehoon.springboottemplate.repository.BlacklistedTokenRepository.addToken(BlacklistedTokenRepository.java:28)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:769)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:769)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:721)
	at kr.co.jaehoon.springboottemplate.repository.BlacklistedTokenRepository$$SpringCGLIB$$0.addToken(<generated>)
	at kr.co.jaehoon.springboottemplate.security.JwtBlacklistService.addTokenToBlacklist(JwtBlacklistService.java:79)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:769)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:379)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:769)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:721)
	at kr.co.jaehoon.springboottemplate.security.JwtBlacklistService$$SpringCGLIB$$0.addTokenToBlacklist(<generated>)
	at kr.co.jaehoon.springboottemplate.controller.UserRestController.performLogout(UserRestController.java:200)
	at kr.co.jaehoon.springboottemplate.controller.UserRestController.mobileLogout(UserRestController.java:177)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:547)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:614)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at kr.co.jaehoon.springboottemplate.security.JwtRequestFilter.doFilterInternal(JwtRequestFilter.java:120)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:842)
2025-09-09 11:41:00.463[ERROR] : Failed to add token to blacklist or token already exists: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Duplicate entry 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzg1NTg' for key 'blacklisted_tokens.token'
### The error may exist in file [D:\Web\Spring\Workspace\SpringBootTemplate\out\production\resources\mappers\blacklistedTokenRepoMapper.xml]
### The error may involve BlacklistedToken.addToken-Inline
### The error occurred while setting parameters
### SQL: INSERT INTO blacklisted_tokens (token, expires_at)         VALUES (?, ?)
### Cause: java.sql.SQLIntegrityConstraintViolationException: Duplicate entry 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzg1NTg' for key 'blacklisted_tokens.token'
; Duplicate entry 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzg1NTg' for key 'blacklisted_tokens.token'
2025-09-09 11:41:21.304[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 11:41:21.305[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzg1NTg0LCJleHAiOjE3NTczODYxODR9.B75FnvQ4wDyases-p4-5FCxCaJ_e9hQOGtKYxcbFJjU(String)
2025-09-09 11:41:21.306[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzg1NTg0LCJleHAiOjE3NTczODYxODR9.B75FnvQ4wDyases-p4-5FCxCaJ_e9hQOGtKYxcbFJjU' AND expires_at > NOW()
 {executed in 1 msec}
2025-09-09 11:41:21.307[DEBUG] : <==      Total: 1
2025-09-09 11:41:21.308[WARN ] : Attempted to use a blacklisted JWT token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzg1NTg0LCJleHAiOjE3NTczODYxODR9.B75FnvQ4wDyases-p4-5FCxCaJ_e9hQOGtKYxcbFJjU
2025-09-09 11:41:21.308[ERROR] : Error checking if JWT token is in blacklist: 토큰이 무효화되었습니다. 다시 로그인해주세요.
2025-09-09 11:41:21.310[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 11:41:21.310[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 11:41:21.311[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 0 msec}
2025-09-09 11:41:21.312[DEBUG] : <==      Total: 1
2025-09-09 11:41:21.322[ERROR] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO blacklisted_tokens (token, expires_at)
        VALUES ('eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzg1NTg0LCJleHAiOjE3NTczODYxODR9.B75FnvQ4wDyases-p4-5FCxCaJ_e9hQOGtKYxcbFJjU', 2025-09-09T11:49:44)
 {FAILED after 3 msec}
java.sql.SQLIntegrityConstraintViolationException: Duplicate entry 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzg1NTg' for key 'blacklisted_tokens.token'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:118)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:912)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:354)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:333)
	at jdk.proxy2/jdk.proxy2.$Proxy75.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:224)
	at kr.co.jaehoon.springboottemplate.repository.BlacklistedTokenRepository.addToken(BlacklistedTokenRepository.java:28)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:769)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:769)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:721)
	at kr.co.jaehoon.springboottemplate.repository.BlacklistedTokenRepository$$SpringCGLIB$$0.addToken(<generated>)
	at kr.co.jaehoon.springboottemplate.security.JwtBlacklistService.addTokenToBlacklist(JwtBlacklistService.java:79)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:769)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:379)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:769)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:721)
	at kr.co.jaehoon.springboottemplate.security.JwtBlacklistService$$SpringCGLIB$$0.addTokenToBlacklist(<generated>)
	at kr.co.jaehoon.springboottemplate.controller.UserRestController.performLogout(UserRestController.java:200)
	at kr.co.jaehoon.springboottemplate.controller.UserRestController.mobileLogout(UserRestController.java:177)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:547)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:614)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at kr.co.jaehoon.springboottemplate.security.JwtRequestFilter.doFilterInternal(JwtRequestFilter.java:120)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:842)
2025-09-09 11:41:21.323[ERROR] : Failed to add token to blacklist or token already exists: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Duplicate entry 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzg1NTg' for key 'blacklisted_tokens.token'
### The error may exist in file [D:\Web\Spring\Workspace\SpringBootTemplate\out\production\resources\mappers\blacklistedTokenRepoMapper.xml]
### The error may involve BlacklistedToken.addToken-Inline
### The error occurred while setting parameters
### SQL: INSERT INTO blacklisted_tokens (token, expires_at)         VALUES (?, ?)
### Cause: java.sql.SQLIntegrityConstraintViolationException: Duplicate entry 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzg1NTg' for key 'blacklisted_tokens.token'
; Duplicate entry 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzg1NTg' for key 'blacklisted_tokens.token'
2025-09-09 11:42:13.047[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 11:42:13.047[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzg1NTg0LCJleHAiOjE3NTczODYxODR9.B75FnvQ4wDyases-p4-5FCxCaJ_e9hQOGtKYxcbFJjU(String)
2025-09-09 11:42:13.049[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzg1NTg0LCJleHAiOjE3NTczODYxODR9.B75FnvQ4wDyases-p4-5FCxCaJ_e9hQOGtKYxcbFJjU' AND expires_at > NOW()
 {executed in 2 msec}
2025-09-09 11:42:13.051[DEBUG] : <==      Total: 1
2025-09-09 11:42:13.053[WARN ] : Attempted to use a blacklisted JWT token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzg1NTg0LCJleHAiOjE3NTczODYxODR9.B75FnvQ4wDyases-p4-5FCxCaJ_e9hQOGtKYxcbFJjU
2025-09-09 11:42:13.053[ERROR] : Error checking if JWT token is in blacklist: 토큰이 무효화되었습니다. 다시 로그인해주세요.
2025-09-09 11:42:13.057[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 11:42:13.057[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 11:42:13.058[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-09 11:42:13.059[DEBUG] : <==      Total: 1
2025-09-09 11:42:33.874[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 11:42:33.874[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzg1NTg0LCJleHAiOjE3NTczODYxODR9.B75FnvQ4wDyases-p4-5FCxCaJ_e9hQOGtKYxcbFJjU(String)
2025-09-09 11:42:33.875[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzg1NTg0LCJleHAiOjE3NTczODYxODR9.B75FnvQ4wDyases-p4-5FCxCaJ_e9hQOGtKYxcbFJjU' AND expires_at > NOW()
 {executed in 1 msec}
2025-09-09 11:42:33.876[DEBUG] : <==      Total: 1
2025-09-09 11:42:33.876[WARN ] : Attempted to use a blacklisted JWT token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzg1NTg0LCJleHAiOjE3NTczODYxODR9.B75FnvQ4wDyases-p4-5FCxCaJ_e9hQOGtKYxcbFJjU
2025-09-09 11:42:33.877[ERROR] : Error checking if JWT token is in blacklist: 토큰이 무효화되었습니다. 다시 로그인해주세요.
2025-09-09 11:42:33.879[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 11:42:33.879[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 11:42:33.880[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-09 11:42:33.881[DEBUG] : <==      Total: 1
2025-09-09 11:42:49.603[INFO ] : HikariPool-1 - Shutdown initiated...
2025-09-09 11:42:49.614[INFO ] : HikariPool-1 - Shutdown completed.
2025-09-09 12:39:36.175[INFO ] : Starting SpringBootTemplateApplication using Java 17.0.12 with PID 1304 (D:\Web\Spring\Workspace\SpringBootTemplate\out\production\classes started by IDBS_Oculus in D:\Web\Spring\Workspace\SpringBootTemplate)
2025-09-09 12:39:36.177[DEBUG] : Running with Spring Boot v3.3.12, Spring v6.1.20
2025-09-09 12:39:36.178[INFO ] : No active profile set, falling back to 1 default profile: "default"
2025-09-09 12:39:36.240[INFO ] : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-09-09 12:39:36.241[INFO ] : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-09-09 12:39:37.818[INFO ] : Tomcat initialized with port 8080 (http)
2025-09-09 12:39:37.835[INFO ] : Starting service [Tomcat]
2025-09-09 12:39:37.835[INFO ] : Starting Servlet engine: [Apache Tomcat/10.1.41]
2025-09-09 12:39:38.071[INFO ] : At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2025-09-09 12:39:38.084[INFO ] : Initializing Spring embedded WebApplicationContext
2025-09-09 12:39:38.084[INFO ] : Root WebApplicationContext: initialization completed in 1843 ms
2025-09-09 12:39:38.545[DEBUG] : Filter 'jwtRequestFilter' configured for use
2025-09-09 12:39:38.671[INFO ] : Global AuthenticationManager configured with UserDetailsService bean with name userDetailsServiceImpl
2025-09-09 12:39:38.834[INFO ] : Adding welcome page template: index
2025-09-09 12:39:39.212[INFO ] : LiveReload server is running on port 35729
2025-09-09 12:39:39.261[INFO ] : Tomcat started on port 8080 (http) with context path '/'
2025-09-09 12:39:39.276[INFO ] : Started SpringBootTemplateApplication in 3.885 seconds (process running for 4.811)
2025-09-09 12:39:46.757[INFO ] : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-09-09 12:39:46.758[INFO ] : Initializing Servlet 'dispatcherServlet'
2025-09-09 12:39:46.759[INFO ] : Completed initialization in 1 ms
2025-09-09 12:39:47.012[INFO ] : HikariPool-1 - Starting...
2025-09-09 12:39:47.241[INFO ] : HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@1566d4a8
2025-09-09 12:39:47.244[INFO ] : HikariPool-1 - Start completed.
2025-09-09 12:39:47.253[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 12:39:47.289[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 12:39:47.304[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 14 msec}
2025-09-09 12:39:47.337[DEBUG] : <==      Total: 1
2025-09-09 12:39:47.444[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 12:39:47.445[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 12:39:47.447[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-09 12:39:47.449[DEBUG] : <==      Total: 1
2025-09-09 12:40:06.740[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 12:40:06.740[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzg5MTg3LCJleHAiOjE3NTczODk3ODd9.dpzEQ3GqZQ62z4dDcKVGDd0rZ0cTXZL-dHXRSWQ291Y(String)
2025-09-09 12:40:06.741[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzg5MTg3LCJleHAiOjE3NTczODk3ODd9.dpzEQ3GqZQ62z4dDcKVGDd0rZ0cTXZL-dHXRSWQ291Y' AND expires_at > NOW()
 {executed in 1 msec}
2025-09-09 12:40:06.742[DEBUG] : <==      Total: 0
2025-09-09 12:40:06.770[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 12:40:06.771[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 12:40:06.772[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-09 12:40:06.773[DEBUG] : <==      Total: 1
2025-09-09 12:40:19.092[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 12:40:19.093[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzg5MTg3LCJleHAiOjE3NTczODk3ODd9.dpzEQ3GqZQ62z4dDcKVGDd0rZ0cTXZL-dHXRSWQ291Y(String)
2025-09-09 12:40:19.094[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzg5MTg3LCJleHAiOjE3NTczODk3ODd9.dpzEQ3GqZQ62z4dDcKVGDd0rZ0cTXZL-dHXRSWQ291Y' AND expires_at > NOW()
 {executed in 1 msec}
2025-09-09 12:40:19.095[DEBUG] : <==      Total: 0
2025-09-09 12:40:19.099[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 12:40:19.100[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 12:40:19.101[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-09 12:40:19.103[DEBUG] : <==      Total: 1
2025-09-09 12:40:32.008[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 12:40:32.009[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzg5MTg3LCJleHAiOjE3NTczODk3ODd9.dpzEQ3GqZQ62z4dDcKVGDd0rZ0cTXZL-dHXRSWQ291Y(String)
2025-09-09 12:40:32.010[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzg5MTg3LCJleHAiOjE3NTczODk3ODd9.dpzEQ3GqZQ62z4dDcKVGDd0rZ0cTXZL-dHXRSWQ291Y' AND expires_at > NOW()
 {executed in 1 msec}
2025-09-09 12:40:32.011[DEBUG] : <==      Total: 0
2025-09-09 12:40:32.014[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 12:40:32.014[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 12:40:32.015[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-09 12:40:32.017[DEBUG] : <==      Total: 1
2025-09-09 12:40:32.033[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO blacklisted_tokens (token, expires_at)
        VALUES ('eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzg5MTg3LCJleHAiOjE3NTczODk3ODd9.dpzEQ3GqZQ62z4dDcKVGDd0rZ0cTXZL-dHXRSWQ291Y', 2025-09-09T12:49:47)
 {executed in 6 msec}
2025-09-09 12:40:35.007[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 12:40:35.007[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzg5MTg3LCJleHAiOjE3NTczODk3ODd9.dpzEQ3GqZQ62z4dDcKVGDd0rZ0cTXZL-dHXRSWQ291Y(String)
2025-09-09 12:40:35.008[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzg5MTg3LCJleHAiOjE3NTczODk3ODd9.dpzEQ3GqZQ62z4dDcKVGDd0rZ0cTXZL-dHXRSWQ291Y' AND expires_at > NOW()
 {executed in 1 msec}
2025-09-09 12:40:35.009[DEBUG] : <==      Total: 1
2025-09-09 12:40:35.010[WARN ] : Attempted to use a blacklisted JWT token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzg5MTg3LCJleHAiOjE3NTczODk3ODd9.dpzEQ3GqZQ62z4dDcKVGDd0rZ0cTXZL-dHXRSWQ291Y
2025-09-09 12:40:35.010[ERROR] : Error checking if JWT token is in blacklist: 토큰이 무효화되었습니다. 다시 로그인해주세요.
2025-09-09 12:40:35.013[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 12:40:35.013[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 12:40:35.014[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-09 12:40:35.016[DEBUG] : <==      Total: 1
2025-09-09 12:40:35.036[ERROR] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO blacklisted_tokens (token, expires_at)
        VALUES ('eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzg5MTg3LCJleHAiOjE3NTczODk3ODd9.dpzEQ3GqZQ62z4dDcKVGDd0rZ0cTXZL-dHXRSWQ291Y', 2025-09-09T12:49:47)
 {FAILED after 13 msec}
java.sql.SQLIntegrityConstraintViolationException: Duplicate entry 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzg5MTg' for key 'blacklisted_tokens.token'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:118)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:912)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:354)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:333)
	at jdk.proxy2/jdk.proxy2.$Proxy75.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:224)
	at kr.co.jaehoon.springboottemplate.repository.BlacklistedTokenRepository.addToken(BlacklistedTokenRepository.java:28)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:769)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:769)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:721)
	at kr.co.jaehoon.springboottemplate.repository.BlacklistedTokenRepository$$SpringCGLIB$$0.addToken(<generated>)
	at kr.co.jaehoon.springboottemplate.security.JwtBlacklistService.addTokenToBlacklist(JwtBlacklistService.java:79)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:355)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:196)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:769)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:379)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:769)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:721)
	at kr.co.jaehoon.springboottemplate.security.JwtBlacklistService$$SpringCGLIB$$0.addTokenToBlacklist(<generated>)
	at kr.co.jaehoon.springboottemplate.controller.UserRestController.performLogout(UserRestController.java:200)
	at kr.co.jaehoon.springboottemplate.controller.UserRestController.mobileLogout(UserRestController.java:177)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:547)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:614)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at kr.co.jaehoon.springboottemplate.security.JwtRequestFilter.doFilterInternal(JwtRequestFilter.java:120)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:842)
2025-09-09 12:40:35.145[ERROR] : Failed to add token to blacklist or token already exists: 
### Error updating database.  Cause: java.sql.SQLIntegrityConstraintViolationException: Duplicate entry 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzg5MTg' for key 'blacklisted_tokens.token'
### The error may exist in file [D:\Web\Spring\Workspace\SpringBootTemplate\out\production\resources\mappers\blacklistedTokenRepoMapper.xml]
### The error may involve BlacklistedToken.addToken-Inline
### The error occurred while setting parameters
### SQL: INSERT INTO blacklisted_tokens (token, expires_at)         VALUES (?, ?)
### Cause: java.sql.SQLIntegrityConstraintViolationException: Duplicate entry 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzg5MTg' for key 'blacklisted_tokens.token'
; Duplicate entry 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzg5MTg' for key 'blacklisted_tokens.token'
2025-09-09 12:41:00.746[INFO ] : HikariPool-1 - Shutdown initiated...
2025-09-09 12:41:00.754[INFO ] : HikariPool-1 - Shutdown completed.
2025-09-09 13:02:43.484[INFO ] : Starting SpringBootTemplateApplication using Java 17.0.12 with PID 18304 (D:\Web\Spring\Workspace\SpringBootTemplate\out\production\classes started by IDBS_Oculus in D:\Web\Spring\Workspace\SpringBootTemplate)
2025-09-09 13:02:43.485[DEBUG] : Running with Spring Boot v3.3.12, Spring v6.1.20
2025-09-09 13:02:43.486[INFO ] : No active profile set, falling back to 1 default profile: "default"
2025-09-09 13:02:43.548[INFO ] : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-09-09 13:02:43.548[INFO ] : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-09-09 13:02:45.111[INFO ] : Tomcat initialized with port 8080 (http)
2025-09-09 13:02:45.127[INFO ] : Starting service [Tomcat]
2025-09-09 13:02:45.128[INFO ] : Starting Servlet engine: [Apache Tomcat/10.1.41]
2025-09-09 13:02:45.375[INFO ] : At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2025-09-09 13:02:45.385[INFO ] : Initializing Spring embedded WebApplicationContext
2025-09-09 13:02:45.386[INFO ] : Root WebApplicationContext: initialization completed in 1837 ms
2025-09-09 13:02:45.782[DEBUG] : Filter 'jwtRequestFilter' configured for use
2025-09-09 13:02:45.898[INFO ] : Global AuthenticationManager configured with UserDetailsService bean with name userDetailsServiceImpl
2025-09-09 13:02:46.032[INFO ] : Adding welcome page template: index
2025-09-09 13:02:46.399[INFO ] : LiveReload server is running on port 35729
2025-09-09 13:02:46.451[INFO ] : Tomcat started on port 8080 (http) with context path '/'
2025-09-09 13:02:46.466[INFO ] : Started SpringBootTemplateApplication in 3.738 seconds (process running for 4.649)
2025-09-09 13:02:55.538[INFO ] : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-09-09 13:02:55.538[INFO ] : Initializing Servlet 'dispatcherServlet'
2025-09-09 13:02:55.540[INFO ] : Completed initialization in 2 ms
2025-09-09 13:02:55.957[INFO ] : HikariPool-1 - Starting...
2025-09-09 13:02:56.152[INFO ] : HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@50169b88
2025-09-09 13:02:56.154[INFO ] : HikariPool-1 - Start completed.
2025-09-09 13:02:56.192[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 13:02:56.227[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 13:02:56.241[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 13 msec}
2025-09-09 13:02:56.269[DEBUG] : <==      Total: 1
2025-09-09 13:02:56.381[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 13:02:56.382[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 13:02:56.383[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-09 13:02:56.385[DEBUG] : <==      Total: 1
2025-09-09 13:03:21.951[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 13:03:21.951[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3MzkwNTc2LCJleHAiOjE3NTczOTExNzZ9.GG3mK_7cdMqsVHC0eb_ZwoH5saYgyO-lQSV9Cdy0S74(String)
2025-09-09 13:03:21.953[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3MzkwNTc2LCJleHAiOjE3NTczOTExNzZ9.GG3mK_7cdMqsVHC0eb_ZwoH5saYgyO-lQSV9Cdy0S74' AND expires_at > NOW()
 {executed in 0 msec}
2025-09-09 13:03:21.953[DEBUG] : <==      Total: 0
2025-09-09 13:03:21.984[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 13:03:21.985[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 13:03:21.986[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-09 13:03:21.988[DEBUG] : <==      Total: 1
2025-09-09 13:03:22.005[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO blacklisted_tokens (token, expires_at)
        VALUES ('eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3MzkwNTc2LCJleHAiOjE3NTczOTExNzZ9.GG3mK_7cdMqsVHC0eb_ZwoH5saYgyO-lQSV9Cdy0S74', 2025-09-09T13:12:56)
 {executed in 4 msec}
2025-09-09 13:03:24.884[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 13:03:24.885[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3MzkwNTc2LCJleHAiOjE3NTczOTExNzZ9.GG3mK_7cdMqsVHC0eb_ZwoH5saYgyO-lQSV9Cdy0S74(String)
2025-09-09 13:03:24.887[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3MzkwNTc2LCJleHAiOjE3NTczOTExNzZ9.GG3mK_7cdMqsVHC0eb_ZwoH5saYgyO-lQSV9Cdy0S74' AND expires_at > NOW()
 {executed in 1 msec}
2025-09-09 13:03:24.891[DEBUG] : <==      Total: 1
2025-09-09 13:03:24.892[WARN ] : Attempted to use a blacklisted JWT token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3MzkwNTc2LCJleHAiOjE3NTczOTExNzZ9.GG3mK_7cdMqsVHC0eb_ZwoH5saYgyO-lQSV9Cdy0S74
2025-09-09 13:03:24.894[ERROR] : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
org.springframework.security.authentication.BadCredentialsException: 토큰이 무효화되었습니다. 다시 로그인해주세요.
	at kr.co.jaehoon.springboottemplate.security.JwtRequestFilter.doFilterInternal(JwtRequestFilter.java:72)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:842)
2025-09-09 13:04:16.433[INFO ] : HikariPool-1 - Shutdown initiated...
2025-09-09 13:04:16.442[INFO ] : HikariPool-1 - Shutdown completed.
2025-09-09 13:06:10.832[INFO ] : Starting SpringBootTemplateApplication using Java 17.0.12 with PID 17384 (D:\Web\Spring\Workspace\SpringBootTemplate\out\production\classes started by IDBS_Oculus in D:\Web\Spring\Workspace\SpringBootTemplate)
2025-09-09 13:06:10.833[DEBUG] : Running with Spring Boot v3.3.12, Spring v6.1.20
2025-09-09 13:06:10.834[INFO ] : No active profile set, falling back to 1 default profile: "default"
2025-09-09 13:06:10.899[INFO ] : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-09-09 13:06:10.899[INFO ] : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-09-09 13:06:12.494[INFO ] : Tomcat initialized with port 8080 (http)
2025-09-09 13:06:12.515[INFO ] : Starting service [Tomcat]
2025-09-09 13:06:12.516[INFO ] : Starting Servlet engine: [Apache Tomcat/10.1.41]
2025-09-09 13:06:12.746[INFO ] : At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2025-09-09 13:06:12.757[INFO ] : Initializing Spring embedded WebApplicationContext
2025-09-09 13:06:12.757[INFO ] : Root WebApplicationContext: initialization completed in 1857 ms
2025-09-09 13:06:13.148[DEBUG] : Filter 'jwtRequestFilter' configured for use
2025-09-09 13:06:13.254[INFO ] : Global AuthenticationManager configured with UserDetailsService bean with name userDetailsServiceImpl
2025-09-09 13:06:13.392[INFO ] : Adding welcome page template: index
2025-09-09 13:06:13.756[INFO ] : LiveReload server is running on port 35729
2025-09-09 13:06:13.804[INFO ] : Tomcat started on port 8080 (http) with context path '/'
2025-09-09 13:06:13.817[INFO ] : Started SpringBootTemplateApplication in 3.728 seconds (process running for 4.613)
2025-09-09 13:06:25.687[INFO ] : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-09-09 13:06:25.687[INFO ] : Initializing Servlet 'dispatcherServlet'
2025-09-09 13:06:25.688[INFO ] : Completed initialization in 1 ms
2025-09-09 13:06:25.908[INFO ] : HikariPool-1 - Starting...
2025-09-09 13:06:26.085[INFO ] : HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@221c4688
2025-09-09 13:06:26.087[INFO ] : HikariPool-1 - Start completed.
2025-09-09 13:06:26.122[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 13:06:26.167[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 13:06:26.181[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 13 msec}
2025-09-09 13:06:26.210[DEBUG] : <==      Total: 1
2025-09-09 13:06:26.331[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 13:06:26.331[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 13:06:26.333[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-09 13:06:26.336[DEBUG] : <==      Total: 1
2025-09-09 13:06:48.407[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 13:06:48.408[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3MzkwNzg2LCJleHAiOjE3NTczOTEzODZ9.I_nUX0V6P_UOgy9DDBfmumrouBypHPe6xdRXoooL494(String)
2025-09-09 13:06:48.409[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3MzkwNzg2LCJleHAiOjE3NTczOTEzODZ9.I_nUX0V6P_UOgy9DDBfmumrouBypHPe6xdRXoooL494' AND expires_at > NOW()
 {executed in 1 msec}
2025-09-09 13:06:48.410[DEBUG] : <==      Total: 0
2025-09-09 13:06:48.437[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 13:06:48.438[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 13:06:48.439[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-09 13:06:48.442[DEBUG] : <==      Total: 1
2025-09-09 13:06:48.530[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO blacklisted_tokens (token, expires_at)
        VALUES ('eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3MzkwNzg2LCJleHAiOjE3NTczOTEzODZ9.I_nUX0V6P_UOgy9DDBfmumrouBypHPe6xdRXoooL494', 2025-09-09T13:16:26)
 {executed in 6 msec}
2025-09-09 13:06:55.130[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 13:06:55.131[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3MzkwNzg2LCJleHAiOjE3NTczOTEzODZ9.I_nUX0V6P_UOgy9DDBfmumrouBypHPe6xdRXoooL494(String)
2025-09-09 13:06:55.132[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3MzkwNzg2LCJleHAiOjE3NTczOTEzODZ9.I_nUX0V6P_UOgy9DDBfmumrouBypHPe6xdRXoooL494' AND expires_at > NOW()
 {executed in 0 msec}
2025-09-09 13:06:55.133[DEBUG] : <==      Total: 1
2025-09-09 13:06:55.134[WARN ] : Attempted to use a blacklisted JWT token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3MzkwNzg2LCJleHAiOjE3NTczOTEzODZ9.I_nUX0V6P_UOgy9DDBfmumrouBypHPe6xdRXoooL494
2025-09-09 13:06:55.135[ERROR] : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
org.springframework.security.authentication.BadCredentialsException: 토큰이 무효화되었습니다. 다시 로그인해주세요.
	at kr.co.jaehoon.springboottemplate.security.JwtRequestFilter.doFilterInternal(JwtRequestFilter.java:72)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:842)
2025-09-09 13:07:31.656[INFO ] : HikariPool-1 - Shutdown initiated...
2025-09-09 13:07:31.664[INFO ] : HikariPool-1 - Shutdown completed.
2025-09-09 14:10:25.098[INFO ] : Starting SpringBootTemplateApplication using Java 17.0.12 with PID 7148 (D:\Web\Spring\Workspace\SpringBootTemplate\out\production\classes started by IDBS_Oculus in D:\Web\Spring\Workspace\SpringBootTemplate)
2025-09-09 14:10:25.100[DEBUG] : Running with Spring Boot v3.3.12, Spring v6.1.20
2025-09-09 14:10:25.101[INFO ] : No active profile set, falling back to 1 default profile: "default"
2025-09-09 14:10:25.163[INFO ] : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-09-09 14:10:25.164[INFO ] : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-09-09 14:10:26.723[INFO ] : Tomcat initialized with port 8080 (http)
2025-09-09 14:10:26.738[INFO ] : Starting service [Tomcat]
2025-09-09 14:10:26.739[INFO ] : Starting Servlet engine: [Apache Tomcat/10.1.41]
2025-09-09 14:10:26.986[INFO ] : At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2025-09-09 14:10:26.997[INFO ] : Initializing Spring embedded WebApplicationContext
2025-09-09 14:10:26.997[INFO ] : Root WebApplicationContext: initialization completed in 1833 ms
2025-09-09 14:10:27.445[DEBUG] : Filter 'jwtRequestFilter' configured for use
2025-09-09 14:10:27.563[INFO ] : Global AuthenticationManager configured with UserDetailsService bean with name userDetailsServiceImpl
2025-09-09 14:10:27.716[INFO ] : Adding welcome page template: index
2025-09-09 14:10:28.080[INFO ] : LiveReload server is running on port 35729
2025-09-09 14:10:28.134[INFO ] : Tomcat started on port 8080 (http) with context path '/'
2025-09-09 14:10:28.149[INFO ] : Started SpringBootTemplateApplication in 3.811 seconds (process running for 4.706)
2025-09-09 14:10:37.899[INFO ] : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-09-09 14:10:37.900[INFO ] : Initializing Servlet 'dispatcherServlet'
2025-09-09 14:10:37.901[INFO ] : Completed initialization in 1 ms
2025-09-09 14:10:38.140[INFO ] : HikariPool-1 - Starting...
2025-09-09 14:10:38.339[INFO ] : HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@339824a6
2025-09-09 14:10:38.341[INFO ] : HikariPool-1 - Start completed.
2025-09-09 14:10:38.379[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 14:10:38.414[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 14:10:38.435[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 20 msec}
2025-09-09 14:10:38.464[DEBUG] : <==      Total: 1
2025-09-09 14:10:38.579[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 14:10:38.580[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 14:10:38.581[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 0 msec}
2025-09-09 14:10:38.583[DEBUG] : <==      Total: 1
2025-09-09 14:11:08.772[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 14:11:08.773[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzk0NjM4LCJleHAiOjE3NTczOTUyMzh9.W9khO_u359dFzoLt2Jbd5snjwkhZwnA8hUn2Q3C5KH0(String)
2025-09-09 14:11:08.776[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzk0NjM4LCJleHAiOjE3NTczOTUyMzh9.W9khO_u359dFzoLt2Jbd5snjwkhZwnA8hUn2Q3C5KH0' AND expires_at > NOW()
 {executed in 3 msec}
2025-09-09 14:11:08.778[DEBUG] : <==      Total: 0
2025-09-09 14:11:08.812[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 14:11:08.812[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 14:11:08.813[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-09 14:11:08.815[DEBUG] : <==      Total: 1
2025-09-09 14:11:08.830[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO blacklisted_tokens (token, expires_at)
        VALUES ('eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzk0NjM4LCJleHAiOjE3NTczOTUyMzh9.W9khO_u359dFzoLt2Jbd5snjwkhZwnA8hUn2Q3C5KH0', 2025-09-09T14:20:38)
 {executed in 4 msec}
2025-09-09 14:11:21.198[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 14:11:21.199[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzk0NjM4LCJleHAiOjE3NTczOTUyMzh9.W9khO_u359dFzoLt2Jbd5snjwkhZwnA8hUn2Q3C5KH0(String)
2025-09-09 14:11:21.201[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzk0NjM4LCJleHAiOjE3NTczOTUyMzh9.W9khO_u359dFzoLt2Jbd5snjwkhZwnA8hUn2Q3C5KH0' AND expires_at > NOW()
 {executed in 2 msec}
2025-09-09 14:11:21.204[DEBUG] : <==      Total: 1
2025-09-09 14:11:21.206[WARN ] : Attempted to use a blacklisted JWT token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzk0NjM4LCJleHAiOjE3NTczOTUyMzh9.W9khO_u359dFzoLt2Jbd5snjwkhZwnA8hUn2Q3C5KH0
2025-09-09 14:11:21.207[ERROR] : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
org.springframework.security.authentication.BadCredentialsException: 토큰이 무효화되었습니다. 다시 로그인해주세요.
	at kr.co.jaehoon.springboottemplate.security.JwtRequestFilter.doFilterInternal(JwtRequestFilter.java:72)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:842)
2025-09-09 14:15:12.278[INFO ] : HikariPool-1 - Shutdown initiated...
2025-09-09 14:15:12.290[INFO ] : HikariPool-1 - Shutdown completed.
2025-09-09 14:30:33.661[INFO ] : Starting SpringBootTemplateApplication using Java 17.0.12 with PID 12436 (D:\Web\Spring\Workspace\SpringBootTemplate\out\production\classes started by IDBS_Oculus in D:\Web\Spring\Workspace\SpringBootTemplate)
2025-09-09 14:30:33.663[DEBUG] : Running with Spring Boot v3.3.12, Spring v6.1.20
2025-09-09 14:30:33.663[INFO ] : No active profile set, falling back to 1 default profile: "default"
2025-09-09 14:30:33.719[INFO ] : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-09-09 14:30:33.719[INFO ] : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-09-09 14:30:35.187[INFO ] : Tomcat initialized with port 8080 (http)
2025-09-09 14:30:35.200[INFO ] : Starting service [Tomcat]
2025-09-09 14:30:35.200[INFO ] : Starting Servlet engine: [Apache Tomcat/10.1.41]
2025-09-09 14:30:35.393[INFO ] : At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2025-09-09 14:30:35.403[INFO ] : Initializing Spring embedded WebApplicationContext
2025-09-09 14:30:35.404[INFO ] : Root WebApplicationContext: initialization completed in 1685 ms
2025-09-09 14:30:35.792[DEBUG] : Filter 'jwtRequestFilter' configured for use
2025-09-09 14:30:35.899[INFO ] : Global AuthenticationManager configured with UserDetailsService bean with name userDetailsServiceImpl
2025-09-09 14:30:36.040[INFO ] : Adding welcome page template: index
2025-09-09 14:30:36.392[INFO ] : LiveReload server is running on port 35729
2025-09-09 14:30:36.438[INFO ] : Tomcat started on port 8080 (http) with context path '/'
2025-09-09 14:30:36.452[INFO ] : Started SpringBootTemplateApplication in 3.559 seconds (process running for 4.53)
2025-09-09 14:30:50.709[INFO ] : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-09-09 14:30:50.710[INFO ] : Initializing Servlet 'dispatcherServlet'
2025-09-09 14:30:50.712[INFO ] : Completed initialization in 2 ms
2025-09-09 14:31:05.928[INFO ] : HikariPool-1 - Starting...
2025-09-09 14:31:06.083[INFO ] : HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@3e719581
2025-09-09 14:31:06.085[INFO ] : HikariPool-1 - Start completed.
2025-09-09 14:31:06.114[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 14:31:06.146[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 14:31:06.160[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 13 msec}
2025-09-09 14:31:06.190[DEBUG] : <==      Total: 1
2025-09-09 14:31:06.308[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 14:31:06.309[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 14:31:06.310[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-09 14:31:06.311[DEBUG] : <==      Total: 1
2025-09-09 14:31:06.398[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 14:31:06.398[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzk1ODY2LCJleHAiOjE3NTczOTk0NjZ9.4eSfZU0WdVM2ay-alW_IEXREnHf4nOmKXcoZuYbP6uQ(String)
2025-09-09 14:31:06.400[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzk1ODY2LCJleHAiOjE3NTczOTk0NjZ9.4eSfZU0WdVM2ay-alW_IEXREnHf4nOmKXcoZuYbP6uQ' AND expires_at > NOW()
 {executed in 1 msec}
2025-09-09 14:31:06.402[DEBUG] : <==      Total: 0
2025-09-09 14:31:06.458[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 14:31:06.459[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 14:31:06.460[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-09 14:31:06.463[DEBUG] : <==      Total: 1
2025-09-09 14:31:06.471[DEBUG] : Secure-Page_UserDetails: [ROLE_USER]
2025-09-09 14:31:06.777[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 14:31:06.777[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzk1ODY2LCJleHAiOjE3NTczOTk0NjZ9.4eSfZU0WdVM2ay-alW_IEXREnHf4nOmKXcoZuYbP6uQ(String)
2025-09-09 14:31:06.779[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzk1ODY2LCJleHAiOjE3NTczOTk0NjZ9.4eSfZU0WdVM2ay-alW_IEXREnHf4nOmKXcoZuYbP6uQ' AND expires_at > NOW()
 {executed in 1 msec}
2025-09-09 14:31:06.780[DEBUG] : <==      Total: 0
2025-09-09 14:31:06.784[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 14:31:06.785[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 14:31:06.786[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 0 msec}
2025-09-09 14:31:06.787[DEBUG] : <==      Total: 1
2025-09-09 14:31:06.795[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 14:31:06.796[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzk1ODY2LCJleHAiOjE3NTczOTk0NjZ9.4eSfZU0WdVM2ay-alW_IEXREnHf4nOmKXcoZuYbP6uQ(String)
2025-09-09 14:31:06.798[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzk1ODY2LCJleHAiOjE3NTczOTk0NjZ9.4eSfZU0WdVM2ay-alW_IEXREnHf4nOmKXcoZuYbP6uQ' AND expires_at > NOW()
 {executed in 0 msec}
2025-09-09 14:31:06.799[DEBUG] : <==      Total: 0
2025-09-09 14:31:06.804[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 14:31:06.804[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 14:31:06.806[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-09 14:31:06.808[DEBUG] : <==      Total: 1
2025-09-09 14:31:08.229[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 14:31:08.230[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzk1ODY2LCJleHAiOjE3NTczOTk0NjZ9.4eSfZU0WdVM2ay-alW_IEXREnHf4nOmKXcoZuYbP6uQ(String)
2025-09-09 14:31:08.231[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzk1ODY2LCJleHAiOjE3NTczOTk0NjZ9.4eSfZU0WdVM2ay-alW_IEXREnHf4nOmKXcoZuYbP6uQ' AND expires_at > NOW()
 {executed in 1 msec}
2025-09-09 14:31:08.232[DEBUG] : <==      Total: 0
2025-09-09 14:31:08.235[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 14:31:08.236[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 14:31:08.237[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-09 14:31:08.240[DEBUG] : <==      Total: 1
2025-09-09 14:31:08.340[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 14:31:08.340[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzk1ODY2LCJleHAiOjE3NTczOTk0NjZ9.4eSfZU0WdVM2ay-alW_IEXREnHf4nOmKXcoZuYbP6uQ(String)
2025-09-09 14:31:08.342[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzk1ODY2LCJleHAiOjE3NTczOTk0NjZ9.4eSfZU0WdVM2ay-alW_IEXREnHf4nOmKXcoZuYbP6uQ' AND expires_at > NOW()
 {executed in 2 msec}
2025-09-09 14:31:08.343[DEBUG] : <==      Total: 0
2025-09-09 14:31:08.347[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 14:31:08.347[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 14:31:08.348[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-09 14:31:08.350[DEBUG] : <==      Total: 1
2025-09-09 14:31:11.712[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 14:31:11.712[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzk1ODY2LCJleHAiOjE3NTczOTk0NjZ9.4eSfZU0WdVM2ay-alW_IEXREnHf4nOmKXcoZuYbP6uQ(String)
2025-09-09 14:31:11.714[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzk1ODY2LCJleHAiOjE3NTczOTk0NjZ9.4eSfZU0WdVM2ay-alW_IEXREnHf4nOmKXcoZuYbP6uQ' AND expires_at > NOW()
 {executed in 2 msec}
2025-09-09 14:31:11.715[DEBUG] : <==      Total: 0
2025-09-09 14:31:11.718[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 14:31:11.719[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 14:31:11.720[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-09 14:31:11.721[DEBUG] : <==      Total: 1
2025-09-09 14:31:11.779[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 14:31:11.780[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzk1ODY2LCJleHAiOjE3NTczOTk0NjZ9.4eSfZU0WdVM2ay-alW_IEXREnHf4nOmKXcoZuYbP6uQ(String)
2025-09-09 14:31:11.780[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 14:31:11.781[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzk1ODY2LCJleHAiOjE3NTczOTk0NjZ9.4eSfZU0WdVM2ay-alW_IEXREnHf4nOmKXcoZuYbP6uQ' AND expires_at > NOW()
 {executed in 1 msec}
2025-09-09 14:31:11.782[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzk1ODY2LCJleHAiOjE3NTczOTk0NjZ9.4eSfZU0WdVM2ay-alW_IEXREnHf4nOmKXcoZuYbP6uQ(String)
2025-09-09 14:31:11.782[DEBUG] : <==      Total: 0
2025-09-09 14:31:11.784[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzk1ODY2LCJleHAiOjE3NTczOTk0NjZ9.4eSfZU0WdVM2ay-alW_IEXREnHf4nOmKXcoZuYbP6uQ' AND expires_at > NOW()
 {executed in 2 msec}
2025-09-09 14:31:11.786[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 14:31:11.786[DEBUG] : <==      Total: 0
2025-09-09 14:31:11.787[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 14:31:11.788[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-09 14:31:11.790[DEBUG] : <==      Total: 1
2025-09-09 14:31:11.792[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 14:31:11.793[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 14:31:11.795[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-09 14:31:11.795[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 14:31:11.796[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzk1ODY2LCJleHAiOjE3NTczOTk0NjZ9.4eSfZU0WdVM2ay-alW_IEXREnHf4nOmKXcoZuYbP6uQ(String)
2025-09-09 14:31:11.796[DEBUG] : <==      Total: 1
2025-09-09 14:31:11.797[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzk1ODY2LCJleHAiOjE3NTczOTk0NjZ9.4eSfZU0WdVM2ay-alW_IEXREnHf4nOmKXcoZuYbP6uQ' AND expires_at > NOW()
 {executed in 1 msec}
2025-09-09 14:31:11.797[DEBUG] : <==      Total: 0
2025-09-09 14:31:11.801[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 14:31:11.802[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 14:31:11.803[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-09 14:31:11.805[DEBUG] : <==      Total: 1
2025-09-09 14:31:12.968[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 14:31:12.969[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzk1ODY2LCJleHAiOjE3NTczOTk0NjZ9.4eSfZU0WdVM2ay-alW_IEXREnHf4nOmKXcoZuYbP6uQ(String)
2025-09-09 14:31:12.970[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzk1ODY2LCJleHAiOjE3NTczOTk0NjZ9.4eSfZU0WdVM2ay-alW_IEXREnHf4nOmKXcoZuYbP6uQ' AND expires_at > NOW()
 {executed in 1 msec}
2025-09-09 14:31:12.971[DEBUG] : <==      Total: 0
2025-09-09 14:31:12.974[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 14:31:12.974[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 14:31:12.976[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-09 14:31:12.977[DEBUG] : <==      Total: 1
2025-09-09 14:31:12.984[DEBUG] : Secure-Page_UserDetails: [ROLE_USER]
2025-09-09 14:31:13.072[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 14:31:13.073[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzk1ODY2LCJleHAiOjE3NTczOTk0NjZ9.4eSfZU0WdVM2ay-alW_IEXREnHf4nOmKXcoZuYbP6uQ(String)
2025-09-09 14:31:13.074[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzk1ODY2LCJleHAiOjE3NTczOTk0NjZ9.4eSfZU0WdVM2ay-alW_IEXREnHf4nOmKXcoZuYbP6uQ' AND expires_at > NOW()
 {executed in 1 msec}
2025-09-09 14:31:13.075[DEBUG] : <==      Total: 0
2025-09-09 14:31:13.079[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 14:31:13.080[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 14:31:13.081[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-09 14:31:13.083[DEBUG] : <==      Total: 1
2025-09-09 14:31:13.085[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 14:31:13.085[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzk1ODY2LCJleHAiOjE3NTczOTk0NjZ9.4eSfZU0WdVM2ay-alW_IEXREnHf4nOmKXcoZuYbP6uQ(String)
2025-09-09 14:31:13.086[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzk1ODY2LCJleHAiOjE3NTczOTk0NjZ9.4eSfZU0WdVM2ay-alW_IEXREnHf4nOmKXcoZuYbP6uQ' AND expires_at > NOW()
 {executed in 1 msec}
2025-09-09 14:31:13.087[DEBUG] : <==      Total: 0
2025-09-09 14:31:13.091[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 14:31:13.092[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 14:31:13.093[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-09 14:31:13.095[DEBUG] : <==      Total: 1
2025-09-09 14:31:17.275[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 14:31:17.276[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzk1ODY2LCJleHAiOjE3NTczOTk0NjZ9.4eSfZU0WdVM2ay-alW_IEXREnHf4nOmKXcoZuYbP6uQ(String)
2025-09-09 14:31:17.277[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzk1ODY2LCJleHAiOjE3NTczOTk0NjZ9.4eSfZU0WdVM2ay-alW_IEXREnHf4nOmKXcoZuYbP6uQ' AND expires_at > NOW()
 {executed in 0 msec}
2025-09-09 14:31:17.277[DEBUG] : <==      Total: 0
2025-09-09 14:31:17.280[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 14:31:17.281[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 14:31:17.282[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-09 14:31:17.283[DEBUG] : <==      Total: 1
2025-09-09 14:31:17.302[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO blacklisted_tokens (token, expires_at)
        VALUES ('eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzk1ODY2LCJleHAiOjE3NTczOTk0NjZ9.4eSfZU0WdVM2ay-alW_IEXREnHf4nOmKXcoZuYbP6uQ', 2025-09-09T15:31:06)
 {executed in 5 msec}
2025-09-09 14:34:23.569[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 14:34:23.570[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 14:34:23.573[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 2 msec}
2025-09-09 14:34:23.579[DEBUG] : <==      Total: 1
2025-09-09 14:34:23.684[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 14:34:23.685[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 14:34:23.686[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-09 14:34:23.687[DEBUG] : <==      Total: 1
2025-09-09 14:34:23.714[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 14:34:23.714[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzk2MDYzLCJleHAiOjE3NTczOTk2NjN9.2YQ2j77DPx9Ely4qr_T5yecawWxPI0_n4nA_2G1ix60(String)
2025-09-09 14:34:23.715[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzk2MDYzLCJleHAiOjE3NTczOTk2NjN9.2YQ2j77DPx9Ely4qr_T5yecawWxPI0_n4nA_2G1ix60' AND expires_at > NOW()
 {executed in 1 msec}
2025-09-09 14:34:23.716[DEBUG] : <==      Total: 0
2025-09-09 14:34:23.720[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 14:34:23.720[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 14:34:23.721[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 0 msec}
2025-09-09 14:34:23.723[DEBUG] : <==      Total: 1
2025-09-09 14:34:23.729[DEBUG] : Secure-Page_UserDetails: [ROLE_USER]
2025-09-09 14:34:23.762[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 14:34:23.762[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzk2MDYzLCJleHAiOjE3NTczOTk2NjN9.2YQ2j77DPx9Ely4qr_T5yecawWxPI0_n4nA_2G1ix60(String)
2025-09-09 14:34:23.763[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzk2MDYzLCJleHAiOjE3NTczOTk2NjN9.2YQ2j77DPx9Ely4qr_T5yecawWxPI0_n4nA_2G1ix60' AND expires_at > NOW()
 {executed in 1 msec}
2025-09-09 14:34:23.764[DEBUG] : <==      Total: 0
2025-09-09 14:34:23.767[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 14:34:23.768[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 14:34:23.769[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 0 msec}
2025-09-09 14:34:23.769[DEBUG] : <==      Total: 1
2025-09-09 14:34:23.778[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 14:34:23.779[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzk2MDYzLCJleHAiOjE3NTczOTk2NjN9.2YQ2j77DPx9Ely4qr_T5yecawWxPI0_n4nA_2G1ix60(String)
2025-09-09 14:34:23.780[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzk2MDYzLCJleHAiOjE3NTczOTk2NjN9.2YQ2j77DPx9Ely4qr_T5yecawWxPI0_n4nA_2G1ix60' AND expires_at > NOW()
 {executed in 1 msec}
2025-09-09 14:34:23.781[DEBUG] : <==      Total: 0
2025-09-09 14:34:23.786[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 14:34:23.787[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 14:34:23.789[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-09 14:34:23.790[DEBUG] : <==      Total: 1
2025-09-09 14:34:25.223[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 14:34:25.223[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzk2MDYzLCJleHAiOjE3NTczOTk2NjN9.2YQ2j77DPx9Ely4qr_T5yecawWxPI0_n4nA_2G1ix60(String)
2025-09-09 14:34:25.224[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzk2MDYzLCJleHAiOjE3NTczOTk2NjN9.2YQ2j77DPx9Ely4qr_T5yecawWxPI0_n4nA_2G1ix60' AND expires_at > NOW()
 {executed in 1 msec}
2025-09-09 14:34:25.225[DEBUG] : <==      Total: 0
2025-09-09 14:34:25.229[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 14:34:25.230[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 14:34:25.231[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 0 msec}
2025-09-09 14:34:25.231[DEBUG] : <==      Total: 1
2025-09-09 14:34:25.324[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 14:34:25.325[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzk2MDYzLCJleHAiOjE3NTczOTk2NjN9.2YQ2j77DPx9Ely4qr_T5yecawWxPI0_n4nA_2G1ix60(String)
2025-09-09 14:34:25.326[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzk2MDYzLCJleHAiOjE3NTczOTk2NjN9.2YQ2j77DPx9Ely4qr_T5yecawWxPI0_n4nA_2G1ix60' AND expires_at > NOW()
 {executed in 1 msec}
2025-09-09 14:34:25.327[DEBUG] : <==      Total: 0
2025-09-09 14:34:25.331[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 14:34:25.331[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 14:34:25.333[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-09 14:34:25.334[DEBUG] : <==      Total: 1
2025-09-09 14:34:59.367[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 14:34:59.367[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzk2MDYzLCJleHAiOjE3NTczOTk2NjN9.2YQ2j77DPx9Ely4qr_T5yecawWxPI0_n4nA_2G1ix60(String)
2025-09-09 14:34:59.368[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzk2MDYzLCJleHAiOjE3NTczOTk2NjN9.2YQ2j77DPx9Ely4qr_T5yecawWxPI0_n4nA_2G1ix60' AND expires_at > NOW()
 {executed in 1 msec}
2025-09-09 14:34:59.369[DEBUG] : <==      Total: 0
2025-09-09 14:34:59.373[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 14:34:59.374[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 14:34:59.375[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-09 14:34:59.376[DEBUG] : <==      Total: 1
2025-09-09 14:34:59.415[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 14:34:59.416[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzk2MDYzLCJleHAiOjE3NTczOTk2NjN9.2YQ2j77DPx9Ely4qr_T5yecawWxPI0_n4nA_2G1ix60(String)
2025-09-09 14:34:59.417[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzk2MDYzLCJleHAiOjE3NTczOTk2NjN9.2YQ2j77DPx9Ely4qr_T5yecawWxPI0_n4nA_2G1ix60' AND expires_at > NOW()
 {executed in 0 msec}
2025-09-09 14:34:59.417[DEBUG] : <==      Total: 0
2025-09-09 14:34:59.420[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 14:34:59.420[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 14:34:59.421[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 0 msec}
2025-09-09 14:34:59.423[DEBUG] : <==      Total: 1
2025-09-09 14:34:59.429[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 14:34:59.430[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzk2MDYzLCJleHAiOjE3NTczOTk2NjN9.2YQ2j77DPx9Ely4qr_T5yecawWxPI0_n4nA_2G1ix60(String)
2025-09-09 14:34:59.431[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 14:34:59.431[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzk2MDYzLCJleHAiOjE3NTczOTk2NjN9.2YQ2j77DPx9Ely4qr_T5yecawWxPI0_n4nA_2G1ix60(String)
2025-09-09 14:34:59.431[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzk2MDYzLCJleHAiOjE3NTczOTk2NjN9.2YQ2j77DPx9Ely4qr_T5yecawWxPI0_n4nA_2G1ix60' AND expires_at > NOW()
 {executed in 1 msec}
2025-09-09 14:34:59.432[DEBUG] : <==      Total: 0
2025-09-09 14:34:59.433[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzk2MDYzLCJleHAiOjE3NTczOTk2NjN9.2YQ2j77DPx9Ely4qr_T5yecawWxPI0_n4nA_2G1ix60' AND expires_at > NOW()
 {executed in 1 msec}
2025-09-09 14:34:59.435[DEBUG] : <==      Total: 0
2025-09-09 14:34:59.438[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 14:34:59.438[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 14:34:59.439[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-09 14:34:59.439[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 14:34:59.440[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 14:34:59.440[DEBUG] : <==      Total: 1
2025-09-09 14:34:59.441[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 0 msec}
2025-09-09 14:34:59.442[DEBUG] : <==      Total: 1
2025-09-09 14:35:00.616[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 14:35:00.616[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzk2MDYzLCJleHAiOjE3NTczOTk2NjN9.2YQ2j77DPx9Ely4qr_T5yecawWxPI0_n4nA_2G1ix60(String)
2025-09-09 14:35:00.617[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzk2MDYzLCJleHAiOjE3NTczOTk2NjN9.2YQ2j77DPx9Ely4qr_T5yecawWxPI0_n4nA_2G1ix60' AND expires_at > NOW()
 {executed in 0 msec}
2025-09-09 14:35:00.618[DEBUG] : <==      Total: 0
2025-09-09 14:35:00.621[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 14:35:00.621[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 14:35:00.622[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-09 14:35:00.623[DEBUG] : <==      Total: 1
2025-09-09 14:35:00.630[DEBUG] : Secure-Page_UserDetails: [ROLE_USER]
2025-09-09 14:35:00.731[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 14:35:00.731[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzk2MDYzLCJleHAiOjE3NTczOTk2NjN9.2YQ2j77DPx9Ely4qr_T5yecawWxPI0_n4nA_2G1ix60(String)
2025-09-09 14:35:00.732[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzk2MDYzLCJleHAiOjE3NTczOTk2NjN9.2YQ2j77DPx9Ely4qr_T5yecawWxPI0_n4nA_2G1ix60' AND expires_at > NOW()
 {executed in 1 msec}
2025-09-09 14:35:00.733[DEBUG] : <==      Total: 0
2025-09-09 14:35:00.737[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 14:35:00.737[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 14:35:00.739[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-09 14:35:00.740[DEBUG] : <==      Total: 1
2025-09-09 14:35:00.755[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 14:35:00.755[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzk2MDYzLCJleHAiOjE3NTczOTk2NjN9.2YQ2j77DPx9Ely4qr_T5yecawWxPI0_n4nA_2G1ix60(String)
2025-09-09 14:35:00.757[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzk2MDYzLCJleHAiOjE3NTczOTk2NjN9.2YQ2j77DPx9Ely4qr_T5yecawWxPI0_n4nA_2G1ix60' AND expires_at > NOW()
 {executed in 0 msec}
2025-09-09 14:35:00.757[DEBUG] : <==      Total: 0
2025-09-09 14:35:00.761[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 14:35:00.762[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 14:35:00.763[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 0 msec}
2025-09-09 14:35:00.764[DEBUG] : <==      Total: 1
2025-09-09 14:35:02.019[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 14:35:02.020[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzk2MDYzLCJleHAiOjE3NTczOTk2NjN9.2YQ2j77DPx9Ely4qr_T5yecawWxPI0_n4nA_2G1ix60(String)
2025-09-09 14:35:02.021[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzk2MDYzLCJleHAiOjE3NTczOTk2NjN9.2YQ2j77DPx9Ely4qr_T5yecawWxPI0_n4nA_2G1ix60' AND expires_at > NOW()
 {executed in 0 msec}
2025-09-09 14:35:02.021[DEBUG] : <==      Total: 0
2025-09-09 14:35:02.025[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 14:35:02.026[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 14:35:02.027[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-09 14:35:02.028[DEBUG] : <==      Total: 1
2025-09-09 14:35:02.040[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO blacklisted_tokens (token, expires_at)
        VALUES ('eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzk2MDYzLCJleHAiOjE3NTczOTk2NjN9.2YQ2j77DPx9Ely4qr_T5yecawWxPI0_n4nA_2G1ix60', 2025-09-09T15:34:23)
 {executed in 1 msec}
2025-09-09 14:35:05.904[INFO ] : HikariPool-1 - Shutdown initiated...
2025-09-09 14:35:05.912[INFO ] : HikariPool-1 - Shutdown completed.
2025-09-09 14:35:16.263[INFO ] : Starting SpringBootTemplateApplication using Java 17.0.12 with PID 11360 (D:\Web\Spring\Workspace\SpringBootTemplate\out\production\classes started by IDBS_Oculus in D:\Web\Spring\Workspace\SpringBootTemplate)
2025-09-09 14:35:16.265[DEBUG] : Running with Spring Boot v3.3.12, Spring v6.1.20
2025-09-09 14:35:16.266[INFO ] : No active profile set, falling back to 1 default profile: "default"
2025-09-09 14:35:16.348[INFO ] : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-09-09 14:35:16.349[INFO ] : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-09-09 14:35:18.171[INFO ] : Tomcat initialized with port 8080 (http)
2025-09-09 14:35:18.188[INFO ] : Starting service [Tomcat]
2025-09-09 14:35:18.188[INFO ] : Starting Servlet engine: [Apache Tomcat/10.1.41]
2025-09-09 14:35:18.424[INFO ] : At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2025-09-09 14:35:18.438[INFO ] : Initializing Spring embedded WebApplicationContext
2025-09-09 14:35:18.439[INFO ] : Root WebApplicationContext: initialization completed in 2090 ms
2025-09-09 14:35:18.907[DEBUG] : Filter 'jwtRequestFilter' configured for use
2025-09-09 14:35:19.038[INFO ] : Global AuthenticationManager configured with UserDetailsService bean with name userDetailsServiceImpl
2025-09-09 14:35:19.219[INFO ] : Adding welcome page template: index
2025-09-09 14:35:19.677[INFO ] : LiveReload server is running on port 35729
2025-09-09 14:35:19.742[INFO ] : Tomcat started on port 8080 (http) with context path '/'
2025-09-09 14:35:19.762[INFO ] : Started SpringBootTemplateApplication in 4.401 seconds (process running for 6.149)
2025-09-09 14:35:24.087[INFO ] : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-09-09 14:35:24.088[INFO ] : Initializing Servlet 'dispatcherServlet'
2025-09-09 14:35:24.089[INFO ] : Completed initialization in 1 ms
2025-09-09 14:35:33.720[INFO ] : HikariPool-1 - Starting...
2025-09-09 14:35:33.951[INFO ] : HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6d802974
2025-09-09 14:35:33.955[INFO ] : HikariPool-1 - Start completed.
2025-09-09 14:35:33.997[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 14:35:34.034[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 14:35:34.049[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 15 msec}
2025-09-09 14:35:34.080[DEBUG] : <==      Total: 1
2025-09-09 14:35:34.191[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 14:35:34.191[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 14:35:34.192[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-09 14:35:34.195[DEBUG] : <==      Total: 1
2025-09-09 14:35:34.300[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 14:35:34.301[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzk2MTM0LCJleHAiOjE3NTczOTk3MzR9._9k-BODwLH6FFdncRvXEcmxydGv43uQUU6FX8EQLRLk(String)
2025-09-09 14:35:34.303[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzk2MTM0LCJleHAiOjE3NTczOTk3MzR9._9k-BODwLH6FFdncRvXEcmxydGv43uQUU6FX8EQLRLk' AND expires_at > NOW()
 {executed in 1 msec}
2025-09-09 14:35:34.304[DEBUG] : <==      Total: 0
2025-09-09 14:35:34.351[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 14:35:34.351[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 14:35:34.352[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-09 14:35:34.355[DEBUG] : <==      Total: 1
2025-09-09 14:35:34.364[DEBUG] : Secure-Page_UserDetails: [ROLE_USER]
2025-09-09 14:35:34.688[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 14:35:34.688[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzk2MTM0LCJleHAiOjE3NTczOTk3MzR9._9k-BODwLH6FFdncRvXEcmxydGv43uQUU6FX8EQLRLk(String)
2025-09-09 14:35:34.690[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzk2MTM0LCJleHAiOjE3NTczOTk3MzR9._9k-BODwLH6FFdncRvXEcmxydGv43uQUU6FX8EQLRLk' AND expires_at > NOW()
 {executed in 1 msec}
2025-09-09 14:35:34.692[DEBUG] : <==      Total: 0
2025-09-09 14:35:34.696[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 14:35:34.696[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 14:35:34.697[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-09 14:35:34.700[DEBUG] : <==      Total: 1
2025-09-09 14:35:34.717[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 14:35:34.718[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzk2MTM0LCJleHAiOjE3NTczOTk3MzR9._9k-BODwLH6FFdncRvXEcmxydGv43uQUU6FX8EQLRLk(String)
2025-09-09 14:35:34.720[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzk2MTM0LCJleHAiOjE3NTczOTk3MzR9._9k-BODwLH6FFdncRvXEcmxydGv43uQUU6FX8EQLRLk' AND expires_at > NOW()
 {executed in 1 msec}
2025-09-09 14:35:34.721[DEBUG] : <==      Total: 0
2025-09-09 14:35:34.726[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 14:35:34.727[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 14:35:34.729[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-09 14:35:34.731[DEBUG] : <==      Total: 1
2025-09-09 14:35:36.438[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 14:35:36.438[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzk2MTM0LCJleHAiOjE3NTczOTk3MzR9._9k-BODwLH6FFdncRvXEcmxydGv43uQUU6FX8EQLRLk(String)
2025-09-09 14:35:36.439[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzk2MTM0LCJleHAiOjE3NTczOTk3MzR9._9k-BODwLH6FFdncRvXEcmxydGv43uQUU6FX8EQLRLk' AND expires_at > NOW()
 {executed in 1 msec}
2025-09-09 14:35:36.441[DEBUG] : <==      Total: 0
2025-09-09 14:35:36.444[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 14:35:36.445[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 14:35:36.446[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-09 14:35:36.450[DEBUG] : <==      Total: 1
2025-09-09 14:35:58.819[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 14:35:58.819[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzk2MTM0LCJleHAiOjE3NTczOTk3MzR9._9k-BODwLH6FFdncRvXEcmxydGv43uQUU6FX8EQLRLk(String)
2025-09-09 14:35:58.821[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzk2MTM0LCJleHAiOjE3NTczOTk3MzR9._9k-BODwLH6FFdncRvXEcmxydGv43uQUU6FX8EQLRLk' AND expires_at > NOW()
 {executed in 1 msec}
2025-09-09 14:35:58.822[DEBUG] : <==      Total: 0
2025-09-09 14:35:58.828[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 14:35:58.828[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 14:35:58.829[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-09 14:35:58.831[DEBUG] : <==      Total: 1
2025-09-09 14:36:05.952[INFO ] : HikariPool-1 - Shutdown initiated...
2025-09-09 14:36:05.961[INFO ] : HikariPool-1 - Shutdown completed.
2025-09-09 15:34:58.826[INFO ] : Starting SpringBootTemplateApplication using Java 17.0.12 with PID 5532 (D:\Web\Spring\Workspace\SpringBootTemplate\out\production\classes started by IDBS_Oculus in D:\Web\Spring\Workspace\SpringBootTemplate)
2025-09-09 15:34:58.827[DEBUG] : Running with Spring Boot v3.3.12, Spring v6.1.20
2025-09-09 15:34:58.828[INFO ] : No active profile set, falling back to 1 default profile: "default"
2025-09-09 15:34:58.888[INFO ] : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-09-09 15:34:58.888[INFO ] : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-09-09 15:35:00.346[INFO ] : Tomcat initialized with port 8080 (http)
2025-09-09 15:35:00.360[INFO ] : Starting service [Tomcat]
2025-09-09 15:35:00.360[INFO ] : Starting Servlet engine: [Apache Tomcat/10.1.41]
2025-09-09 15:35:00.598[INFO ] : At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2025-09-09 15:35:00.611[INFO ] : Initializing Spring embedded WebApplicationContext
2025-09-09 15:35:00.612[INFO ] : Root WebApplicationContext: initialization completed in 1723 ms
2025-09-09 15:35:01.086[DEBUG] : Filter 'jwtRequestFilter' configured for use
2025-09-09 15:35:01.152[INFO ] : Global AuthenticationManager configured with UserDetailsService bean with name userDetailsServiceImpl
2025-09-09 15:35:01.307[INFO ] : Adding welcome page template: index
2025-09-09 15:35:01.657[INFO ] : LiveReload server is running on port 35729
2025-09-09 15:35:01.704[INFO ] : Tomcat started on port 8080 (http) with context path '/'
2025-09-09 15:35:01.720[INFO ] : Started SpringBootTemplateApplication in 3.671 seconds (process running for 4.562)
2025-09-09 15:35:08.542[INFO ] : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-09-09 15:35:08.542[INFO ] : Initializing Servlet 'dispatcherServlet'
2025-09-09 15:35:08.543[INFO ] : Completed initialization in 1 ms
2025-09-09 15:35:08.774[INFO ] : HikariPool-1 - Starting...
2025-09-09 15:35:08.963[INFO ] : HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@54f5f2f
2025-09-09 15:35:08.966[INFO ] : HikariPool-1 - Start completed.
2025-09-09 15:35:09.002[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 15:35:09.037[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 15:35:09.051[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 12 msec}
2025-09-09 15:35:09.080[DEBUG] : <==      Total: 1
2025-09-09 15:35:09.192[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 15:35:09.192[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 15:35:09.193[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-09 15:35:09.195[DEBUG] : <==      Total: 1
2025-09-09 15:35:29.086[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 15:35:29.087[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzk5NzA5LCJleHAiOjE3NTc0MDAzMDl9.WLmfQD7Yxp0LZlFStz10mWErHJ8GcTIV-J6KbvmoZms(String)
2025-09-09 15:35:29.089[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzk5NzA5LCJleHAiOjE3NTc0MDAzMDl9.WLmfQD7Yxp0LZlFStz10mWErHJ8GcTIV-J6KbvmoZms' AND expires_at > NOW()
 {executed in 1 msec}
2025-09-09 15:35:29.090[DEBUG] : <==      Total: 0
2025-09-09 15:35:29.124[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 15:35:29.125[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 15:35:29.126[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-09 15:35:29.128[DEBUG] : <==      Total: 1
2025-09-09 15:35:29.144[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO blacklisted_tokens (token, expires_at)
        VALUES ('eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzk5NzA5LCJleHAiOjE3NTc0MDAzMDl9.WLmfQD7Yxp0LZlFStz10mWErHJ8GcTIV-J6KbvmoZms', 2025-09-09T15:45:09)
 {executed in 5 msec}
2025-09-09 15:35:44.185[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 15:35:44.185[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzk5NzA5LCJleHAiOjE3NTc0MDAzMDl9.WLmfQD7Yxp0LZlFStz10mWErHJ8GcTIV-J6KbvmoZms(String)
2025-09-09 15:35:44.187[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzk5NzA5LCJleHAiOjE3NTc0MDAzMDl9.WLmfQD7Yxp0LZlFStz10mWErHJ8GcTIV-J6KbvmoZms' AND expires_at > NOW()
 {executed in 1 msec}
2025-09-09 15:35:44.190[DEBUG] : <==      Total: 1
2025-09-09 15:35:44.191[WARN ] : Attempted to use a blacklisted JWT token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzk5NzA5LCJleHAiOjE3NTc0MDAzMDl9.WLmfQD7Yxp0LZlFStz10mWErHJ8GcTIV-J6KbvmoZms
2025-09-09 15:36:21.483[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 15:36:21.484[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzk5NzA5LCJleHAiOjE3NTc0MDAzMDl9.WLmfQD7Yxp0LZlFStz10mWErHJ8GcTIV-J6KbvmoZms(String)
2025-09-09 15:36:21.485[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzk5NzA5LCJleHAiOjE3NTc0MDAzMDl9.WLmfQD7Yxp0LZlFStz10mWErHJ8GcTIV-J6KbvmoZms' AND expires_at > NOW()
 {executed in 0 msec}
2025-09-09 15:36:21.486[DEBUG] : <==      Total: 1
2025-09-09 15:36:21.487[WARN ] : Attempted to use a blacklisted JWT token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzk5NzA5LCJleHAiOjE3NTc0MDAzMDl9.WLmfQD7Yxp0LZlFStz10mWErHJ8GcTIV-J6KbvmoZms
2025-09-09 15:36:51.614[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 15:36:51.614[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzk5NzA5LCJleHAiOjE3NTc0MDAzMDl9.WLmfQD7Yxp0LZlFStz10mWErHJ8GcTIV-J6KbvmoZms(String)
2025-09-09 15:36:51.616[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzk5NzA5LCJleHAiOjE3NTc0MDAzMDl9.WLmfQD7Yxp0LZlFStz10mWErHJ8GcTIV-J6KbvmoZms' AND expires_at > NOW()
 {executed in 0 msec}
2025-09-09 15:36:51.617[DEBUG] : <==      Total: 1
2025-09-09 15:36:51.618[WARN ] : Attempted to use a blacklisted JWT token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3Mzk5NzA5LCJleHAiOjE3NTc0MDAzMDl9.WLmfQD7Yxp0LZlFStz10mWErHJ8GcTIV-J6KbvmoZms
2025-09-09 15:44:26.517[INFO ] : HikariPool-1 - Shutdown initiated...
2025-09-09 15:44:26.526[INFO ] : HikariPool-1 - Shutdown completed.
2025-09-09 15:44:34.876[INFO ] : Starting SpringBootTemplateApplication using Java 17.0.12 with PID 12816 (D:\Web\Spring\Workspace\SpringBootTemplate\out\production\classes started by IDBS_Oculus in D:\Web\Spring\Workspace\SpringBootTemplate)
2025-09-09 15:44:34.878[DEBUG] : Running with Spring Boot v3.3.12, Spring v6.1.20
2025-09-09 15:44:34.879[INFO ] : No active profile set, falling back to 1 default profile: "default"
2025-09-09 15:44:34.937[INFO ] : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-09-09 15:44:34.937[INFO ] : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-09-09 15:44:36.435[INFO ] : Tomcat initialized with port 8080 (http)
2025-09-09 15:44:36.449[INFO ] : Starting service [Tomcat]
2025-09-09 15:44:36.449[INFO ] : Starting Servlet engine: [Apache Tomcat/10.1.41]
2025-09-09 15:44:36.654[INFO ] : At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2025-09-09 15:44:36.667[INFO ] : Initializing Spring embedded WebApplicationContext
2025-09-09 15:44:36.668[INFO ] : Root WebApplicationContext: initialization completed in 1730 ms
2025-09-09 15:44:37.109[DEBUG] : Filter 'jwtRequestFilter' configured for use
2025-09-09 15:44:37.180[INFO ] : Global AuthenticationManager configured with UserDetailsService bean with name userDetailsServiceImpl
2025-09-09 15:44:37.307[INFO ] : Adding welcome page template: index
2025-09-09 15:44:37.678[INFO ] : LiveReload server is running on port 35729
2025-09-09 15:44:37.730[INFO ] : Tomcat started on port 8080 (http) with context path '/'
2025-09-09 15:44:37.745[INFO ] : Started SpringBootTemplateApplication in 3.693 seconds (process running for 4.929)
2025-09-09 15:47:37.483[INFO ] : Starting SpringBootTemplateApplication using Java 17.0.12 with PID 1212 (D:\Web\Spring\Workspace\SpringBootTemplate\out\production\classes started by IDBS_Oculus in D:\Web\Spring\Workspace\SpringBootTemplate)
2025-09-09 15:47:37.484[DEBUG] : Running with Spring Boot v3.3.12, Spring v6.1.20
2025-09-09 15:47:37.485[INFO ] : No active profile set, falling back to 1 default profile: "default"
2025-09-09 15:47:37.549[INFO ] : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-09-09 15:47:37.550[INFO ] : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-09-09 15:47:39.106[INFO ] : Tomcat initialized with port 8080 (http)
2025-09-09 15:47:39.122[INFO ] : Starting service [Tomcat]
2025-09-09 15:47:39.123[INFO ] : Starting Servlet engine: [Apache Tomcat/10.1.41]
2025-09-09 15:47:39.348[INFO ] : At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2025-09-09 15:47:39.360[INFO ] : Initializing Spring embedded WebApplicationContext
2025-09-09 15:47:39.360[INFO ] : Root WebApplicationContext: initialization completed in 1810 ms
2025-09-09 15:47:39.832[DEBUG] : Filter 'jwtRequestFilter' configured for use
2025-09-09 15:47:39.913[INFO ] : Global AuthenticationManager configured with UserDetailsService bean with name userDetailsServiceImpl
2025-09-09 15:47:40.080[INFO ] : Adding welcome page template: index
2025-09-09 15:47:40.497[INFO ] : LiveReload server is running on port 35729
2025-09-09 15:47:40.544[INFO ] : Tomcat started on port 8080 (http) with context path '/'
2025-09-09 15:47:40.559[INFO ] : Started SpringBootTemplateApplication in 3.805 seconds (process running for 4.711)
2025-09-09 15:47:49.772[INFO ] : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-09-09 15:47:49.772[INFO ] : Initializing Servlet 'dispatcherServlet'
2025-09-09 15:47:49.773[INFO ] : Completed initialization in 1 ms
2025-09-09 15:47:50.007[INFO ] : HikariPool-1 - Starting...
2025-09-09 15:47:50.184[INFO ] : HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@1a06a3b8
2025-09-09 15:47:50.187[INFO ] : HikariPool-1 - Start completed.
2025-09-09 15:47:50.222[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 15:47:50.268[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 15:47:50.282[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 13 msec}
2025-09-09 15:47:50.312[DEBUG] : <==      Total: 1
2025-09-09 15:47:50.422[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 15:47:50.423[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 15:47:50.425[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-09 15:47:50.427[DEBUG] : <==      Total: 1
2025-09-09 15:48:08.485[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 15:48:08.486[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDAwNDcwLCJleHAiOjE3NTc0MDEwNzB9.KEUQz1oNdzxjlfwVDlMXjXW8gsTXunDq3wcKBa_ceEM(String)
2025-09-09 15:48:08.487[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDAwNDcwLCJleHAiOjE3NTc0MDEwNzB9.KEUQz1oNdzxjlfwVDlMXjXW8gsTXunDq3wcKBa_ceEM' AND expires_at > NOW()
 {executed in 0 msec}
2025-09-09 15:48:08.487[DEBUG] : <==      Total: 0
2025-09-09 15:48:08.517[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 15:48:08.517[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 15:48:08.519[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 0 msec}
2025-09-09 15:48:08.521[DEBUG] : <==      Total: 1
2025-09-09 15:49:03.111[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 15:49:03.111[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDAwNDcwLCJleHAiOjE3NTc0MDEwNzB9.KEUQz1oNdzxjlfwVDlMXjXW8gsTXunDq3wcKBa_ceEM(String)
2025-09-09 15:49:03.112[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDAwNDcwLCJleHAiOjE3NTc0MDEwNzB9.KEUQz1oNdzxjlfwVDlMXjXW8gsTXunDq3wcKBa_ceEM' AND expires_at > NOW()
 {executed in 1 msec}
2025-09-09 15:49:03.113[DEBUG] : <==      Total: 0
2025-09-09 15:49:03.116[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 15:49:03.116[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 15:49:03.117[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 0 msec}
2025-09-09 15:49:03.119[DEBUG] : <==      Total: 1
2025-09-09 15:49:18.384[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 15:49:18.384[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDAwNDcwLCJleHAiOjE3NTc0MDEwNzB9.KEUQz1oNdzxjlfwVDlMXjXW8gsTXunDq3wcKBa_ceEM(String)
2025-09-09 15:49:18.386[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDAwNDcwLCJleHAiOjE3NTc0MDEwNzB9.KEUQz1oNdzxjlfwVDlMXjXW8gsTXunDq3wcKBa_ceEM' AND expires_at > NOW()
 {executed in 0 msec}
2025-09-09 15:49:18.387[DEBUG] : <==      Total: 0
2025-09-09 15:49:18.392[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 15:49:18.393[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 15:49:18.394[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-09 15:49:18.397[DEBUG] : <==      Total: 1
2025-09-09 15:49:18.417[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO blacklisted_tokens (token, expires_at)
        VALUES ('eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDAwNDcwLCJleHAiOjE3NTc0MDEwNzB9.KEUQz1oNdzxjlfwVDlMXjXW8gsTXunDq3wcKBa_ceEM', 2025-09-09T15:57:50)
 {executed in 4 msec}
2025-09-09 15:49:20.764[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 15:49:20.764[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDAwNDcwLCJleHAiOjE3NTc0MDEwNzB9.KEUQz1oNdzxjlfwVDlMXjXW8gsTXunDq3wcKBa_ceEM(String)
2025-09-09 15:49:20.765[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDAwNDcwLCJleHAiOjE3NTc0MDEwNzB9.KEUQz1oNdzxjlfwVDlMXjXW8gsTXunDq3wcKBa_ceEM' AND expires_at > NOW()
 {executed in 1 msec}
2025-09-09 15:49:20.766[DEBUG] : <==      Total: 1
2025-09-09 15:49:20.767[WARN ] : Attempted to use a blacklisted JWT token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDAwNDcwLCJleHAiOjE3NTc0MDEwNzB9.KEUQz1oNdzxjlfwVDlMXjXW8gsTXunDq3wcKBa_ceEM
2025-09-09 15:49:24.822[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 15:49:24.823[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDAwNDcwLCJleHAiOjE3NTc0MDEwNzB9.KEUQz1oNdzxjlfwVDlMXjXW8gsTXunDq3wcKBa_ceEM(String)
2025-09-09 15:49:24.824[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDAwNDcwLCJleHAiOjE3NTc0MDEwNzB9.KEUQz1oNdzxjlfwVDlMXjXW8gsTXunDq3wcKBa_ceEM' AND expires_at > NOW()
 {executed in 1 msec}
2025-09-09 15:49:24.826[DEBUG] : <==      Total: 1
2025-09-09 15:49:24.827[WARN ] : Attempted to use a blacklisted JWT token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDAwNDcwLCJleHAiOjE3NTc0MDEwNzB9.KEUQz1oNdzxjlfwVDlMXjXW8gsTXunDq3wcKBa_ceEM
2025-09-09 15:49:27.953[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 15:49:27.954[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDAwNDcwLCJleHAiOjE3NTc0MDEwNzB9.KEUQz1oNdzxjlfwVDlMXjXW8gsTXunDq3wcKBa_ceEM(String)
2025-09-09 15:49:27.955[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDAwNDcwLCJleHAiOjE3NTc0MDEwNzB9.KEUQz1oNdzxjlfwVDlMXjXW8gsTXunDq3wcKBa_ceEM' AND expires_at > NOW()
 {executed in 1 msec}
2025-09-09 15:49:27.956[DEBUG] : <==      Total: 1
2025-09-09 15:49:27.957[WARN ] : Attempted to use a blacklisted JWT token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDAwNDcwLCJleHAiOjE3NTc0MDEwNzB9.KEUQz1oNdzxjlfwVDlMXjXW8gsTXunDq3wcKBa_ceEM
2025-09-09 15:51:10.602[INFO ] : HikariPool-1 - Shutdown initiated...
2025-09-09 15:51:10.609[INFO ] : HikariPool-1 - Shutdown completed.
2025-09-09 15:51:19.093[INFO ] : Starting SpringBootTemplateApplication using Java 17.0.12 with PID 15680 (D:\Web\Spring\Workspace\SpringBootTemplate\out\production\classes started by IDBS_Oculus in D:\Web\Spring\Workspace\SpringBootTemplate)
2025-09-09 15:51:19.095[DEBUG] : Running with Spring Boot v3.3.12, Spring v6.1.20
2025-09-09 15:51:19.095[INFO ] : No active profile set, falling back to 1 default profile: "default"
2025-09-09 15:51:19.155[INFO ] : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-09-09 15:51:19.156[INFO ] : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-09-09 15:51:20.686[INFO ] : Tomcat initialized with port 8080 (http)
2025-09-09 15:51:20.700[INFO ] : Starting service [Tomcat]
2025-09-09 15:51:20.700[INFO ] : Starting Servlet engine: [Apache Tomcat/10.1.41]
2025-09-09 15:51:20.923[INFO ] : At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2025-09-09 15:51:20.934[INFO ] : Initializing Spring embedded WebApplicationContext
2025-09-09 15:51:20.934[INFO ] : Root WebApplicationContext: initialization completed in 1778 ms
2025-09-09 15:51:21.394[DEBUG] : Filter 'jwtRequestFilter' configured for use
2025-09-09 15:51:21.465[INFO ] : Global AuthenticationManager configured with UserDetailsService bean with name userDetailsServiceImpl
2025-09-09 15:51:21.620[INFO ] : Adding welcome page template: index
2025-09-09 15:51:22.012[INFO ] : LiveReload server is running on port 35729
2025-09-09 15:51:22.059[INFO ] : Tomcat started on port 8080 (http) with context path '/'
2025-09-09 15:51:22.073[INFO ] : Started SpringBootTemplateApplication in 3.718 seconds (process running for 4.647)
2025-09-09 15:51:35.275[INFO ] : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-09-09 15:51:35.276[INFO ] : Initializing Servlet 'dispatcherServlet'
2025-09-09 15:51:35.278[INFO ] : Completed initialization in 2 ms
2025-09-09 15:51:35.517[INFO ] : HikariPool-1 - Starting...
2025-09-09 15:51:35.707[INFO ] : HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@3ee1bdeb
2025-09-09 15:51:35.709[INFO ] : HikariPool-1 - Start completed.
2025-09-09 15:51:35.748[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 15:51:35.787[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 15:51:35.806[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 18 msec}
2025-09-09 15:51:35.840[DEBUG] : <==      Total: 1
2025-09-09 15:51:35.967[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 15:51:35.968[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 15:51:35.969[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-09 15:51:35.973[DEBUG] : <==      Total: 1
2025-09-09 15:54:16.302[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 15:54:16.302[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDAwNjk1LCJleHAiOjE3NTc0MDEyOTV9.42gKXtQhNuUR4ods3Jnts6N2HcSdTs0aNtLcO9LVmR0(String)
2025-09-09 15:54:16.304[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDAwNjk1LCJleHAiOjE3NTc0MDEyOTV9.42gKXtQhNuUR4ods3Jnts6N2HcSdTs0aNtLcO9LVmR0' AND expires_at > NOW()
 {executed in 1 msec}
2025-09-09 15:54:16.304[DEBUG] : <==      Total: 0
2025-09-09 15:54:16.350[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 15:54:16.351[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 15:54:16.353[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-09 15:54:16.354[DEBUG] : <==      Total: 1
2025-09-09 15:55:48.825[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 15:55:48.825[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDAwNjk1LCJleHAiOjE3NTc0MDEyOTV9.42gKXtQhNuUR4ods3Jnts6N2HcSdTs0aNtLcO9LVmR0(String)
2025-09-09 15:55:48.826[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDAwNjk1LCJleHAiOjE3NTc0MDEyOTV9.42gKXtQhNuUR4ods3Jnts6N2HcSdTs0aNtLcO9LVmR0' AND expires_at > NOW()
 {executed in 1 msec}
2025-09-09 15:55:48.827[DEBUG] : <==      Total: 0
2025-09-09 15:55:48.831[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 15:55:48.831[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 15:55:48.832[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-09 15:55:48.834[DEBUG] : <==      Total: 1
2025-09-09 15:56:04.053[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 15:56:04.055[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDAwNjk1LCJleHAiOjE3NTc0MDEyOTV9.42gKXtQhNuUR4ods3Jnts6N2HcSdTs0aNtLcO9LVmR0(String)
2025-09-09 15:56:04.057[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDAwNjk1LCJleHAiOjE3NTc0MDEyOTV9.42gKXtQhNuUR4ods3Jnts6N2HcSdTs0aNtLcO9LVmR0' AND expires_at > NOW()
 {executed in 1 msec}
2025-09-09 15:56:04.059[DEBUG] : <==      Total: 0
2025-09-09 15:56:04.064[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 15:56:04.065[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 15:56:04.066[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-09 15:56:04.068[DEBUG] : <==      Total: 1
2025-09-09 15:56:20.280[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 15:56:20.281[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDAwNjk1LCJleHAiOjE3NTc0MDEyOTV9.42gKXtQhNuUR4ods3Jnts6N2HcSdTs0aNtLcO9LVmR0(String)
2025-09-09 15:56:20.283[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDAwNjk1LCJleHAiOjE3NTc0MDEyOTV9.42gKXtQhNuUR4ods3Jnts6N2HcSdTs0aNtLcO9LVmR0' AND expires_at > NOW()
 {executed in 1 msec}
2025-09-09 15:56:20.285[DEBUG] : <==      Total: 0
2025-09-09 15:56:20.293[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 15:56:20.293[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 15:56:20.294[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-09 15:56:20.297[DEBUG] : <==      Total: 1
2025-09-09 16:04:33.100[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 16:04:33.102[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDAwNjk1LCJleHAiOjE3NTc0MDEyOTV9.42gKXtQhNuUR4ods3Jnts6N2HcSdTs0aNtLcO9LVmR0(String)
2025-09-09 16:04:33.104[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDAwNjk1LCJleHAiOjE3NTc0MDEyOTV9.42gKXtQhNuUR4ods3Jnts6N2HcSdTs0aNtLcO9LVmR0' AND expires_at > NOW()
 {executed in 1 msec}
2025-09-09 16:04:33.104[DEBUG] : <==      Total: 0
2025-09-09 16:04:33.109[WARN ] : JWT token has expired for user: jaehoon
2025-09-09 16:04:33.110[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 16:04:33.110[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 16:04:33.111[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-09 16:04:33.112[DEBUG] : <==      Total: 1
2025-09-09 16:04:33.115[ERROR] : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-09-09T07:01:35Z. Current time: 2025-09-09T07:04:33Z, a difference of 178114 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at kr.co.jaehoon.springboottemplate.security.JwtUtil.extractAllClaims(JwtUtil.java:53)
	at kr.co.jaehoon.springboottemplate.security.JwtUtil.extractClaim(JwtUtil.java:47)
	at kr.co.jaehoon.springboottemplate.security.JwtUtil.extractUsername(JwtUtil.java:39)
	at kr.co.jaehoon.springboottemplate.security.JwtUtil.validateToken(JwtUtil.java:76)
	at kr.co.jaehoon.springboottemplate.security.JwtRequestFilter.doFilterInternal(JwtRequestFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:842)
2025-09-09 16:04:53.754[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 16:04:53.754[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDAwNjk1LCJleHAiOjE3NTc0MDEyOTV9.42gKXtQhNuUR4ods3Jnts6N2HcSdTs0aNtLcO9LVmR0(String)
2025-09-09 16:04:53.755[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDAwNjk1LCJleHAiOjE3NTc0MDEyOTV9.42gKXtQhNuUR4ods3Jnts6N2HcSdTs0aNtLcO9LVmR0' AND expires_at > NOW()
 {executed in 1 msec}
2025-09-09 16:04:53.755[DEBUG] : <==      Total: 0
2025-09-09 16:04:53.758[WARN ] : JWT token has expired for user: jaehoon
2025-09-09 16:04:53.759[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 16:04:53.759[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 16:04:53.760[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-09 16:04:53.761[DEBUG] : <==      Total: 1
2025-09-09 16:04:53.765[ERROR] : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-09-09T07:01:35Z. Current time: 2025-09-09T07:04:53Z, a difference of 198765 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at kr.co.jaehoon.springboottemplate.security.JwtUtil.extractAllClaims(JwtUtil.java:53)
	at kr.co.jaehoon.springboottemplate.security.JwtUtil.extractClaim(JwtUtil.java:47)
	at kr.co.jaehoon.springboottemplate.security.JwtUtil.extractUsername(JwtUtil.java:39)
	at kr.co.jaehoon.springboottemplate.security.JwtUtil.validateToken(JwtUtil.java:76)
	at kr.co.jaehoon.springboottemplate.security.JwtRequestFilter.doFilterInternal(JwtRequestFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:842)
2025-09-09 16:05:02.663[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 16:05:02.663[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDAwNjk1LCJleHAiOjE3NTc0MDEyOTV9.42gKXtQhNuUR4ods3Jnts6N2HcSdTs0aNtLcO9LVmR0(String)
2025-09-09 16:05:02.664[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDAwNjk1LCJleHAiOjE3NTc0MDEyOTV9.42gKXtQhNuUR4ods3Jnts6N2HcSdTs0aNtLcO9LVmR0' AND expires_at > NOW()
 {executed in 1 msec}
2025-09-09 16:05:02.665[DEBUG] : <==      Total: 0
2025-09-09 16:05:02.669[WARN ] : JWT token has expired for user: jaehoon
2025-09-09 16:05:02.670[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 16:05:02.672[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 16:05:02.673[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-09 16:05:02.676[DEBUG] : <==      Total: 1
2025-09-09 16:05:02.680[ERROR] : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-09-09T07:01:35Z. Current time: 2025-09-09T07:05:02Z, a difference of 207680 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at kr.co.jaehoon.springboottemplate.security.JwtUtil.extractAllClaims(JwtUtil.java:53)
	at kr.co.jaehoon.springboottemplate.security.JwtUtil.extractClaim(JwtUtil.java:47)
	at kr.co.jaehoon.springboottemplate.security.JwtUtil.extractUsername(JwtUtil.java:39)
	at kr.co.jaehoon.springboottemplate.security.JwtUtil.validateToken(JwtUtil.java:76)
	at kr.co.jaehoon.springboottemplate.security.JwtRequestFilter.doFilterInternal(JwtRequestFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:842)
2025-09-09 16:05:11.892[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 16:05:11.893[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDAwNjk1LCJleHAiOjE3NTc0MDEyOTV9.42gKXtQhNuUR4ods3Jnts6N2HcSdTs0aNtLcO9LVmR0(String)
2025-09-09 16:05:11.895[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDAwNjk1LCJleHAiOjE3NTc0MDEyOTV9.42gKXtQhNuUR4ods3Jnts6N2HcSdTs0aNtLcO9LVmR0' AND expires_at > NOW()
 {executed in 1 msec}
2025-09-09 16:05:11.895[DEBUG] : <==      Total: 0
2025-09-09 16:05:11.899[WARN ] : JWT token has expired for user: jaehoon
2025-09-09 16:05:11.900[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 16:05:11.900[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 16:05:11.901[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-09 16:05:11.902[DEBUG] : <==      Total: 1
2025-09-09 16:05:11.906[ERROR] : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
io.jsonwebtoken.ExpiredJwtException: JWT expired at 2025-09-09T07:01:35Z. Current time: 2025-09-09T07:05:11Z, a difference of 216906 milliseconds.  Allowed clock skew: 0 milliseconds.
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:427)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at kr.co.jaehoon.springboottemplate.security.JwtUtil.extractAllClaims(JwtUtil.java:53)
	at kr.co.jaehoon.springboottemplate.security.JwtUtil.extractClaim(JwtUtil.java:47)
	at kr.co.jaehoon.springboottemplate.security.JwtUtil.extractUsername(JwtUtil.java:39)
	at kr.co.jaehoon.springboottemplate.security.JwtUtil.validateToken(JwtUtil.java:76)
	at kr.co.jaehoon.springboottemplate.security.JwtRequestFilter.doFilterInternal(JwtRequestFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:842)
2025-09-09 16:05:22.150[INFO ] : HikariPool-1 - Shutdown initiated...
2025-09-09 16:05:22.160[INFO ] : HikariPool-1 - Shutdown completed.
2025-09-09 16:37:23.349[INFO ] : Starting SpringBootTemplateApplication using Java 17.0.12 with PID 13500 (D:\Web\Spring\Workspace\SpringBootTemplate\out\production\classes started by IDBS_Oculus in D:\Web\Spring\Workspace\SpringBootTemplate)
2025-09-09 16:37:23.352[DEBUG] : Running with Spring Boot v3.3.12, Spring v6.1.20
2025-09-09 16:37:23.352[INFO ] : No active profile set, falling back to 1 default profile: "default"
2025-09-09 16:37:23.423[INFO ] : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-09-09 16:37:23.423[INFO ] : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-09-09 16:37:25.043[INFO ] : Tomcat initialized with port 8080 (http)
2025-09-09 16:37:25.056[INFO ] : Starting service [Tomcat]
2025-09-09 16:37:25.057[INFO ] : Starting Servlet engine: [Apache Tomcat/10.1.41]
2025-09-09 16:37:25.259[INFO ] : At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2025-09-09 16:37:25.272[INFO ] : Initializing Spring embedded WebApplicationContext
2025-09-09 16:37:25.272[INFO ] : Root WebApplicationContext: initialization completed in 1848 ms
2025-09-09 16:37:25.734[DEBUG] : Filter 'jwtRequestFilter' configured for use
2025-09-09 16:37:25.798[INFO ] : Global AuthenticationManager configured with UserDetailsService bean with name userDetailsServiceImpl
2025-09-09 16:37:25.927[INFO ] : Adding welcome page template: index
2025-09-09 16:37:26.283[INFO ] : LiveReload server is running on port 35729
2025-09-09 16:37:26.330[INFO ] : Tomcat started on port 8080 (http) with context path '/'
2025-09-09 16:37:26.345[INFO ] : Started SpringBootTemplateApplication in 3.776 seconds (process running for 4.712)
2025-09-09 16:37:38.435[INFO ] : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-09-09 16:37:38.435[INFO ] : Initializing Servlet 'dispatcherServlet'
2025-09-09 16:37:38.436[INFO ] : Completed initialization in 1 ms
2025-09-09 16:37:38.663[INFO ] : HikariPool-1 - Starting...
2025-09-09 16:37:39.065[INFO ] : HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@4bb29e99
2025-09-09 16:37:39.067[INFO ] : HikariPool-1 - Start completed.
2025-09-09 16:37:39.103[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 16:37:39.137[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 16:37:39.157[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 18 msec}
2025-09-09 16:37:39.197[DEBUG] : <==      Total: 1
2025-09-09 16:37:39.310[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 16:37:39.311[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 16:37:39.312[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-09 16:37:39.314[DEBUG] : <==      Total: 1
2025-09-09 16:38:12.868[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 16:38:12.868[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDAzNDU5LCJleHAiOjE3NTc0MDQwNTl9.-HV1EueeiPiHJ4jlGtxqsnCqrWGvyDDTuexz2H5dZ64(String)
2025-09-09 16:38:12.870[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDAzNDU5LCJleHAiOjE3NTc0MDQwNTl9.-HV1EueeiPiHJ4jlGtxqsnCqrWGvyDDTuexz2H5dZ64' AND expires_at > NOW()
 {executed in 1 msec}
2025-09-09 16:38:12.871[DEBUG] : <==      Total: 0
2025-09-09 16:38:12.904[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 16:38:12.904[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 16:38:12.906[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-09 16:38:12.909[DEBUG] : <==      Total: 1
2025-09-09 16:38:12.925[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO blacklisted_tokens (token, expires_at)
        VALUES ('eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDAzNDU5LCJleHAiOjE3NTc0MDQwNTl9.-HV1EueeiPiHJ4jlGtxqsnCqrWGvyDDTuexz2H5dZ64', 2025-09-09T16:47:39)
 {executed in 5 msec}
2025-09-09 16:38:16.094[INFO ] : HikariPool-1 - Shutdown initiated...
2025-09-09 16:38:16.105[INFO ] : HikariPool-1 - Shutdown completed.
2025-09-09 16:40:21.645[INFO ] : Starting SpringBootTemplateApplication using Java 17.0.12 with PID 3116 (D:\Web\Spring\Workspace\SpringBootTemplate\out\production\classes started by IDBS_Oculus in D:\Web\Spring\Workspace\SpringBootTemplate)
2025-09-09 16:40:21.646[DEBUG] : Running with Spring Boot v3.3.12, Spring v6.1.20
2025-09-09 16:40:21.647[INFO ] : No active profile set, falling back to 1 default profile: "default"
2025-09-09 16:40:21.845[INFO ] : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-09-09 16:40:21.846[INFO ] : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-09-09 16:40:23.418[INFO ] : Tomcat initialized with port 8080 (http)
2025-09-09 16:40:23.432[INFO ] : Starting service [Tomcat]
2025-09-09 16:40:23.432[INFO ] : Starting Servlet engine: [Apache Tomcat/10.1.41]
2025-09-09 16:40:23.636[INFO ] : At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2025-09-09 16:40:23.649[INFO ] : Initializing Spring embedded WebApplicationContext
2025-09-09 16:40:23.649[INFO ] : Root WebApplicationContext: initialization completed in 1802 ms
2025-09-09 16:40:24.069[DEBUG] : Filter 'jwtRequestFilter' configured for use
2025-09-09 16:40:24.135[INFO ] : Global AuthenticationManager configured with UserDetailsService bean with name userDetailsServiceImpl
2025-09-09 16:40:24.265[INFO ] : Adding welcome page template: index
2025-09-09 16:40:24.622[INFO ] : LiveReload server is running on port 35729
2025-09-09 16:40:24.670[INFO ] : Tomcat started on port 8080 (http) with context path '/'
2025-09-09 16:40:24.684[INFO ] : Started SpringBootTemplateApplication in 3.897 seconds (process running for 4.866)
2025-09-09 16:40:37.014[INFO ] : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-09-09 16:40:37.015[INFO ] : Initializing Servlet 'dispatcherServlet'
2025-09-09 16:40:37.016[INFO ] : Completed initialization in 1 ms
2025-09-09 16:40:37.239[INFO ] : HikariPool-1 - Starting...
2025-09-09 16:40:37.549[INFO ] : HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@150f0c25
2025-09-09 16:40:37.553[INFO ] : HikariPool-1 - Start completed.
2025-09-09 16:40:37.628[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 16:40:37.670[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 16:40:37.697[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 27 msec}
2025-09-09 16:40:37.726[DEBUG] : <==      Total: 1
2025-09-09 16:40:37.853[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 16:40:37.854[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 16:40:37.856[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-09 16:40:37.858[DEBUG] : <==      Total: 1
2025-09-09 16:41:16.195[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 16:41:16.195[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDAzNjM3LCJleHAiOjE3NTc0MDM2OTd9.Fq4gidQaofY4NodA-YJ6qpssTmu3cz-0vAfgct(String)
2025-09-09 16:41:16.197[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDAzNjM3LCJleHAiOjE3NTc0MDM2OTd9.Fq4gidQaofY4NodA-YJ6qpssTmu3cz-0vAfgct' AND expires_at > NOW()
 {executed in 1 msec}
2025-09-09 16:41:16.197[DEBUG] : <==      Total: 0
2025-09-09 16:41:16.230[WARN ] : JWT token signature is invalid: JWT signature does not match locally computed signature. JWT validity cannot be asserted and should not be trusted.
2025-09-09 16:41:34.405[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 16:41:34.406[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDAzNjM3LCJleHAiOjE3NTc0MDM2OTd9.Fq4gidQaofY4NodA-YJ6qpssTmu3cz-0vAfgctF7yhY(String)
2025-09-09 16:41:34.407[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDAzNjM3LCJleHAiOjE3NTc0MDM2OTd9.Fq4gidQaofY4NodA-YJ6qpssTmu3cz-0vAfgctF7yhY' AND expires_at > NOW()
 {executed in 1 msec}
2025-09-09 16:41:34.407[DEBUG] : <==      Total: 0
2025-09-09 16:41:34.412[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 16:41:34.413[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 16:41:34.414[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-09 16:41:34.416[DEBUG] : <==      Total: 1
2025-09-09 16:42:23.858[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 16:42:23.858[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDAzNjM3LCJleHAiOjE3NTc0MDM2OTd9.Fq4gidQaofY4NodA-YJ6qpssTmu3cz-0vAfgctF7yhY(String)
2025-09-09 16:42:23.859[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDAzNjM3LCJleHAiOjE3NTc0MDM2OTd9.Fq4gidQaofY4NodA-YJ6qpssTmu3cz-0vAfgctF7yhY' AND expires_at > NOW()
 {executed in 0 msec}
2025-09-09 16:42:23.860[DEBUG] : <==      Total: 0
2025-09-09 16:42:23.865[WARN ] : JWT token has expired for user: jaehoon
2025-09-09 16:44:08.001[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 16:44:08.002[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDAzNjM3LCJleHAiOjE3NTc0MDM2OTd9.Fq4gidQaofY4NodA-YJ6qpssTmu3cz-0vAfgctF7yhY(String)
2025-09-09 16:44:08.003[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDAzNjM3LCJleHAiOjE3NTc0MDM2OTd9.Fq4gidQaofY4NodA-YJ6qpssTmu3cz-0vAfgctF7yhY' AND expires_at > NOW()
 {executed in 1 msec}
2025-09-09 16:44:08.004[DEBUG] : <==      Total: 0
2025-09-09 16:44:08.007[WARN ] : JWT token has expired for user: jaehoon
2025-09-09 17:11:23.294[INFO ] : HikariPool-1 - Shutdown initiated...
2025-09-09 17:11:23.298[INFO ] : HikariPool-1 - Shutdown completed.
2025-09-09 17:11:36.006[INFO ] : Starting SpringBootTemplateApplication using Java 17.0.12 with PID 17448 (D:\Web\Spring\Workspace\SpringBootTemplate\out\production\classes started by IDBS_Oculus in D:\Web\Spring\Workspace\SpringBootTemplate)
2025-09-09 17:11:36.007[DEBUG] : Running with Spring Boot v3.3.12, Spring v6.1.20
2025-09-09 17:11:36.008[INFO ] : No active profile set, falling back to 1 default profile: "default"
2025-09-09 17:11:36.076[INFO ] : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-09-09 17:11:36.076[INFO ] : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-09-09 17:11:37.603[INFO ] : Tomcat initialized with port 8080 (http)
2025-09-09 17:11:37.619[INFO ] : Starting service [Tomcat]
2025-09-09 17:11:37.619[INFO ] : Starting Servlet engine: [Apache Tomcat/10.1.41]
2025-09-09 17:11:37.840[INFO ] : At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2025-09-09 17:11:37.852[INFO ] : Initializing Spring embedded WebApplicationContext
2025-09-09 17:11:37.853[INFO ] : Root WebApplicationContext: initialization completed in 1775 ms
2025-09-09 17:11:38.330[DEBUG] : Filter 'jwtRequestFilter' configured for use
2025-09-09 17:11:38.399[INFO ] : Global AuthenticationManager configured with UserDetailsService bean with name userDetailsServiceImpl
2025-09-09 17:11:38.555[INFO ] : Adding welcome page template: index
2025-09-09 17:11:38.928[INFO ] : LiveReload server is running on port 35729
2025-09-09 17:11:38.973[INFO ] : Tomcat started on port 8080 (http) with context path '/'
2025-09-09 17:11:38.987[INFO ] : Started SpringBootTemplateApplication in 3.716 seconds (process running for 4.623)
2025-09-09 17:11:46.386[INFO ] : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-09-09 17:11:46.386[INFO ] : Initializing Servlet 'dispatcherServlet'
2025-09-09 17:11:46.387[INFO ] : Completed initialization in 1 ms
2025-09-09 17:11:46.622[INFO ] : HikariPool-1 - Starting...
2025-09-09 17:11:46.810[INFO ] : HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@5cd44780
2025-09-09 17:11:46.812[INFO ] : HikariPool-1 - Start completed.
2025-09-09 17:11:46.850[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 17:11:46.893[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 17:11:46.907[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 13 msec}
2025-09-09 17:11:46.937[DEBUG] : <==      Total: 1
2025-09-09 17:11:47.052[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 17:11:47.052[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 17:11:47.053[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-09 17:11:47.056[DEBUG] : <==      Total: 1
2025-09-09 17:12:08.070[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 17:12:08.071[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA1NTA3LCJleHAiOjE3NTc0MDU1Njd9.LTbDWfcihE-JvGulLyze9wlQ2szBxVwHulL_XhDMF1A(String)
2025-09-09 17:12:08.073[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA1NTA3LCJleHAiOjE3NTc0MDU1Njd9.LTbDWfcihE-JvGulLyze9wlQ2szBxVwHulL_XhDMF1A' AND expires_at > NOW()
 {executed in 1 msec}
2025-09-09 17:12:08.074[DEBUG] : <==      Total: 0
2025-09-09 17:12:08.105[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 17:12:08.105[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 17:12:08.106[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-09 17:12:08.108[DEBUG] : <==      Total: 1
2025-09-09 17:13:04.680[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 17:13:04.680[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA1NTA3LCJleHAiOjE3NTc0MDU1Njd9.LTbDWfcihE-JvGulLyze9wlQ2szBxVwHulL_XhDMF1A(String)
2025-09-09 17:13:04.681[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA1NTA3LCJleHAiOjE3NTc0MDU1Njd9.LTbDWfcihE-JvGulLyze9wlQ2szBxVwHulL_XhDMF1A' AND expires_at > NOW()
 {executed in 1 msec}
2025-09-09 17:13:04.683[DEBUG] : <==      Total: 0
2025-09-09 17:13:04.688[WARN ] : JWT token has expired for user: jaehoon
2025-09-09 17:15:08.527[INFO ] : HikariPool-1 - Shutdown initiated...
2025-09-09 17:15:08.535[INFO ] : HikariPool-1 - Shutdown completed.
2025-09-09 17:20:23.587[INFO ] : Starting SpringBootTemplateApplication using Java 17.0.12 with PID 20100 (D:\Web\Spring\Workspace\SpringBootTemplate\out\production\classes started by IDBS_Oculus in D:\Web\Spring\Workspace\SpringBootTemplate)
2025-09-09 17:20:23.588[DEBUG] : Running with Spring Boot v3.3.12, Spring v6.1.20
2025-09-09 17:20:23.589[INFO ] : No active profile set, falling back to 1 default profile: "default"
2025-09-09 17:20:23.650[INFO ] : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-09-09 17:20:23.651[INFO ] : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-09-09 17:20:25.091[INFO ] : Tomcat initialized with port 8080 (http)
2025-09-09 17:20:25.105[INFO ] : Starting service [Tomcat]
2025-09-09 17:20:25.106[INFO ] : Starting Servlet engine: [Apache Tomcat/10.1.41]
2025-09-09 17:20:25.315[INFO ] : At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2025-09-09 17:20:25.327[INFO ] : Initializing Spring embedded WebApplicationContext
2025-09-09 17:20:25.327[INFO ] : Root WebApplicationContext: initialization completed in 1676 ms
2025-09-09 17:20:25.765[DEBUG] : Filter 'jwtRequestFilter' configured for use
2025-09-09 17:20:25.830[INFO ] : Global AuthenticationManager configured with UserDetailsService bean with name userDetailsServiceImpl
2025-09-09 17:20:25.958[INFO ] : Adding welcome page template: index
2025-09-09 17:20:26.321[INFO ] : LiveReload server is running on port 35729
2025-09-09 17:20:26.371[INFO ] : Tomcat started on port 8080 (http) with context path '/'
2025-09-09 17:20:26.385[INFO ] : Started SpringBootTemplateApplication in 3.539 seconds (process running for 4.459)
2025-09-09 17:20:38.472[INFO ] : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-09-09 17:20:38.473[INFO ] : Initializing Servlet 'dispatcherServlet'
2025-09-09 17:20:38.474[INFO ] : Completed initialization in 1 ms
2025-09-09 17:20:38.712[INFO ] : HikariPool-1 - Starting...
2025-09-09 17:20:38.914[INFO ] : HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@3d41db5d
2025-09-09 17:20:38.917[INFO ] : HikariPool-1 - Start completed.
2025-09-09 17:20:38.957[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 17:20:38.994[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 17:20:39.008[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 12 msec}
2025-09-09 17:20:39.038[DEBUG] : <==      Total: 1
2025-09-09 17:20:39.155[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 17:20:39.156[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 17:20:39.157[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-09 17:20:39.159[DEBUG] : <==      Total: 1
2025-09-09 17:21:00.376[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 17:21:00.376[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MDM5LCJleHAiOjE3NTc0MDY2Mzl9.n6LERstNlTRv3_aWyY3PLkJXMOMCfL_9QEkyQnj1xS8(String)
2025-09-09 17:21:00.378[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MDM5LCJleHAiOjE3NTc0MDY2Mzl9.n6LERstNlTRv3_aWyY3PLkJXMOMCfL_9QEkyQnj1xS8' AND expires_at > NOW()
 {executed in 0 msec}
2025-09-09 17:21:00.379[DEBUG] : <==      Total: 0
2025-09-09 17:21:00.409[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 17:21:00.410[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 17:21:00.411[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-09 17:21:00.412[DEBUG] : <==      Total: 1
2025-09-09 17:21:14.905[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 17:21:14.905[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MDM5LCJleHAiOjE3NTc0MDY2Mzl9.n6LERstNlTRv3_aWyY3PLkJXMOMCfL_9QEkyQnj1xS8(String)
2025-09-09 17:21:14.906[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MDM5LCJleHAiOjE3NTc0MDY2Mzl9.n6LERstNlTRv3_aWyY3PLkJXMOMCfL_9QEkyQnj1xS8' AND expires_at > NOW()
 {executed in 1 msec}
2025-09-09 17:21:14.906[DEBUG] : <==      Total: 0
2025-09-09 17:21:14.910[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 17:21:14.910[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 17:21:14.911[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-09 17:21:14.913[DEBUG] : <==      Total: 1
2025-09-09 17:21:30.190[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 17:21:30.190[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MDM5LCJleHAiOjE3NTc0MDY2Mzl9.n6LERstNlTRv3_aWyY3PLkJXMOMCfL_9QEkyQnj1xS8(String)
2025-09-09 17:21:30.191[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MDM5LCJleHAiOjE3NTc0MDY2Mzl9.n6LERstNlTRv3_aWyY3PLkJXMOMCfL_9QEkyQnj1xS8' AND expires_at > NOW()
 {executed in 0 msec}
2025-09-09 17:21:30.192[DEBUG] : <==      Total: 0
2025-09-09 17:21:30.196[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 17:21:30.196[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 17:21:30.197[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-09 17:21:30.198[DEBUG] : <==      Total: 1
2025-09-09 17:22:07.555[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 17:22:07.557[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 17:22:07.559[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 2 msec}
2025-09-09 17:22:07.562[DEBUG] : <==      Total: 1
2025-09-09 17:22:07.674[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 17:22:07.674[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 17:22:07.675[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-09 17:22:07.677[DEBUG] : <==      Total: 1
2025-09-09 17:22:07.704[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 17:22:07.705[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MTI3LCJleHAiOjE3NTc0MDk3Mjd9.ths_Ynt4hiHzY1BxtxuSrENdGUfyd4IuKfgaVl38wwk(String)
2025-09-09 17:22:07.706[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MTI3LCJleHAiOjE3NTc0MDk3Mjd9.ths_Ynt4hiHzY1BxtxuSrENdGUfyd4IuKfgaVl38wwk' AND expires_at > NOW()
 {executed in 1 msec}
2025-09-09 17:22:07.707[DEBUG] : <==      Total: 0
2025-09-09 17:22:07.711[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 17:22:07.711[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 17:22:07.712[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 0 msec}
2025-09-09 17:22:07.715[DEBUG] : <==      Total: 1
2025-09-09 17:22:07.723[DEBUG] : Secure-Page_UserDetails: [ROLE_USER]
2025-09-09 17:22:08.043[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 17:22:08.044[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MTI3LCJleHAiOjE3NTc0MDk3Mjd9.ths_Ynt4hiHzY1BxtxuSrENdGUfyd4IuKfgaVl38wwk(String)
2025-09-09 17:22:08.045[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MTI3LCJleHAiOjE3NTc0MDk3Mjd9.ths_Ynt4hiHzY1BxtxuSrENdGUfyd4IuKfgaVl38wwk' AND expires_at > NOW()
 {executed in 1 msec}
2025-09-09 17:22:08.046[DEBUG] : <==      Total: 0
2025-09-09 17:22:08.049[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 17:22:08.050[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 17:22:08.051[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-09 17:22:08.053[DEBUG] : <==      Total: 1
2025-09-09 17:22:08.063[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 17:22:08.063[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MTI3LCJleHAiOjE3NTc0MDk3Mjd9.ths_Ynt4hiHzY1BxtxuSrENdGUfyd4IuKfgaVl38wwk(String)
2025-09-09 17:22:08.064[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MTI3LCJleHAiOjE3NTc0MDk3Mjd9.ths_Ynt4hiHzY1BxtxuSrENdGUfyd4IuKfgaVl38wwk' AND expires_at > NOW()
 {executed in 1 msec}
2025-09-09 17:22:08.065[DEBUG] : <==      Total: 0
2025-09-09 17:22:08.071[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 17:22:08.072[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 17:22:08.074[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-09 17:22:08.077[DEBUG] : <==      Total: 1
2025-09-09 17:22:09.627[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 17:22:09.628[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MTI3LCJleHAiOjE3NTc0MDk3Mjd9.ths_Ynt4hiHzY1BxtxuSrENdGUfyd4IuKfgaVl38wwk(String)
2025-09-09 17:22:09.629[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MTI3LCJleHAiOjE3NTc0MDk3Mjd9.ths_Ynt4hiHzY1BxtxuSrENdGUfyd4IuKfgaVl38wwk' AND expires_at > NOW()
 {executed in 1 msec}
2025-09-09 17:22:09.630[DEBUG] : <==      Total: 0
2025-09-09 17:22:09.633[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 17:22:09.634[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 17:22:09.635[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-09 17:22:09.637[DEBUG] : <==      Total: 1
2025-09-09 17:22:09.729[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 17:22:09.729[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MTI3LCJleHAiOjE3NTc0MDk3Mjd9.ths_Ynt4hiHzY1BxtxuSrENdGUfyd4IuKfgaVl38wwk(String)
2025-09-09 17:22:09.730[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MTI3LCJleHAiOjE3NTc0MDk3Mjd9.ths_Ynt4hiHzY1BxtxuSrENdGUfyd4IuKfgaVl38wwk' AND expires_at > NOW()
 {executed in 1 msec}
2025-09-09 17:22:09.731[DEBUG] : <==      Total: 0
2025-09-09 17:22:09.735[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 17:22:09.735[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 17:22:09.736[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-09 17:22:09.738[DEBUG] : <==      Total: 1
2025-09-09 17:22:10.784[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 17:22:10.784[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MTI3LCJleHAiOjE3NTc0MDk3Mjd9.ths_Ynt4hiHzY1BxtxuSrENdGUfyd4IuKfgaVl38wwk(String)
2025-09-09 17:22:10.785[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MTI3LCJleHAiOjE3NTc0MDk3Mjd9.ths_Ynt4hiHzY1BxtxuSrENdGUfyd4IuKfgaVl38wwk' AND expires_at > NOW()
 {executed in 1 msec}
2025-09-09 17:22:10.785[DEBUG] : <==      Total: 0
2025-09-09 17:22:10.789[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 17:22:10.790[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 17:22:10.791[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 0 msec}
2025-09-09 17:22:10.792[DEBUG] : <==      Total: 1
2025-09-09 17:22:10.823[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 17:22:10.824[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MTI3LCJleHAiOjE3NTc0MDk3Mjd9.ths_Ynt4hiHzY1BxtxuSrENdGUfyd4IuKfgaVl38wwk(String)
2025-09-09 17:22:10.825[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MTI3LCJleHAiOjE3NTc0MDk3Mjd9.ths_Ynt4hiHzY1BxtxuSrENdGUfyd4IuKfgaVl38wwk' AND expires_at > NOW()
 {executed in 1 msec}
2025-09-09 17:22:10.825[DEBUG] : <==      Total: 0
2025-09-09 17:22:10.828[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 17:22:10.829[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 17:22:10.830[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-09 17:22:10.832[DEBUG] : <==      Total: 1
2025-09-09 17:22:10.839[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 17:22:10.840[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MTI3LCJleHAiOjE3NTc0MDk3Mjd9.ths_Ynt4hiHzY1BxtxuSrENdGUfyd4IuKfgaVl38wwk(String)
2025-09-09 17:22:10.840[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 17:22:10.841[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MTI3LCJleHAiOjE3NTc0MDk3Mjd9.ths_Ynt4hiHzY1BxtxuSrENdGUfyd4IuKfgaVl38wwk' AND expires_at > NOW()
 {executed in 0 msec}
2025-09-09 17:22:10.841[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MTI3LCJleHAiOjE3NTc0MDk3Mjd9.ths_Ynt4hiHzY1BxtxuSrENdGUfyd4IuKfgaVl38wwk(String)
2025-09-09 17:22:10.841[DEBUG] : <==      Total: 0
2025-09-09 17:22:10.843[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MTI3LCJleHAiOjE3NTc0MDk3Mjd9.ths_Ynt4hiHzY1BxtxuSrENdGUfyd4IuKfgaVl38wwk' AND expires_at > NOW()
 {executed in 2 msec}
2025-09-09 17:22:10.844[DEBUG] : <==      Total: 0
2025-09-09 17:22:10.846[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 17:22:10.847[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 17:22:10.848[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-09 17:22:10.850[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 17:22:10.850[DEBUG] : <==      Total: 1
2025-09-09 17:22:10.850[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 17:22:10.852[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-09 17:22:10.856[DEBUG] : <==      Total: 1
2025-09-09 17:22:12.677[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 17:22:12.677[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MTI3LCJleHAiOjE3NTc0MDk3Mjd9.ths_Ynt4hiHzY1BxtxuSrENdGUfyd4IuKfgaVl38wwk(String)
2025-09-09 17:22:12.678[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MTI3LCJleHAiOjE3NTc0MDk3Mjd9.ths_Ynt4hiHzY1BxtxuSrENdGUfyd4IuKfgaVl38wwk' AND expires_at > NOW()
 {executed in 1 msec}
2025-09-09 17:22:12.679[DEBUG] : <==      Total: 0
2025-09-09 17:22:12.682[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 17:22:12.683[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 17:22:12.684[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 0 msec}
2025-09-09 17:22:12.684[DEBUG] : <==      Total: 1
2025-09-09 17:22:12.690[DEBUG] : Secure-Page_UserDetails: [ROLE_USER]
2025-09-09 17:22:12.776[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 17:22:12.776[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MTI3LCJleHAiOjE3NTc0MDk3Mjd9.ths_Ynt4hiHzY1BxtxuSrENdGUfyd4IuKfgaVl38wwk(String)
2025-09-09 17:22:12.778[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MTI3LCJleHAiOjE3NTc0MDk3Mjd9.ths_Ynt4hiHzY1BxtxuSrENdGUfyd4IuKfgaVl38wwk' AND expires_at > NOW()
 {executed in 1 msec}
2025-09-09 17:22:12.778[DEBUG] : <==      Total: 0
2025-09-09 17:22:12.782[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 17:22:12.783[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 17:22:12.784[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 0 msec}
2025-09-09 17:22:12.785[DEBUG] : <==      Total: 1
2025-09-09 17:22:12.786[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 17:22:12.786[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MTI3LCJleHAiOjE3NTc0MDk3Mjd9.ths_Ynt4hiHzY1BxtxuSrENdGUfyd4IuKfgaVl38wwk(String)
2025-09-09 17:22:12.787[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MTI3LCJleHAiOjE3NTc0MDk3Mjd9.ths_Ynt4hiHzY1BxtxuSrENdGUfyd4IuKfgaVl38wwk' AND expires_at > NOW()
 {executed in 1 msec}
2025-09-09 17:22:12.788[DEBUG] : <==      Total: 0
2025-09-09 17:22:12.791[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 17:22:12.791[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 17:22:12.793[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-09 17:22:12.794[DEBUG] : <==      Total: 1
2025-09-09 17:22:21.641[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 17:22:21.641[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MDM5LCJleHAiOjE3NTc0MDY2Mzl9.n6LERstNlTRv3_aWyY3PLkJXMOMCfL_9QEkyQnj1xS8(String)
2025-09-09 17:22:21.643[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MDM5LCJleHAiOjE3NTc0MDY2Mzl9.n6LERstNlTRv3_aWyY3PLkJXMOMCfL_9QEkyQnj1xS8' AND expires_at > NOW()
 {executed in 1 msec}
2025-09-09 17:22:21.643[DEBUG] : <==      Total: 0
2025-09-09 17:22:21.649[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 17:22:21.650[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 17:22:21.652[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-09 17:22:21.654[DEBUG] : <==      Total: 1
2025-09-09 17:22:30.012[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 17:22:30.012[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MDM5LCJleHAiOjE3NTc0MDY2Mzl9.n6LERstNlTRv3_aWyY3PLkJXMOMCfL_9QEkyQnj1xS8(String)
2025-09-09 17:22:30.014[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MDM5LCJleHAiOjE3NTc0MDY2Mzl9.n6LERstNlTRv3_aWyY3PLkJXMOMCfL_9QEkyQnj1xS8' AND expires_at > NOW()
 {executed in 1 msec}
2025-09-09 17:22:30.015[DEBUG] : <==      Total: 0
2025-09-09 17:22:30.020[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 17:22:30.021[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 17:22:30.023[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-09 17:22:30.024[DEBUG] : <==      Total: 1
2025-09-09 17:22:30.040[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO blacklisted_tokens (token, expires_at)
        VALUES ('eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MDM5LCJleHAiOjE3NTc0MDY2Mzl9.n6LERstNlTRv3_aWyY3PLkJXMOMCfL_9QEkyQnj1xS8', 2025-09-09T17:30:39)
 {executed in 6 msec}
2025-09-09 17:22:34.222[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 17:22:34.223[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MTI3LCJleHAiOjE3NTc0MDk3Mjd9.ths_Ynt4hiHzY1BxtxuSrENdGUfyd4IuKfgaVl38wwk(String)
2025-09-09 17:22:34.224[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MTI3LCJleHAiOjE3NTc0MDk3Mjd9.ths_Ynt4hiHzY1BxtxuSrENdGUfyd4IuKfgaVl38wwk' AND expires_at > NOW()
 {executed in 1 msec}
2025-09-09 17:22:34.224[DEBUG] : <==      Total: 0
2025-09-09 17:22:34.228[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 17:22:34.228[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 17:22:34.229[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-09 17:22:34.229[DEBUG] : <==      Total: 1
2025-09-09 17:22:34.303[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 17:22:34.304[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MTI3LCJleHAiOjE3NTc0MDk3Mjd9.ths_Ynt4hiHzY1BxtxuSrENdGUfyd4IuKfgaVl38wwk(String)
2025-09-09 17:22:34.305[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MTI3LCJleHAiOjE3NTc0MDk3Mjd9.ths_Ynt4hiHzY1BxtxuSrENdGUfyd4IuKfgaVl38wwk' AND expires_at > NOW()
 {executed in 1 msec}
2025-09-09 17:22:34.306[DEBUG] : <==      Total: 0
2025-09-09 17:22:34.310[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 17:22:34.311[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 17:22:34.312[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-09 17:22:34.313[DEBUG] : <==      Total: 1
2025-09-09 17:22:35.165[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 17:22:35.166[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MTI3LCJleHAiOjE3NTc0MDk3Mjd9.ths_Ynt4hiHzY1BxtxuSrENdGUfyd4IuKfgaVl38wwk(String)
2025-09-09 17:22:35.166[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MTI3LCJleHAiOjE3NTc0MDk3Mjd9.ths_Ynt4hiHzY1BxtxuSrENdGUfyd4IuKfgaVl38wwk' AND expires_at > NOW()
 {executed in 0 msec}
2025-09-09 17:22:35.167[DEBUG] : <==      Total: 0
2025-09-09 17:22:35.169[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 17:22:35.170[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 17:22:35.171[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-09 17:22:35.172[DEBUG] : <==      Total: 1
2025-09-09 17:22:35.285[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 17:22:35.286[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MTI3LCJleHAiOjE3NTc0MDk3Mjd9.ths_Ynt4hiHzY1BxtxuSrENdGUfyd4IuKfgaVl38wwk(String)
2025-09-09 17:22:35.287[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MTI3LCJleHAiOjE3NTc0MDk3Mjd9.ths_Ynt4hiHzY1BxtxuSrENdGUfyd4IuKfgaVl38wwk' AND expires_at > NOW()
 {executed in 0 msec}
2025-09-09 17:22:35.287[DEBUG] : <==      Total: 0
2025-09-09 17:22:35.288[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 17:22:35.289[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MTI3LCJleHAiOjE3NTc0MDk3Mjd9.ths_Ynt4hiHzY1BxtxuSrENdGUfyd4IuKfgaVl38wwk(String)
2025-09-09 17:22:35.290[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MTI3LCJleHAiOjE3NTc0MDk3Mjd9.ths_Ynt4hiHzY1BxtxuSrENdGUfyd4IuKfgaVl38wwk' AND expires_at > NOW()
 {executed in 0 msec}
2025-09-09 17:22:35.290[DEBUG] : <==      Total: 0
2025-09-09 17:22:35.291[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 17:22:35.291[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 17:22:35.291[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MTI3LCJleHAiOjE3NTc0MDk3Mjd9.ths_Ynt4hiHzY1BxtxuSrENdGUfyd4IuKfgaVl38wwk(String)
2025-09-09 17:22:35.291[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 17:22:35.292[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MTI3LCJleHAiOjE3NTc0MDk3Mjd9.ths_Ynt4hiHzY1BxtxuSrENdGUfyd4IuKfgaVl38wwk' AND expires_at > NOW()
 {executed in 1 msec}
2025-09-09 17:22:35.293[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-09 17:22:35.294[DEBUG] : <==      Total: 0
2025-09-09 17:22:35.294[DEBUG] : <==      Total: 1
2025-09-09 17:22:35.295[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 17:22:35.295[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 17:22:35.297[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-09 17:22:35.297[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 17:22:35.298[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 17:22:35.298[DEBUG] : <==      Total: 1
2025-09-09 17:22:35.299[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 0 msec}
2025-09-09 17:22:35.300[DEBUG] : <==      Total: 1
2025-09-09 17:22:36.960[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 17:22:36.961[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MTI3LCJleHAiOjE3NTc0MDk3Mjd9.ths_Ynt4hiHzY1BxtxuSrENdGUfyd4IuKfgaVl38wwk(String)
2025-09-09 17:22:36.961[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MTI3LCJleHAiOjE3NTc0MDk3Mjd9.ths_Ynt4hiHzY1BxtxuSrENdGUfyd4IuKfgaVl38wwk' AND expires_at > NOW()
 {executed in 0 msec}
2025-09-09 17:22:36.962[DEBUG] : <==      Total: 0
2025-09-09 17:22:36.965[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 17:22:36.965[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 17:22:36.966[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 0 msec}
2025-09-09 17:22:36.967[DEBUG] : <==      Total: 1
2025-09-09 17:22:36.972[DEBUG] : Secure-Page_UserDetails: [ROLE_USER]
2025-09-09 17:22:37.011[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 17:22:37.012[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MTI3LCJleHAiOjE3NTc0MDk3Mjd9.ths_Ynt4hiHzY1BxtxuSrENdGUfyd4IuKfgaVl38wwk(String)
2025-09-09 17:22:37.012[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MTI3LCJleHAiOjE3NTc0MDk3Mjd9.ths_Ynt4hiHzY1BxtxuSrENdGUfyd4IuKfgaVl38wwk' AND expires_at > NOW()
 {executed in 0 msec}
2025-09-09 17:22:37.013[DEBUG] : <==      Total: 0
2025-09-09 17:22:37.016[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 17:22:37.016[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 17:22:37.017[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-09 17:22:37.018[DEBUG] : <==      Total: 1
2025-09-09 17:22:37.024[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 17:22:37.025[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MTI3LCJleHAiOjE3NTc0MDk3Mjd9.ths_Ynt4hiHzY1BxtxuSrENdGUfyd4IuKfgaVl38wwk(String)
2025-09-09 17:22:37.026[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MTI3LCJleHAiOjE3NTc0MDk3Mjd9.ths_Ynt4hiHzY1BxtxuSrENdGUfyd4IuKfgaVl38wwk' AND expires_at > NOW()
 {executed in 1 msec}
2025-09-09 17:22:37.027[DEBUG] : <==      Total: 0
2025-09-09 17:22:37.033[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 17:22:37.033[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 17:22:37.034[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-09 17:22:37.036[DEBUG] : <==      Total: 1
2025-09-09 17:23:10.724[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 17:23:10.725[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MDM5LCJleHAiOjE3NTc0MDY2Mzl9.n6LERstNlTRv3_aWyY3PLkJXMOMCfL_9QEkyQnj1xS8(String)
2025-09-09 17:23:10.726[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MDM5LCJleHAiOjE3NTc0MDY2Mzl9.n6LERstNlTRv3_aWyY3PLkJXMOMCfL_9QEkyQnj1xS8' AND expires_at > NOW()
 {executed in 1 msec}
2025-09-09 17:23:10.727[DEBUG] : <==      Total: 1
2025-09-09 17:23:10.728[WARN ] : Attempted to use a blacklisted JWT token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MDM5LCJleHAiOjE3NTc0MDY2Mzl9.n6LERstNlTRv3_aWyY3PLkJXMOMCfL_9QEkyQnj1xS8
2025-09-09 17:23:21.665[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 17:23:21.665[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MTI3LCJleHAiOjE3NTc0MDk3Mjd9.ths_Ynt4hiHzY1BxtxuSrENdGUfyd4IuKfgaVl38wwk(String)
2025-09-09 17:23:21.666[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MTI3LCJleHAiOjE3NTc0MDk3Mjd9.ths_Ynt4hiHzY1BxtxuSrENdGUfyd4IuKfgaVl38wwk' AND expires_at > NOW()
 {executed in 1 msec}
2025-09-09 17:23:21.667[DEBUG] : <==      Total: 0
2025-09-09 17:23:21.669[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 17:23:21.670[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 17:23:21.670[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 0 msec}
2025-09-09 17:23:21.671[DEBUG] : <==      Total: 1
2025-09-09 17:23:21.779[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 17:23:21.780[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MTI3LCJleHAiOjE3NTc0MDk3Mjd9.ths_Ynt4hiHzY1BxtxuSrENdGUfyd4IuKfgaVl38wwk(String)
2025-09-09 17:23:21.781[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MTI3LCJleHAiOjE3NTc0MDk3Mjd9.ths_Ynt4hiHzY1BxtxuSrENdGUfyd4IuKfgaVl38wwk' AND expires_at > NOW()
 {executed in 0 msec}
2025-09-09 17:23:21.782[DEBUG] : <==      Total: 0
2025-09-09 17:23:21.786[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 17:23:21.786[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 17:23:21.787[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-09 17:23:21.789[DEBUG] : <==      Total: 1
2025-09-09 17:23:22.726[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 17:23:22.726[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MTI3LCJleHAiOjE3NTc0MDk3Mjd9.ths_Ynt4hiHzY1BxtxuSrENdGUfyd4IuKfgaVl38wwk(String)
2025-09-09 17:23:22.727[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MTI3LCJleHAiOjE3NTc0MDk3Mjd9.ths_Ynt4hiHzY1BxtxuSrENdGUfyd4IuKfgaVl38wwk' AND expires_at > NOW()
 {executed in 1 msec}
2025-09-09 17:23:22.727[DEBUG] : <==      Total: 0
2025-09-09 17:23:22.730[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 17:23:22.730[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 17:23:22.731[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-09 17:23:22.732[DEBUG] : <==      Total: 1
2025-09-09 17:23:22.761[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 17:23:22.761[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 17:23:22.761[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MTI3LCJleHAiOjE3NTc0MDk3Mjd9.ths_Ynt4hiHzY1BxtxuSrENdGUfyd4IuKfgaVl38wwk(String)
2025-09-09 17:23:22.761[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MTI3LCJleHAiOjE3NTc0MDk3Mjd9.ths_Ynt4hiHzY1BxtxuSrENdGUfyd4IuKfgaVl38wwk(String)
2025-09-09 17:23:22.763[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MTI3LCJleHAiOjE3NTc0MDk3Mjd9.ths_Ynt4hiHzY1BxtxuSrENdGUfyd4IuKfgaVl38wwk' AND expires_at > NOW()
 {executed in 1 msec}
2025-09-09 17:23:22.763[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MTI3LCJleHAiOjE3NTc0MDk3Mjd9.ths_Ynt4hiHzY1BxtxuSrENdGUfyd4IuKfgaVl38wwk' AND expires_at > NOW()
 {executed in 1 msec}
2025-09-09 17:23:22.763[DEBUG] : <==      Total: 0
2025-09-09 17:23:22.763[DEBUG] : <==      Total: 0
2025-09-09 17:23:22.766[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 17:23:22.766[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 17:23:22.767[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 17:23:22.767[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 17:23:22.767[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 0 msec}
2025-09-09 17:23:22.767[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 0 msec}
2025-09-09 17:23:22.768[DEBUG] : <==      Total: 1
2025-09-09 17:23:22.768[DEBUG] : <==      Total: 1
2025-09-09 17:23:22.825[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 17:23:22.825[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MTI3LCJleHAiOjE3NTc0MDk3Mjd9.ths_Ynt4hiHzY1BxtxuSrENdGUfyd4IuKfgaVl38wwk(String)
2025-09-09 17:23:22.826[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MTI3LCJleHAiOjE3NTc0MDk3Mjd9.ths_Ynt4hiHzY1BxtxuSrENdGUfyd4IuKfgaVl38wwk' AND expires_at > NOW()
 {executed in 1 msec}
2025-09-09 17:23:22.827[DEBUG] : <==      Total: 0
2025-09-09 17:23:22.831[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 17:23:22.832[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 17:23:22.833[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 0 msec}
2025-09-09 17:23:22.834[DEBUG] : <==      Total: 1
2025-09-09 17:23:23.975[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 17:23:23.976[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MTI3LCJleHAiOjE3NTc0MDk3Mjd9.ths_Ynt4hiHzY1BxtxuSrENdGUfyd4IuKfgaVl38wwk(String)
2025-09-09 17:23:23.977[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MTI3LCJleHAiOjE3NTc0MDk3Mjd9.ths_Ynt4hiHzY1BxtxuSrENdGUfyd4IuKfgaVl38wwk' AND expires_at > NOW()
 {executed in 0 msec}
2025-09-09 17:23:23.977[DEBUG] : <==      Total: 0
2025-09-09 17:23:23.979[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 17:23:23.980[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 17:23:23.980[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 0 msec}
2025-09-09 17:23:23.981[DEBUG] : <==      Total: 1
2025-09-09 17:23:23.984[DEBUG] : Secure-Page_UserDetails: [ROLE_USER]
2025-09-09 17:23:24.070[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 17:23:24.070[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 17:23:24.070[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MTI3LCJleHAiOjE3NTc0MDk3Mjd9.ths_Ynt4hiHzY1BxtxuSrENdGUfyd4IuKfgaVl38wwk(String)
2025-09-09 17:23:24.070[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MTI3LCJleHAiOjE3NTc0MDk3Mjd9.ths_Ynt4hiHzY1BxtxuSrENdGUfyd4IuKfgaVl38wwk(String)
2025-09-09 17:23:24.076[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MTI3LCJleHAiOjE3NTc0MDk3Mjd9.ths_Ynt4hiHzY1BxtxuSrENdGUfyd4IuKfgaVl38wwk' AND expires_at > NOW()
 {executed in 1 msec}
2025-09-09 17:23:24.076[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MTI3LCJleHAiOjE3NTc0MDk3Mjd9.ths_Ynt4hiHzY1BxtxuSrENdGUfyd4IuKfgaVl38wwk' AND expires_at > NOW()
 {executed in 1 msec}
2025-09-09 17:23:24.077[DEBUG] : <==      Total: 0
2025-09-09 17:23:24.077[DEBUG] : <==      Total: 0
2025-09-09 17:23:24.080[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 17:23:24.080[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 17:23:24.081[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 17:23:24.081[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 17:23:24.082[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 0 msec}
2025-09-09 17:23:24.082[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 0 msec}
2025-09-09 17:23:24.083[DEBUG] : <==      Total: 1
2025-09-09 17:23:24.083[DEBUG] : <==      Total: 1
2025-09-09 17:23:26.345[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 17:23:26.346[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MTI3LCJleHAiOjE3NTc0MDk3Mjd9.ths_Ynt4hiHzY1BxtxuSrENdGUfyd4IuKfgaVl38wwk(String)
2025-09-09 17:23:26.348[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MTI3LCJleHAiOjE3NTc0MDk3Mjd9.ths_Ynt4hiHzY1BxtxuSrENdGUfyd4IuKfgaVl38wwk' AND expires_at > NOW()
 {executed in 1 msec}
2025-09-09 17:23:26.348[DEBUG] : <==      Total: 0
2025-09-09 17:23:26.351[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 17:23:26.351[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 17:23:26.352[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 0 msec}
2025-09-09 17:23:26.352[DEBUG] : <==      Total: 1
2025-09-09 17:23:26.359[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO blacklisted_tokens (token, expires_at)
        VALUES ('eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MTI3LCJleHAiOjE3NTc0MDk3Mjd9.ths_Ynt4hiHzY1BxtxuSrENdGUfyd4IuKfgaVl38wwk', 2025-09-09T18:22:07)
 {executed in 1 msec}
2025-09-09 17:24:03.942[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 17:24:03.943[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MDM5LCJleHAiOjE3NTc0MDY2Mzl9.n6LERstNlTRv3_aWyY3PLkJXMOMCfL_9QEkyQnj1xS8(String)
2025-09-09 17:24:03.944[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MDM5LCJleHAiOjE3NTc0MDY2Mzl9.n6LERstNlTRv3_aWyY3PLkJXMOMCfL_9QEkyQnj1xS8' AND expires_at > NOW()
 {executed in 0 msec}
2025-09-09 17:24:03.944[DEBUG] : <==      Total: 1
2025-09-09 17:24:03.945[WARN ] : Attempted to use a blacklisted JWT token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MDM5LCJleHAiOjE3NTc0MDY2Mzl9.n6LERstNlTRv3_aWyY3PLkJXMOMCfL_9QEkyQnj1xS8
2025-09-09 17:24:11.018[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 17:24:11.018[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MDM5LCJleHAiOjE3NTc0MDY2Mzl9.n6LERstNlTRv3_aWyY3PLkJXMOMCfL_9QEkyQnj1xS8(String)
2025-09-09 17:24:11.019[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MDM5LCJleHAiOjE3NTc0MDY2Mzl9.n6LERstNlTRv3_aWyY3PLkJXMOMCfL_9QEkyQnj1xS8' AND expires_at > NOW()
 {executed in 0 msec}
2025-09-09 17:24:11.019[DEBUG] : <==      Total: 1
2025-09-09 17:24:11.020[WARN ] : Attempted to use a blacklisted JWT token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MDM5LCJleHAiOjE3NTc0MDY2Mzl9.n6LERstNlTRv3_aWyY3PLkJXMOMCfL_9QEkyQnj1xS8
2025-09-09 17:24:46.695[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 17:24:46.696[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-09 17:24:46.698[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 1 msec}
2025-09-09 17:24:46.699[DEBUG] : <==      Total: 1
2025-09-09 17:24:46.814[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 17:24:46.814[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-09 17:24:46.815[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 0 msec}
2025-09-09 17:24:46.815[DEBUG] : <==      Total: 1
2025-09-09 17:24:46.843[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 17:24:46.843[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqdW5namgwNTE5IiwiaWF0IjoxNzU3NDA2Mjg2LCJleHAiOjE3NTc0MDk4ODZ9.fD7nQPoKObzK-F_A8LSFKlZ_DyBWFpn__JXaHHml6f8(String)
2025-09-09 17:24:46.844[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqdW5namgwNTE5IiwiaWF0IjoxNzU3NDA2Mjg2LCJleHAiOjE3NTc0MDk4ODZ9.fD7nQPoKObzK-F_A8LSFKlZ_DyBWFpn__JXaHHml6f8' AND expires_at > NOW()
 {executed in 1 msec}
2025-09-09 17:24:46.845[DEBUG] : <==      Total: 0
2025-09-09 17:24:46.848[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 17:24:46.848[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-09 17:24:46.849[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 1 msec}
2025-09-09 17:24:46.850[DEBUG] : <==      Total: 1
2025-09-09 17:24:46.854[DEBUG] : Secure-Page_UserDetails: [ROLE_ADMIN]
2025-09-09 17:24:46.931[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 17:24:46.931[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 17:24:46.931[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqdW5namgwNTE5IiwiaWF0IjoxNzU3NDA2Mjg2LCJleHAiOjE3NTc0MDk4ODZ9.fD7nQPoKObzK-F_A8LSFKlZ_DyBWFpn__JXaHHml6f8(String)
2025-09-09 17:24:46.931[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqdW5namgwNTE5IiwiaWF0IjoxNzU3NDA2Mjg2LCJleHAiOjE3NTc0MDk4ODZ9.fD7nQPoKObzK-F_A8LSFKlZ_DyBWFpn__JXaHHml6f8(String)
2025-09-09 17:24:46.932[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqdW5namgwNTE5IiwiaWF0IjoxNzU3NDA2Mjg2LCJleHAiOjE3NTc0MDk4ODZ9.fD7nQPoKObzK-F_A8LSFKlZ_DyBWFpn__JXaHHml6f8' AND expires_at > NOW()
 {executed in 1 msec}
2025-09-09 17:24:46.932[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqdW5namgwNTE5IiwiaWF0IjoxNzU3NDA2Mjg2LCJleHAiOjE3NTc0MDk4ODZ9.fD7nQPoKObzK-F_A8LSFKlZ_DyBWFpn__JXaHHml6f8' AND expires_at > NOW()
 {executed in 1 msec}
2025-09-09 17:24:46.933[DEBUG] : <==      Total: 0
2025-09-09 17:24:46.933[DEBUG] : <==      Total: 0
2025-09-09 17:24:46.936[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 17:24:46.936[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 17:24:46.936[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-09 17:24:46.936[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-09 17:24:46.937[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 1 msec}
2025-09-09 17:24:46.937[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 1 msec}
2025-09-09 17:24:46.938[DEBUG] : <==      Total: 1
2025-09-09 17:24:46.938[DEBUG] : <==      Total: 1
2025-09-09 17:24:48.364[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 17:24:48.364[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqdW5namgwNTE5IiwiaWF0IjoxNzU3NDA2Mjg2LCJleHAiOjE3NTc0MDk4ODZ9.fD7nQPoKObzK-F_A8LSFKlZ_DyBWFpn__JXaHHml6f8(String)
2025-09-09 17:24:48.365[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqdW5namgwNTE5IiwiaWF0IjoxNzU3NDA2Mjg2LCJleHAiOjE3NTc0MDk4ODZ9.fD7nQPoKObzK-F_A8LSFKlZ_DyBWFpn__JXaHHml6f8' AND expires_at > NOW()
 {executed in 1 msec}
2025-09-09 17:24:48.365[DEBUG] : <==      Total: 0
2025-09-09 17:24:48.368[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 17:24:48.368[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-09 17:24:48.369[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 1 msec}
2025-09-09 17:24:48.369[DEBUG] : <==      Total: 1
2025-09-09 17:24:48.487[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 17:24:48.488[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqdW5namgwNTE5IiwiaWF0IjoxNzU3NDA2Mjg2LCJleHAiOjE3NTc0MDk4ODZ9.fD7nQPoKObzK-F_A8LSFKlZ_DyBWFpn__JXaHHml6f8(String)
2025-09-09 17:24:48.489[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqdW5namgwNTE5IiwiaWF0IjoxNzU3NDA2Mjg2LCJleHAiOjE3NTc0MDk4ODZ9.fD7nQPoKObzK-F_A8LSFKlZ_DyBWFpn__JXaHHml6f8' AND expires_at > NOW()
 {executed in 0 msec}
2025-09-09 17:24:48.489[DEBUG] : <==      Total: 0
2025-09-09 17:24:48.493[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 17:24:48.493[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-09 17:24:48.494[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 1 msec}
2025-09-09 17:24:48.495[DEBUG] : <==      Total: 1
2025-09-09 17:24:48.513[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 17:24:48.514[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqdW5namgwNTE5IiwiaWF0IjoxNzU3NDA2Mjg2LCJleHAiOjE3NTc0MDk4ODZ9.fD7nQPoKObzK-F_A8LSFKlZ_DyBWFpn__JXaHHml6f8(String)
2025-09-09 17:24:48.515[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqdW5namgwNTE5IiwiaWF0IjoxNzU3NDA2Mjg2LCJleHAiOjE3NTc0MDk4ODZ9.fD7nQPoKObzK-F_A8LSFKlZ_DyBWFpn__JXaHHml6f8' AND expires_at > NOW()
 {executed in 1 msec}
2025-09-09 17:24:48.515[DEBUG] : <==      Total: 0
2025-09-09 17:24:48.520[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 17:24:48.520[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-09 17:24:48.521[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 1 msec}
2025-09-09 17:24:48.522[DEBUG] : <==      Total: 1
2025-09-09 17:24:50.814[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 17:24:50.814[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqdW5namgwNTE5IiwiaWF0IjoxNzU3NDA2Mjg2LCJleHAiOjE3NTc0MDk4ODZ9.fD7nQPoKObzK-F_A8LSFKlZ_DyBWFpn__JXaHHml6f8(String)
2025-09-09 17:24:50.815[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqdW5namgwNTE5IiwiaWF0IjoxNzU3NDA2Mjg2LCJleHAiOjE3NTc0MDk4ODZ9.fD7nQPoKObzK-F_A8LSFKlZ_DyBWFpn__JXaHHml6f8' AND expires_at > NOW()
 {executed in 1 msec}
2025-09-09 17:24:50.816[DEBUG] : <==      Total: 0
2025-09-09 17:24:50.818[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 17:24:50.819[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-09 17:24:50.820[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 0 msec}
2025-09-09 17:24:50.820[DEBUG] : <==      Total: 1
2025-09-09 17:24:50.824[DEBUG] : Secure-Page_UserDetails: [ROLE_ADMIN]
2025-09-09 17:24:50.906[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 17:24:50.906[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 17:24:50.906[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqdW5namgwNTE5IiwiaWF0IjoxNzU3NDA2Mjg2LCJleHAiOjE3NTc0MDk4ODZ9.fD7nQPoKObzK-F_A8LSFKlZ_DyBWFpn__JXaHHml6f8(String)
2025-09-09 17:24:50.907[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqdW5namgwNTE5IiwiaWF0IjoxNzU3NDA2Mjg2LCJleHAiOjE3NTc0MDk4ODZ9.fD7nQPoKObzK-F_A8LSFKlZ_DyBWFpn__JXaHHml6f8(String)
2025-09-09 17:24:50.908[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqdW5namgwNTE5IiwiaWF0IjoxNzU3NDA2Mjg2LCJleHAiOjE3NTc0MDk4ODZ9.fD7nQPoKObzK-F_A8LSFKlZ_DyBWFpn__JXaHHml6f8' AND expires_at > NOW()
 {executed in 0 msec}
2025-09-09 17:24:50.908[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqdW5namgwNTE5IiwiaWF0IjoxNzU3NDA2Mjg2LCJleHAiOjE3NTc0MDk4ODZ9.fD7nQPoKObzK-F_A8LSFKlZ_DyBWFpn__JXaHHml6f8' AND expires_at > NOW()
 {executed in 0 msec}
2025-09-09 17:24:50.908[DEBUG] : <==      Total: 0
2025-09-09 17:24:50.908[DEBUG] : <==      Total: 0
2025-09-09 17:24:50.911[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 17:24:50.911[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 17:24:50.912[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-09 17:24:50.912[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-09 17:24:50.912[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 0 msec}
2025-09-09 17:24:50.912[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 0 msec}
2025-09-09 17:24:50.913[DEBUG] : <==      Total: 1
2025-09-09 17:24:50.913[DEBUG] : <==      Total: 1
2025-09-09 17:24:52.371[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 17:24:52.371[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqdW5namgwNTE5IiwiaWF0IjoxNzU3NDA2Mjg2LCJleHAiOjE3NTc0MDk4ODZ9.fD7nQPoKObzK-F_A8LSFKlZ_DyBWFpn__JXaHHml6f8(String)
2025-09-09 17:24:52.372[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqdW5namgwNTE5IiwiaWF0IjoxNzU3NDA2Mjg2LCJleHAiOjE3NTc0MDk4ODZ9.fD7nQPoKObzK-F_A8LSFKlZ_DyBWFpn__JXaHHml6f8' AND expires_at > NOW()
 {executed in 1 msec}
2025-09-09 17:24:52.373[DEBUG] : <==      Total: 0
2025-09-09 17:24:52.376[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 17:24:52.376[DEBUG] : ==> Parameters: jungjh0519(String)
2025-09-09 17:24:52.377[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jungjh0519'
 {executed in 1 msec}
2025-09-09 17:24:52.378[DEBUG] : <==      Total: 1
2025-09-09 17:24:52.387[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. INSERT INTO blacklisted_tokens (token, expires_at)
        VALUES ('eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqdW5namgwNTE5IiwiaWF0IjoxNzU3NDA2Mjg2LCJleHAiOjE3NTc0MDk4ODZ9.fD7nQPoKObzK-F_A8LSFKlZ_DyBWFpn__JXaHHml6f8', 2025-09-09T18:24:46)
 {executed in 1 msec}
2025-09-09 17:25:08.494[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 17:25:08.494[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 17:25:08.497[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-09 17:25:08.499[DEBUG] : <==      Total: 1
2025-09-09 17:25:08.617[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 17:25:08.617[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 17:25:08.618[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-09 17:25:08.619[DEBUG] : <==      Total: 1
2025-09-09 17:25:08.646[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 17:25:08.647[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MzA4LCJleHAiOjE3NTc0MDk5MDh9.XM3zKv5jXrBtxqgpolAl_QfOIlvisJVhQHh4xm-SuMw(String)
2025-09-09 17:25:08.648[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MzA4LCJleHAiOjE3NTc0MDk5MDh9.XM3zKv5jXrBtxqgpolAl_QfOIlvisJVhQHh4xm-SuMw' AND expires_at > NOW()
 {executed in 0 msec}
2025-09-09 17:25:08.648[DEBUG] : <==      Total: 0
2025-09-09 17:25:08.651[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 17:25:08.651[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 17:25:08.652[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-09 17:25:08.653[DEBUG] : <==      Total: 1
2025-09-09 17:25:08.657[DEBUG] : Secure-Page_UserDetails: [ROLE_USER]
2025-09-09 17:25:08.686[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 17:25:08.686[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MzA4LCJleHAiOjE3NTc0MDk5MDh9.XM3zKv5jXrBtxqgpolAl_QfOIlvisJVhQHh4xm-SuMw(String)
2025-09-09 17:25:08.687[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MzA4LCJleHAiOjE3NTc0MDk5MDh9.XM3zKv5jXrBtxqgpolAl_QfOIlvisJVhQHh4xm-SuMw' AND expires_at > NOW()
 {executed in 1 msec}
2025-09-09 17:25:08.688[DEBUG] : <==      Total: 0
2025-09-09 17:25:08.692[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 17:25:08.692[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 17:25:08.694[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-09 17:25:08.694[DEBUG] : <==      Total: 1
2025-09-09 17:25:08.725[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 17:25:08.725[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MzA4LCJleHAiOjE3NTc0MDk5MDh9.XM3zKv5jXrBtxqgpolAl_QfOIlvisJVhQHh4xm-SuMw(String)
2025-09-09 17:25:08.726[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MzA4LCJleHAiOjE3NTc0MDk5MDh9.XM3zKv5jXrBtxqgpolAl_QfOIlvisJVhQHh4xm-SuMw' AND expires_at > NOW()
 {executed in 1 msec}
2025-09-09 17:25:08.726[DEBUG] : <==      Total: 0
2025-09-09 17:25:08.730[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 17:25:08.730[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 17:25:08.731[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-09 17:25:08.732[DEBUG] : <==      Total: 1
2025-09-09 17:25:15.159[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 17:25:15.160[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MzA4LCJleHAiOjE3NTc0MDk5MDh9.XM3zKv5jXrBtxqgpolAl_QfOIlvisJVhQHh4xm-SuMw(String)
2025-09-09 17:25:15.161[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MzA4LCJleHAiOjE3NTc0MDk5MDh9.XM3zKv5jXrBtxqgpolAl_QfOIlvisJVhQHh4xm-SuMw' AND expires_at > NOW()
 {executed in 0 msec}
2025-09-09 17:25:15.161[DEBUG] : <==      Total: 0
2025-09-09 17:25:15.164[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 17:25:15.164[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 17:25:15.165[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 0 msec}
2025-09-09 17:25:15.165[DEBUG] : <==      Total: 1
2025-09-09 17:25:15.267[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 17:25:15.267[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MzA4LCJleHAiOjE3NTc0MDk5MDh9.XM3zKv5jXrBtxqgpolAl_QfOIlvisJVhQHh4xm-SuMw(String)
2025-09-09 17:25:15.268[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MzA4LCJleHAiOjE3NTc0MDk5MDh9.XM3zKv5jXrBtxqgpolAl_QfOIlvisJVhQHh4xm-SuMw' AND expires_at > NOW()
 {executed in 1 msec}
2025-09-09 17:25:15.269[DEBUG] : <==      Total: 0
2025-09-09 17:25:15.273[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 17:25:15.273[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 17:25:15.274[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-09 17:25:15.275[DEBUG] : <==      Total: 1
2025-09-09 17:25:43.410[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 17:25:43.411[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MzA4LCJleHAiOjE3NTc0MDk5MDh9.XM3zKv5jXrBtxqgpolAl_QfOIlvisJVhQHh4xm-SuMw(String)
2025-09-09 17:25:43.411[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MzA4LCJleHAiOjE3NTc0MDk5MDh9.XM3zKv5jXrBtxqgpolAl_QfOIlvisJVhQHh4xm-SuMw' AND expires_at > NOW()
 {executed in 0 msec}
2025-09-09 17:25:43.412[DEBUG] : <==      Total: 0
2025-09-09 17:25:43.414[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 17:25:43.414[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 17:25:43.415[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-09 17:25:43.415[DEBUG] : <==      Total: 1
2025-09-09 17:25:43.493[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 17:25:43.493[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MzA4LCJleHAiOjE3NTc0MDk5MDh9.XM3zKv5jXrBtxqgpolAl_QfOIlvisJVhQHh4xm-SuMw(String)
2025-09-09 17:25:43.494[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MzA4LCJleHAiOjE3NTc0MDk5MDh9.XM3zKv5jXrBtxqgpolAl_QfOIlvisJVhQHh4xm-SuMw' AND expires_at > NOW()
 {executed in 0 msec}
2025-09-09 17:25:43.495[DEBUG] : <==      Total: 0
2025-09-09 17:25:43.498[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 17:25:43.499[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 17:25:43.500[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-09 17:25:43.501[DEBUG] : <==      Total: 1
2025-09-09 17:26:12.778[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 17:26:12.778[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MzA4LCJleHAiOjE3NTc0MDk5MDh9.XM3zKv5jXrBtxqgpolAl_QfOIlvisJVhQHh4xm-SuMw(String)
2025-09-09 17:26:12.779[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MzA4LCJleHAiOjE3NTc0MDk5MDh9.XM3zKv5jXrBtxqgpolAl_QfOIlvisJVhQHh4xm-SuMw' AND expires_at > NOW()
 {executed in 1 msec}
2025-09-09 17:26:12.779[DEBUG] : <==      Total: 0
2025-09-09 17:26:12.783[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 17:26:12.783[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 17:26:12.784[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 0 msec}
2025-09-09 17:26:12.784[DEBUG] : <==      Total: 1
2025-09-09 17:26:12.789[ERROR] : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.NullPointerException: Cannot invoke "String.length()" because "test" is null] with root cause
java.lang.NullPointerException: Cannot invoke "String.length()" because "test" is null
	at kr.co.jaehoon.springboottemplate.controller.UserRestController.testError(UserRestController.java:234)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:527)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:614)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at kr.co.jaehoon.springboottemplate.security.JwtRequestFilter.doFilterInternal(JwtRequestFilter.java:157)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:842)
2025-09-09 17:26:12.879[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 17:26:12.879[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MzA4LCJleHAiOjE3NTc0MDk5MDh9.XM3zKv5jXrBtxqgpolAl_QfOIlvisJVhQHh4xm-SuMw(String)
2025-09-09 17:26:12.880[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MzA4LCJleHAiOjE3NTc0MDk5MDh9.XM3zKv5jXrBtxqgpolAl_QfOIlvisJVhQHh4xm-SuMw' AND expires_at > NOW()
 {executed in 1 msec}
2025-09-09 17:26:12.881[DEBUG] : <==      Total: 0
2025-09-09 17:26:12.884[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 17:26:12.884[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 17:26:12.886[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 0 msec}
2025-09-09 17:26:12.886[DEBUG] : <==      Total: 1
2025-09-09 17:26:22.213[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 17:26:22.214[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MzA4LCJleHAiOjE3NTc0MDk5MDh9.XM3zKv5jXrBtxqgpolAl_QfOIlvisJVhQHh4xm-SuMw(String)
2025-09-09 17:26:22.215[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MzA4LCJleHAiOjE3NTc0MDk5MDh9.XM3zKv5jXrBtxqgpolAl_QfOIlvisJVhQHh4xm-SuMw' AND expires_at > NOW()
 {executed in 0 msec}
2025-09-09 17:26:22.218[DEBUG] : <==      Total: 0
2025-09-09 17:26:22.221[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 17:26:22.221[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 17:26:22.222[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-09 17:26:22.223[DEBUG] : <==      Total: 1
2025-09-09 17:26:22.251[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 17:26:22.252[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MzA4LCJleHAiOjE3NTc0MDk5MDh9.XM3zKv5jXrBtxqgpolAl_QfOIlvisJVhQHh4xm-SuMw(String)
2025-09-09 17:26:22.252[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 17:26:22.252[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MzA4LCJleHAiOjE3NTc0MDk5MDh9.XM3zKv5jXrBtxqgpolAl_QfOIlvisJVhQHh4xm-SuMw(String)
2025-09-09 17:26:22.252[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MzA4LCJleHAiOjE3NTc0MDk5MDh9.XM3zKv5jXrBtxqgpolAl_QfOIlvisJVhQHh4xm-SuMw' AND expires_at > NOW()
 {executed in 0 msec}
2025-09-09 17:26:22.253[DEBUG] : <==      Total: 0
2025-09-09 17:26:22.253[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MzA4LCJleHAiOjE3NTc0MDk5MDh9.XM3zKv5jXrBtxqgpolAl_QfOIlvisJVhQHh4xm-SuMw' AND expires_at > NOW()
 {executed in 1 msec}
2025-09-09 17:26:22.254[DEBUG] : <==      Total: 0
2025-09-09 17:26:22.257[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 17:26:22.257[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 17:26:22.258[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 17:26:22.258[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 17:26:22.260[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 2 msec}
2025-09-09 17:26:22.260[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-09 17:26:22.260[DEBUG] : <==      Total: 1
2025-09-09 17:26:22.261[DEBUG] : <==      Total: 1
2025-09-09 17:26:22.319[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 17:26:22.319[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MzA4LCJleHAiOjE3NTc0MDk5MDh9.XM3zKv5jXrBtxqgpolAl_QfOIlvisJVhQHh4xm-SuMw(String)
2025-09-09 17:26:22.320[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MzA4LCJleHAiOjE3NTc0MDk5MDh9.XM3zKv5jXrBtxqgpolAl_QfOIlvisJVhQHh4xm-SuMw' AND expires_at > NOW()
 {executed in 1 msec}
2025-09-09 17:26:22.321[DEBUG] : <==      Total: 0
2025-09-09 17:26:22.324[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 17:26:22.325[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 17:26:22.326[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-09 17:26:22.328[DEBUG] : <==      Total: 1
2025-09-09 17:26:23.846[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 17:26:23.847[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MzA4LCJleHAiOjE3NTc0MDk5MDh9.XM3zKv5jXrBtxqgpolAl_QfOIlvisJVhQHh4xm-SuMw(String)
2025-09-09 17:26:23.848[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MzA4LCJleHAiOjE3NTc0MDk5MDh9.XM3zKv5jXrBtxqgpolAl_QfOIlvisJVhQHh4xm-SuMw' AND expires_at > NOW()
 {executed in 0 msec}
2025-09-09 17:26:23.848[DEBUG] : <==      Total: 0
2025-09-09 17:26:23.850[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 17:26:23.851[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 17:26:23.851[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 0 msec}
2025-09-09 17:26:23.852[DEBUG] : <==      Total: 1
2025-09-09 17:26:23.856[DEBUG] : Secure-Page_UserDetails: [ROLE_USER]
2025-09-09 17:26:23.943[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 17:26:23.943[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 17:26:23.943[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MzA4LCJleHAiOjE3NTc0MDk5MDh9.XM3zKv5jXrBtxqgpolAl_QfOIlvisJVhQHh4xm-SuMw(String)
2025-09-09 17:26:23.943[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MzA4LCJleHAiOjE3NTc0MDk5MDh9.XM3zKv5jXrBtxqgpolAl_QfOIlvisJVhQHh4xm-SuMw(String)
2025-09-09 17:26:23.944[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MzA4LCJleHAiOjE3NTc0MDk5MDh9.XM3zKv5jXrBtxqgpolAl_QfOIlvisJVhQHh4xm-SuMw' AND expires_at > NOW()
 {executed in 1 msec}
2025-09-09 17:26:23.944[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MzA4LCJleHAiOjE3NTc0MDk5MDh9.XM3zKv5jXrBtxqgpolAl_QfOIlvisJVhQHh4xm-SuMw' AND expires_at > NOW()
 {executed in 1 msec}
2025-09-09 17:26:23.944[DEBUG] : <==      Total: 0
2025-09-09 17:26:23.944[DEBUG] : <==      Total: 0
2025-09-09 17:26:23.947[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 17:26:23.947[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 17:26:23.948[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 17:26:23.948[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 17:26:23.949[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 0 msec}
2025-09-09 17:26:23.949[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 0 msec}
2025-09-09 17:26:23.949[DEBUG] : <==      Total: 1
2025-09-09 17:26:23.949[DEBUG] : <==      Total: 1
2025-09-09 17:26:26.421[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 17:26:26.422[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MzA4LCJleHAiOjE3NTc0MDk5MDh9.XM3zKv5jXrBtxqgpolAl_QfOIlvisJVhQHh4xm-SuMw(String)
2025-09-09 17:26:26.422[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MzA4LCJleHAiOjE3NTc0MDk5MDh9.XM3zKv5jXrBtxqgpolAl_QfOIlvisJVhQHh4xm-SuMw' AND expires_at > NOW()
 {executed in 0 msec}
2025-09-09 17:26:26.423[DEBUG] : <==      Total: 0
2025-09-09 17:26:26.425[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 17:26:26.425[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 17:26:26.426[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-09 17:26:26.427[DEBUG] : <==      Total: 1
2025-09-09 17:26:26.502[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 17:26:26.503[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MzA4LCJleHAiOjE3NTc0MDk5MDh9.XM3zKv5jXrBtxqgpolAl_QfOIlvisJVhQHh4xm-SuMw(String)
2025-09-09 17:26:26.504[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MzA4LCJleHAiOjE3NTc0MDk5MDh9.XM3zKv5jXrBtxqgpolAl_QfOIlvisJVhQHh4xm-SuMw' AND expires_at > NOW()
 {executed in 1 msec}
2025-09-09 17:26:26.504[DEBUG] : <==      Total: 0
2025-09-09 17:26:26.508[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 17:26:26.508[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 17:26:26.510[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 0 msec}
2025-09-09 17:26:26.511[DEBUG] : <==      Total: 1
2025-09-09 17:26:43.362[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 17:26:43.362[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MzA4LCJleHAiOjE3NTc0MDk5MDh9.XM3zKv5jXrBtxqgpolAl_QfOIlvisJVhQHh4xm-SuMw(String)
2025-09-09 17:26:43.363[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MzA4LCJleHAiOjE3NTc0MDk5MDh9.XM3zKv5jXrBtxqgpolAl_QfOIlvisJVhQHh4xm-SuMw' AND expires_at > NOW()
 {executed in 1 msec}
2025-09-09 17:26:43.363[DEBUG] : <==      Total: 0
2025-09-09 17:26:43.365[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 17:26:43.365[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 17:26:43.366[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-09 17:26:43.367[DEBUG] : <==      Total: 1
2025-09-09 17:26:43.370[ERROR] : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.RuntimeException: 의도적으로 발생시킨 에러입니다!] with root cause
java.lang.RuntimeException: 의도적으로 발생시킨 에러입니다!
	at kr.co.jaehoon.springboottemplate.controller.HomeController.triggerErrorPage(HomeController.java:37)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:527)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:614)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at kr.co.jaehoon.springboottemplate.security.JwtRequestFilter.doFilterInternal(JwtRequestFilter.java:157)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:842)
2025-09-09 17:26:43.459[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 17:26:43.459[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MzA4LCJleHAiOjE3NTc0MDk5MDh9.XM3zKv5jXrBtxqgpolAl_QfOIlvisJVhQHh4xm-SuMw(String)
2025-09-09 17:26:43.460[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MzA4LCJleHAiOjE3NTc0MDk5MDh9.XM3zKv5jXrBtxqgpolAl_QfOIlvisJVhQHh4xm-SuMw' AND expires_at > NOW()
 {executed in 0 msec}
2025-09-09 17:26:43.461[DEBUG] : <==      Total: 0
2025-09-09 17:26:43.465[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 17:26:43.466[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 17:26:43.467[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-09 17:26:43.468[DEBUG] : <==      Total: 1
2025-09-09 17:26:50.169[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 17:26:50.169[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MzA4LCJleHAiOjE3NTc0MDk5MDh9.XM3zKv5jXrBtxqgpolAl_QfOIlvisJVhQHh4xm-SuMw(String)
2025-09-09 17:26:50.170[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MzA4LCJleHAiOjE3NTc0MDk5MDh9.XM3zKv5jXrBtxqgpolAl_QfOIlvisJVhQHh4xm-SuMw' AND expires_at > NOW()
 {executed in 1 msec}
2025-09-09 17:26:50.170[DEBUG] : <==      Total: 0
2025-09-09 17:26:50.173[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 17:26:50.173[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 17:26:50.173[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 0 msec}
2025-09-09 17:26:50.174[DEBUG] : <==      Total: 1
2025-09-09 17:26:50.242[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 17:26:50.242[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MzA4LCJleHAiOjE3NTc0MDk5MDh9.XM3zKv5jXrBtxqgpolAl_QfOIlvisJVhQHh4xm-SuMw(String)
2025-09-09 17:26:50.243[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MzA4LCJleHAiOjE3NTc0MDk5MDh9.XM3zKv5jXrBtxqgpolAl_QfOIlvisJVhQHh4xm-SuMw' AND expires_at > NOW()
 {executed in 1 msec}
2025-09-09 17:26:50.243[DEBUG] : <==      Total: 0
2025-09-09 17:26:50.246[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 17:26:50.246[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 17:26:50.247[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-09 17:26:50.248[DEBUG] : <==      Total: 1
2025-09-09 17:26:51.284[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 17:26:51.284[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MzA4LCJleHAiOjE3NTc0MDk5MDh9.XM3zKv5jXrBtxqgpolAl_QfOIlvisJVhQHh4xm-SuMw(String)
2025-09-09 17:26:51.285[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MzA4LCJleHAiOjE3NTc0MDk5MDh9.XM3zKv5jXrBtxqgpolAl_QfOIlvisJVhQHh4xm-SuMw' AND expires_at > NOW()
 {executed in 1 msec}
2025-09-09 17:26:51.286[DEBUG] : <==      Total: 0
2025-09-09 17:26:51.288[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 17:26:51.289[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 17:26:51.289[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 0 msec}
2025-09-09 17:26:51.290[DEBUG] : <==      Total: 1
2025-09-09 17:26:51.294[DEBUG] : Secure-Page_UserDetails: [ROLE_USER]
2025-09-09 17:26:51.332[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 17:26:51.332[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MzA4LCJleHAiOjE3NTc0MDk5MDh9.XM3zKv5jXrBtxqgpolAl_QfOIlvisJVhQHh4xm-SuMw(String)
2025-09-09 17:26:51.333[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MzA4LCJleHAiOjE3NTc0MDk5MDh9.XM3zKv5jXrBtxqgpolAl_QfOIlvisJVhQHh4xm-SuMw' AND expires_at > NOW()
 {executed in 1 msec}
2025-09-09 17:26:51.334[DEBUG] : <==      Total: 0
2025-09-09 17:26:51.336[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 17:26:51.337[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 17:26:51.337[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 0 msec}
2025-09-09 17:26:51.338[DEBUG] : <==      Total: 1
2025-09-09 17:26:51.370[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 17:26:51.370[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MzA4LCJleHAiOjE3NTc0MDk5MDh9.XM3zKv5jXrBtxqgpolAl_QfOIlvisJVhQHh4xm-SuMw(String)
2025-09-09 17:26:51.371[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MzA4LCJleHAiOjE3NTc0MDk5MDh9.XM3zKv5jXrBtxqgpolAl_QfOIlvisJVhQHh4xm-SuMw' AND expires_at > NOW()
 {executed in 1 msec}
2025-09-09 17:26:51.372[DEBUG] : <==      Total: 0
2025-09-09 17:26:51.375[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 17:26:51.376[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 17:26:51.377[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-09 17:26:51.378[DEBUG] : <==      Total: 1
2025-09-09 17:26:52.417[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 17:26:52.417[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MzA4LCJleHAiOjE3NTc0MDk5MDh9.XM3zKv5jXrBtxqgpolAl_QfOIlvisJVhQHh4xm-SuMw(String)
2025-09-09 17:26:52.418[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MzA4LCJleHAiOjE3NTc0MDk5MDh9.XM3zKv5jXrBtxqgpolAl_QfOIlvisJVhQHh4xm-SuMw' AND expires_at > NOW()
 {executed in 1 msec}
2025-09-09 17:26:52.418[DEBUG] : <==      Total: 0
2025-09-09 17:26:52.421[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 17:26:52.422[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 17:26:52.422[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 0 msec}
2025-09-09 17:26:52.423[DEBUG] : <==      Total: 1
2025-09-09 17:26:52.462[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 17:26:52.462[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 17:26:52.462[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MzA4LCJleHAiOjE3NTc0MDk5MDh9.XM3zKv5jXrBtxqgpolAl_QfOIlvisJVhQHh4xm-SuMw(String)
2025-09-09 17:26:52.462[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MzA4LCJleHAiOjE3NTc0MDk5MDh9.XM3zKv5jXrBtxqgpolAl_QfOIlvisJVhQHh4xm-SuMw(String)
2025-09-09 17:26:52.463[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MzA4LCJleHAiOjE3NTc0MDk5MDh9.XM3zKv5jXrBtxqgpolAl_QfOIlvisJVhQHh4xm-SuMw' AND expires_at > NOW()
 {executed in 1 msec}
2025-09-09 17:26:52.463[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MzA4LCJleHAiOjE3NTc0MDk5MDh9.XM3zKv5jXrBtxqgpolAl_QfOIlvisJVhQHh4xm-SuMw' AND expires_at > NOW()
 {executed in 1 msec}
2025-09-09 17:26:52.464[DEBUG] : <==      Total: 0
2025-09-09 17:26:52.464[DEBUG] : <==      Total: 0
2025-09-09 17:26:52.466[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 17:26:52.466[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 17:26:52.466[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 17:26:52.466[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 17:26:52.467[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-09 17:26:52.467[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-09 17:26:52.468[DEBUG] : <==      Total: 1
2025-09-09 17:26:52.468[DEBUG] : <==      Total: 1
2025-09-09 17:26:52.489[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 17:26:52.489[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MzA4LCJleHAiOjE3NTc0MDk5MDh9.XM3zKv5jXrBtxqgpolAl_QfOIlvisJVhQHh4xm-SuMw(String)
2025-09-09 17:26:52.490[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MzA4LCJleHAiOjE3NTc0MDk5MDh9.XM3zKv5jXrBtxqgpolAl_QfOIlvisJVhQHh4xm-SuMw' AND expires_at > NOW()
 {executed in 1 msec}
2025-09-09 17:26:52.491[DEBUG] : <==      Total: 0
2025-09-09 17:26:52.494[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 17:26:52.495[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 17:26:52.496[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 0 msec}
2025-09-09 17:26:52.497[DEBUG] : <==      Total: 1
2025-09-09 17:26:53.925[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 17:26:53.925[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MzA4LCJleHAiOjE3NTc0MDk5MDh9.XM3zKv5jXrBtxqgpolAl_QfOIlvisJVhQHh4xm-SuMw(String)
2025-09-09 17:26:53.926[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MzA4LCJleHAiOjE3NTc0MDk5MDh9.XM3zKv5jXrBtxqgpolAl_QfOIlvisJVhQHh4xm-SuMw' AND expires_at > NOW()
 {executed in 1 msec}
2025-09-09 17:26:53.926[DEBUG] : <==      Total: 0
2025-09-09 17:26:53.929[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 17:26:53.930[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 17:26:53.930[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 0 msec}
2025-09-09 17:26:53.931[DEBUG] : <==      Total: 1
2025-09-09 17:26:53.934[ERROR] : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.NullPointerException: Cannot invoke "String.length()" because "test" is null] with root cause
java.lang.NullPointerException: Cannot invoke "String.length()" because "test" is null
	at kr.co.jaehoon.springboottemplate.controller.UserRestController.testError(UserRestController.java:234)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:527)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:614)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at kr.co.jaehoon.springboottemplate.security.JwtRequestFilter.doFilterInternal(JwtRequestFilter.java:157)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:842)
2025-09-09 17:26:54.004[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 17:26:54.004[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MzA4LCJleHAiOjE3NTc0MDk5MDh9.XM3zKv5jXrBtxqgpolAl_QfOIlvisJVhQHh4xm-SuMw(String)
2025-09-09 17:26:54.005[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MzA4LCJleHAiOjE3NTc0MDk5MDh9.XM3zKv5jXrBtxqgpolAl_QfOIlvisJVhQHh4xm-SuMw' AND expires_at > NOW()
 {executed in 1 msec}
2025-09-09 17:26:54.006[DEBUG] : <==      Total: 0
2025-09-09 17:26:54.009[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 17:26:54.009[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 17:26:54.010[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-09 17:26:54.011[DEBUG] : <==      Total: 1
2025-09-09 17:28:19.712[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 17:28:19.712[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MzA4LCJleHAiOjE3NTc0MDk5MDh9.XM3zKv5jXrBtxqgpolAl_QfOIlvisJVhQHh4xm-SuMw(String)
2025-09-09 17:28:19.713[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MzA4LCJleHAiOjE3NTc0MDk5MDh9.XM3zKv5jXrBtxqgpolAl_QfOIlvisJVhQHh4xm-SuMw' AND expires_at > NOW()
 {executed in 1 msec}
2025-09-09 17:28:19.714[DEBUG] : <==      Total: 0
2025-09-09 17:28:19.716[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 17:28:19.716[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 17:28:19.717[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-09 17:28:19.717[DEBUG] : <==      Total: 1
2025-09-09 17:28:19.790[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 17:28:19.791[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MzA4LCJleHAiOjE3NTc0MDk5MDh9.XM3zKv5jXrBtxqgpolAl_QfOIlvisJVhQHh4xm-SuMw(String)
2025-09-09 17:28:19.792[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MzA4LCJleHAiOjE3NTc0MDk5MDh9.XM3zKv5jXrBtxqgpolAl_QfOIlvisJVhQHh4xm-SuMw' AND expires_at > NOW()
 {executed in 1 msec}
2025-09-09 17:28:19.793[DEBUG] : <==      Total: 0
2025-09-09 17:28:19.796[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 17:28:19.797[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 17:28:19.798[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 0 msec}
2025-09-09 17:28:19.799[DEBUG] : <==      Total: 1
2025-09-09 17:30:56.673[INFO ] : HikariPool-1 - Shutdown initiated...
2025-09-09 17:30:56.682[INFO ] : HikariPool-1 - Shutdown completed.
2025-09-09 17:31:42.549[INFO ] : Starting SpringBootTemplateApplication using Java 17.0.12 with PID 15764 (D:\Web\Spring\Workspace\SpringBootTemplate\out\production\classes started by IDBS_Oculus in D:\Web\Spring\Workspace\SpringBootTemplate)
2025-09-09 17:31:42.551[DEBUG] : Running with Spring Boot v3.3.12, Spring v6.1.20
2025-09-09 17:31:42.553[INFO ] : No active profile set, falling back to 1 default profile: "default"
2025-09-09 17:31:42.632[INFO ] : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-09-09 17:31:42.633[INFO ] : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-09-09 17:31:44.508[INFO ] : Tomcat initialized with port 8080 (http)
2025-09-09 17:31:44.526[INFO ] : Starting service [Tomcat]
2025-09-09 17:31:44.527[INFO ] : Starting Servlet engine: [Apache Tomcat/10.1.41]
2025-09-09 17:31:44.785[INFO ] : At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2025-09-09 17:31:44.796[INFO ] : Initializing Spring embedded WebApplicationContext
2025-09-09 17:31:44.796[INFO ] : Root WebApplicationContext: initialization completed in 2163 ms
2025-09-09 17:31:45.348[DEBUG] : Filter 'jwtRequestFilter' configured for use
2025-09-09 17:31:45.431[INFO ] : Global AuthenticationManager configured with UserDetailsService bean with name userDetailsServiceImpl
2025-09-09 17:31:45.603[INFO ] : Adding welcome page template: index
2025-09-09 17:31:46.049[INFO ] : LiveReload server is running on port 35729
2025-09-09 17:31:46.112[INFO ] : Tomcat started on port 8080 (http) with context path '/'
2025-09-09 17:31:46.131[INFO ] : Started SpringBootTemplateApplication in 4.538 seconds (process running for 5.866)
2025-09-09 17:31:54.702[INFO ] : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-09-09 17:31:54.702[INFO ] : Initializing Servlet 'dispatcherServlet'
2025-09-09 17:31:54.703[INFO ] : Completed initialization in 1 ms
2025-09-09 17:31:54.748[INFO ] : HikariPool-1 - Starting...
2025-09-09 17:31:54.976[INFO ] : HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6b9acc22
2025-09-09 17:31:54.979[INFO ] : HikariPool-1 - Start completed.
2025-09-09 17:31:55.015[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 17:31:55.054[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MzA4LCJleHAiOjE3NTc0MDk5MDh9.XM3zKv5jXrBtxqgpolAl_QfOIlvisJVhQHh4xm-SuMw(String)
2025-09-09 17:31:55.068[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MzA4LCJleHAiOjE3NTc0MDk5MDh9.XM3zKv5jXrBtxqgpolAl_QfOIlvisJVhQHh4xm-SuMw' AND expires_at > NOW()
 {executed in 14 msec}
2025-09-09 17:31:55.096[DEBUG] : <==      Total: 0
2025-09-09 17:31:55.211[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 17:31:55.211[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 17:31:55.212[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-09 17:31:55.220[DEBUG] : <==      Total: 1
2025-09-09 17:31:56.123[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 17:31:56.124[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MzA4LCJleHAiOjE3NTc0MDk5MDh9.XM3zKv5jXrBtxqgpolAl_QfOIlvisJVhQHh4xm-SuMw(String)
2025-09-09 17:31:56.125[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MzA4LCJleHAiOjE3NTc0MDk5MDh9.XM3zKv5jXrBtxqgpolAl_QfOIlvisJVhQHh4xm-SuMw' AND expires_at > NOW()
 {executed in 1 msec}
2025-09-09 17:31:56.127[DEBUG] : <==      Total: 0
2025-09-09 17:31:56.132[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 17:31:56.134[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 17:31:56.136[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-09 17:31:56.138[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 17:31:56.138[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MzA4LCJleHAiOjE3NTc0MDk5MDh9.XM3zKv5jXrBtxqgpolAl_QfOIlvisJVhQHh4xm-SuMw(String)
2025-09-09 17:31:56.139[DEBUG] : <==      Total: 1
2025-09-09 17:31:56.140[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MzA4LCJleHAiOjE3NTc0MDk5MDh9.XM3zKv5jXrBtxqgpolAl_QfOIlvisJVhQHh4xm-SuMw' AND expires_at > NOW()
 {executed in 2 msec}
2025-09-09 17:31:56.141[DEBUG] : <==      Total: 0
2025-09-09 17:31:56.145[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 17:31:56.145[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 17:31:56.147[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 2 msec}
2025-09-09 17:31:56.150[DEBUG] : <==      Total: 1
2025-09-09 17:31:56.167[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 17:31:56.168[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MzA4LCJleHAiOjE3NTc0MDk5MDh9.XM3zKv5jXrBtxqgpolAl_QfOIlvisJVhQHh4xm-SuMw(String)
2025-09-09 17:31:56.169[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MzA4LCJleHAiOjE3NTc0MDk5MDh9.XM3zKv5jXrBtxqgpolAl_QfOIlvisJVhQHh4xm-SuMw' AND expires_at > NOW()
 {executed in 1 msec}
2025-09-09 17:31:56.170[DEBUG] : <==      Total: 0
2025-09-09 17:31:56.174[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 17:31:56.175[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 17:31:56.176[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-09 17:31:56.179[DEBUG] : <==      Total: 1
2025-09-09 17:31:57.487[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 17:31:57.488[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MzA4LCJleHAiOjE3NTc0MDk5MDh9.XM3zKv5jXrBtxqgpolAl_QfOIlvisJVhQHh4xm-SuMw(String)
2025-09-09 17:31:57.488[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MzA4LCJleHAiOjE3NTc0MDk5MDh9.XM3zKv5jXrBtxqgpolAl_QfOIlvisJVhQHh4xm-SuMw' AND expires_at > NOW()
 {executed in 0 msec}
2025-09-09 17:31:57.489[DEBUG] : <==      Total: 0
2025-09-09 17:31:57.492[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 17:31:57.493[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 17:31:57.494[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-09 17:31:57.496[DEBUG] : <==      Total: 1
2025-09-09 17:31:57.504[DEBUG] : Secure-Page_UserDetails: [ROLE_USER]
2025-09-09 17:31:57.730[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 17:31:57.731[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MzA4LCJleHAiOjE3NTc0MDk5MDh9.XM3zKv5jXrBtxqgpolAl_QfOIlvisJVhQHh4xm-SuMw(String)
2025-09-09 17:31:57.733[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MzA4LCJleHAiOjE3NTc0MDk5MDh9.XM3zKv5jXrBtxqgpolAl_QfOIlvisJVhQHh4xm-SuMw' AND expires_at > NOW()
 {executed in 2 msec}
2025-09-09 17:31:57.735[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 17:31:57.735[DEBUG] : <==      Total: 0
2025-09-09 17:31:57.737[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MzA4LCJleHAiOjE3NTc0MDk5MDh9.XM3zKv5jXrBtxqgpolAl_QfOIlvisJVhQHh4xm-SuMw(String)
2025-09-09 17:31:57.739[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MzA4LCJleHAiOjE3NTc0MDk5MDh9.XM3zKv5jXrBtxqgpolAl_QfOIlvisJVhQHh4xm-SuMw' AND expires_at > NOW()
 {executed in 2 msec}
2025-09-09 17:31:57.740[DEBUG] : <==      Total: 0
2025-09-09 17:31:57.744[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 17:31:57.744[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 17:31:57.745[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 17:31:57.746[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-09 17:31:57.746[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 17:31:57.748[DEBUG] : <==      Total: 1
2025-09-09 17:31:57.749[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 2 msec}
2025-09-09 17:31:57.751[DEBUG] : <==      Total: 1
2025-09-09 17:31:58.548[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 17:31:58.549[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MzA4LCJleHAiOjE3NTc0MDk5MDh9.XM3zKv5jXrBtxqgpolAl_QfOIlvisJVhQHh4xm-SuMw(String)
2025-09-09 17:31:58.550[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MzA4LCJleHAiOjE3NTc0MDk5MDh9.XM3zKv5jXrBtxqgpolAl_QfOIlvisJVhQHh4xm-SuMw' AND expires_at > NOW()
 {executed in 1 msec}
2025-09-09 17:31:58.551[DEBUG] : <==      Total: 0
2025-09-09 17:31:58.555[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 17:31:58.557[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 17:31:58.558[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-09 17:31:58.562[DEBUG] : <==      Total: 1
2025-09-09 17:31:58.585[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO blacklisted_tokens (token, expires_at)
        VALUES ('eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2MzA4LCJleHAiOjE3NTc0MDk5MDh9.XM3zKv5jXrBtxqgpolAl_QfOIlvisJVhQHh4xm-SuMw', 2025-09-09T18:25:08)
 {executed in 6 msec}
2025-09-09 17:32:08.092[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 17:32:08.092[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 17:32:08.093[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-09 17:32:08.094[DEBUG] : <==      Total: 1
2025-09-09 17:32:08.183[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 17:32:08.183[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 17:32:08.184[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 0 msec}
2025-09-09 17:32:08.185[DEBUG] : <==      Total: 1
2025-09-09 17:32:08.239[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 17:32:08.239[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2NzI4LCJleHAiOjE3NTc0MTAzMjh9.kJ0qeGLWQ4Tvd5Ty3aLwzj0wfr689FF3k2Gk87XAMdU(String)
2025-09-09 17:32:08.240[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2NzI4LCJleHAiOjE3NTc0MTAzMjh9.kJ0qeGLWQ4Tvd5Ty3aLwzj0wfr689FF3k2Gk87XAMdU' AND expires_at > NOW()
 {executed in 1 msec}
2025-09-09 17:32:08.241[DEBUG] : <==      Total: 0
2025-09-09 17:32:08.244[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 17:32:08.246[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 17:32:08.246[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 0 msec}
2025-09-09 17:32:08.253[DEBUG] : <==      Total: 1
2025-09-09 17:32:08.260[DEBUG] : Secure-Page_UserDetails: [ROLE_USER]
2025-09-09 17:32:08.294[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 17:32:08.294[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2NzI4LCJleHAiOjE3NTc0MTAzMjh9.kJ0qeGLWQ4Tvd5Ty3aLwzj0wfr689FF3k2Gk87XAMdU(String)
2025-09-09 17:32:08.296[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2NzI4LCJleHAiOjE3NTc0MTAzMjh9.kJ0qeGLWQ4Tvd5Ty3aLwzj0wfr689FF3k2Gk87XAMdU' AND expires_at > NOW()
 {executed in 1 msec}
2025-09-09 17:32:08.296[DEBUG] : <==      Total: 0
2025-09-09 17:32:08.301[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 17:32:08.301[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 17:32:08.303[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 2 msec}
2025-09-09 17:32:08.304[DEBUG] : <==      Total: 1
2025-09-09 17:32:08.353[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 17:32:08.354[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2NzI4LCJleHAiOjE3NTc0MTAzMjh9.kJ0qeGLWQ4Tvd5Ty3aLwzj0wfr689FF3k2Gk87XAMdU(String)
2025-09-09 17:32:08.355[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2NzI4LCJleHAiOjE3NTc0MTAzMjh9.kJ0qeGLWQ4Tvd5Ty3aLwzj0wfr689FF3k2Gk87XAMdU' AND expires_at > NOW()
 {executed in 1 msec}
2025-09-09 17:32:08.356[DEBUG] : <==      Total: 0
2025-09-09 17:32:08.361[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 17:32:08.362[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 17:32:08.364[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-09 17:32:08.366[DEBUG] : <==      Total: 1
2025-09-09 17:32:11.847[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 17:32:11.848[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2NzI4LCJleHAiOjE3NTc0MTAzMjh9.kJ0qeGLWQ4Tvd5Ty3aLwzj0wfr689FF3k2Gk87XAMdU(String)
2025-09-09 17:32:11.849[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2NzI4LCJleHAiOjE3NTc0MTAzMjh9.kJ0qeGLWQ4Tvd5Ty3aLwzj0wfr689FF3k2Gk87XAMdU' AND expires_at > NOW()
 {executed in 0 msec}
2025-09-09 17:32:11.849[DEBUG] : <==      Total: 0
2025-09-09 17:32:11.852[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 17:32:11.853[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 17:32:11.854[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 0 msec}
2025-09-09 17:32:11.855[DEBUG] : <==      Total: 1
2025-09-09 17:32:29.539[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 17:32:29.540[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2NzI4LCJleHAiOjE3NTc0MTAzMjh9.kJ0qeGLWQ4Tvd5Ty3aLwzj0wfr689FF3k2Gk87XAMdU(String)
2025-09-09 17:32:29.541[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2NzI4LCJleHAiOjE3NTc0MTAzMjh9.kJ0qeGLWQ4Tvd5Ty3aLwzj0wfr689FF3k2Gk87XAMdU' AND expires_at > NOW()
 {executed in 0 msec}
2025-09-09 17:32:29.541[DEBUG] : <==      Total: 0
2025-09-09 17:32:29.545[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 17:32:29.545[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 17:32:29.546[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-09 17:32:29.547[DEBUG] : <==      Total: 1
2025-09-09 17:32:53.649[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 17:32:53.650[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2NzI4LCJleHAiOjE3NTc0MTAzMjh9.kJ0qeGLWQ4Tvd5Ty3aLwzj0wfr689FF3k2Gk87XAMdU(String)
2025-09-09 17:32:53.651[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2NzI4LCJleHAiOjE3NTc0MTAzMjh9.kJ0qeGLWQ4Tvd5Ty3aLwzj0wfr689FF3k2Gk87XAMdU' AND expires_at > NOW()
 {executed in 1 msec}
2025-09-09 17:32:53.651[DEBUG] : <==      Total: 0
2025-09-09 17:32:53.655[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 17:32:53.655[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 17:32:53.656[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-09 17:32:53.659[DEBUG] : <==      Total: 1
2025-09-09 17:32:53.669[ERROR] : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.NullPointerException: Cannot invoke "String.length()" because "test" is null] with root cause
java.lang.NullPointerException: Cannot invoke "String.length()" because "test" is null
	at kr.co.jaehoon.springboottemplate.controller.UserRestController.testError(UserRestController.java:234)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:527)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:614)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at kr.co.jaehoon.springboottemplate.security.JwtRequestFilter.doFilterInternal(JwtRequestFilter.java:157)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:116)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:398)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:903)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1740)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1189)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:658)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:842)
2025-09-09 17:32:53.755[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 17:32:53.755[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2NzI4LCJleHAiOjE3NTc0MTAzMjh9.kJ0qeGLWQ4Tvd5Ty3aLwzj0wfr689FF3k2Gk87XAMdU(String)
2025-09-09 17:32:53.756[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2NzI4LCJleHAiOjE3NTc0MTAzMjh9.kJ0qeGLWQ4Tvd5Ty3aLwzj0wfr689FF3k2Gk87XAMdU' AND expires_at > NOW()
 {executed in 1 msec}
2025-09-09 17:32:53.756[DEBUG] : <==      Total: 0
2025-09-09 17:32:53.761[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 17:32:53.762[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 17:32:53.763[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-09 17:32:53.764[DEBUG] : <==      Total: 1
2025-09-09 17:33:06.108[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 17:33:06.108[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2NzI4LCJleHAiOjE3NTc0MTAzMjh9.kJ0qeGLWQ4Tvd5Ty3aLwzj0wfr689FF3k2Gk87XAMdU(String)
2025-09-09 17:33:06.109[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2NzI4LCJleHAiOjE3NTc0MTAzMjh9.kJ0qeGLWQ4Tvd5Ty3aLwzj0wfr689FF3k2Gk87XAMdU' AND expires_at > NOW()
 {executed in 1 msec}
2025-09-09 17:33:06.110[DEBUG] : <==      Total: 0
2025-09-09 17:33:06.112[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 17:33:06.113[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 17:33:06.113[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 0 msec}
2025-09-09 17:33:06.114[DEBUG] : <==      Total: 1
2025-09-09 17:34:13.640[WARN ] : HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=48s40ms168µs200ns).
2025-09-09 17:34:13.716[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 17:34:13.717[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2NzI4LCJleHAiOjE3NTc0MTAzMjh9.kJ0qeGLWQ4Tvd5Ty3aLwzj0wfr689FF3k2Gk87XAMdU(String)
2025-09-09 17:34:13.718[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2NzI4LCJleHAiOjE3NTc0MTAzMjh9.kJ0qeGLWQ4Tvd5Ty3aLwzj0wfr689FF3k2Gk87XAMdU' AND expires_at > NOW()
 {executed in 1 msec}
2025-09-09 17:34:13.718[DEBUG] : <==      Total: 0
2025-09-09 17:34:13.721[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 17:34:13.721[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 17:34:13.722[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 0 msec}
2025-09-09 17:34:13.723[DEBUG] : <==      Total: 1
2025-09-09 17:34:31.110[INFO ] : HikariPool-1 - Shutdown initiated...
2025-09-09 17:34:31.119[INFO ] : HikariPool-1 - Shutdown completed.
2025-09-09 17:39:48.232[INFO ] : Starting SpringBootTemplateApplication using Java 17.0.12 with PID 7908 (D:\Web\Spring\Workspace\SpringBootTemplate\out\production\classes started by IDBS_Oculus in D:\Web\Spring\Workspace\SpringBootTemplate)
2025-09-09 17:39:48.234[DEBUG] : Running with Spring Boot v3.3.12, Spring v6.1.20
2025-09-09 17:39:48.235[INFO ] : No active profile set, falling back to 1 default profile: "default"
2025-09-09 17:39:48.290[INFO ] : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-09-09 17:39:48.291[INFO ] : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-09-09 17:39:49.856[INFO ] : Tomcat initialized with port 8080 (http)
2025-09-09 17:39:49.873[INFO ] : Starting service [Tomcat]
2025-09-09 17:39:49.874[INFO ] : Starting Servlet engine: [Apache Tomcat/10.1.41]
2025-09-09 17:39:50.121[INFO ] : At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2025-09-09 17:39:50.131[INFO ] : Initializing Spring embedded WebApplicationContext
2025-09-09 17:39:50.131[INFO ] : Root WebApplicationContext: initialization completed in 1840 ms
2025-09-09 17:39:50.596[DEBUG] : Filter 'jwtRequestFilter' configured for use
2025-09-09 17:39:50.668[INFO ] : Global AuthenticationManager configured with UserDetailsService bean with name userDetailsServiceImpl
2025-09-09 17:39:50.817[INFO ] : Adding welcome page template: index
2025-09-09 17:39:51.205[INFO ] : LiveReload server is running on port 35729
2025-09-09 17:39:51.254[INFO ] : Tomcat started on port 8080 (http) with context path '/'
2025-09-09 17:39:51.270[INFO ] : Started SpringBootTemplateApplication in 3.841 seconds (process running for 4.75)
2025-09-09 17:40:39.443[INFO ] : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-09-09 17:40:39.444[INFO ] : Initializing Servlet 'dispatcherServlet'
2025-09-09 17:40:39.445[INFO ] : Completed initialization in 1 ms
2025-09-09 17:40:39.674[INFO ] : HikariPool-1 - Starting...
2025-09-09 17:40:39.882[INFO ] : HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@4d06767d
2025-09-09 17:40:39.886[INFO ] : HikariPool-1 - Start completed.
2025-09-09 17:40:40.073[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 17:40:40.165[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 17:40:40.215[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 28 msec}
2025-09-09 17:40:40.244[DEBUG] : <==      Total: 1
2025-09-09 17:40:40.358[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 17:40:40.358[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 17:40:40.360[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-09 17:40:40.362[DEBUG] : <==      Total: 1
2025-09-09 17:41:01.529[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 17:41:01.530[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA3MjQwLCJleHAiOjE3NTc0MDc4NDB9.Jbol0ffMU-JFoakU_0uqsFFTkxeWkAAM6W8iG8M1dGc(String)
2025-09-09 17:41:01.532[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA3MjQwLCJleHAiOjE3NTc0MDc4NDB9.Jbol0ffMU-JFoakU_0uqsFFTkxeWkAAM6W8iG8M1dGc' AND expires_at > NOW()
 {executed in 1 msec}
2025-09-09 17:41:01.534[DEBUG] : <==      Total: 0
2025-09-09 17:41:01.578[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 17:41:01.579[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 17:41:01.581[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-09 17:41:01.583[DEBUG] : <==      Total: 1
2025-09-09 17:41:15.275[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 17:41:15.276[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA3MjQwLCJleHAiOjE3NTc0MDc4NDB9.Jbol0ffMU-JFoakU_0uqsFFTkxeWkAAM6W8iG8M1dGc(String)
2025-09-09 17:41:15.277[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA3MjQwLCJleHAiOjE3NTc0MDc4NDB9.Jbol0ffMU-JFoakU_0uqsFFTkxeWkAAM6W8iG8M1dGc' AND expires_at > NOW()
 {executed in 1 msec}
2025-09-09 17:41:15.278[DEBUG] : <==      Total: 0
2025-09-09 17:41:15.283[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 17:41:15.284[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 17:41:15.285[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-09 17:41:15.287[DEBUG] : <==      Total: 1
2025-09-09 17:41:27.594[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 17:41:27.595[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA3MjQwLCJleHAiOjE3NTc0MDc4NDB9.Jbol0ffMU-JFoakU_0uqsFFTkxeWkAAM6W8iG8M1dGc(String)
2025-09-09 17:41:27.596[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA3MjQwLCJleHAiOjE3NTc0MDc4NDB9.Jbol0ffMU-JFoakU_0uqsFFTkxeWkAAM6W8iG8M1dGc' AND expires_at > NOW()
 {executed in 0 msec}
2025-09-09 17:41:27.596[DEBUG] : <==      Total: 0
2025-09-09 17:41:27.601[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 17:41:27.602[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 17:41:27.604[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-09 17:41:27.607[DEBUG] : <==      Total: 1
2025-09-09 17:41:39.707[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 17:41:39.708[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA3MjQwLCJleHAiOjE3NTc0MDc4NDB9.Jbol0ffMU-JFoakU_0uqsFFTkxeWkAAM6W8iG8M1dGc(String)
2025-09-09 17:41:39.709[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA3MjQwLCJleHAiOjE3NTc0MDc4NDB9.Jbol0ffMU-JFoakU_0uqsFFTkxeWkAAM6W8iG8M1dGc' AND expires_at > NOW()
 {executed in 1 msec}
2025-09-09 17:41:39.710[DEBUG] : <==      Total: 0
2025-09-09 17:41:39.713[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 17:41:39.714[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 17:41:39.715[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 0 msec}
2025-09-09 17:41:39.716[DEBUG] : <==      Total: 1
2025-09-09 17:41:39.733[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO blacklisted_tokens (token, expires_at)
        VALUES ('eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA3MjQwLCJleHAiOjE3NTc0MDc4NDB9.Jbol0ffMU-JFoakU_0uqsFFTkxeWkAAM6W8iG8M1dGc', 2025-09-09T17:50:40)
 {executed in 5 msec}
2025-09-09 17:41:41.128[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 17:41:41.129[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA3MjQwLCJleHAiOjE3NTc0MDc4NDB9.Jbol0ffMU-JFoakU_0uqsFFTkxeWkAAM6W8iG8M1dGc(String)
2025-09-09 17:41:41.131[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA3MjQwLCJleHAiOjE3NTc0MDc4NDB9.Jbol0ffMU-JFoakU_0uqsFFTkxeWkAAM6W8iG8M1dGc' AND expires_at > NOW()
 {executed in 0 msec}
2025-09-09 17:41:41.132[DEBUG] : <==      Total: 1
2025-09-09 17:41:41.133[WARN ] : Attempted to use a blacklisted JWT token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA3MjQwLCJleHAiOjE3NTc0MDc4NDB9.Jbol0ffMU-JFoakU_0uqsFFTkxeWkAAM6W8iG8M1dGc
2025-09-09 17:42:03.845[INFO ] : HikariPool-1 - Shutdown initiated...
2025-09-09 17:42:03.852[INFO ] : HikariPool-1 - Shutdown completed.
2025-09-09 17:48:03.697[INFO ] : Starting SpringBootTemplateApplication using Java 17.0.12 with PID 20416 (D:\Web\Spring\Workspace\SpringBootTemplate\out\production\classes started by IDBS_Oculus in D:\Web\Spring\Workspace\SpringBootTemplate)
2025-09-09 17:48:03.699[DEBUG] : Running with Spring Boot v3.3.12, Spring v6.1.20
2025-09-09 17:48:03.700[INFO ] : No active profile set, falling back to 1 default profile: "default"
2025-09-09 17:48:03.777[INFO ] : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-09-09 17:48:03.777[INFO ] : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-09-09 17:48:05.552[INFO ] : Tomcat initialized with port 8080 (http)
2025-09-09 17:48:05.568[INFO ] : Starting service [Tomcat]
2025-09-09 17:48:05.569[INFO ] : Starting Servlet engine: [Apache Tomcat/10.1.41]
2025-09-09 17:48:05.825[INFO ] : At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2025-09-09 17:48:05.838[INFO ] : Initializing Spring embedded WebApplicationContext
2025-09-09 17:48:05.838[INFO ] : Root WebApplicationContext: initialization completed in 2060 ms
2025-09-09 17:48:06.375[DEBUG] : Filter 'jwtRequestFilter' configured for use
2025-09-09 17:48:06.459[INFO ] : Global AuthenticationManager configured with UserDetailsService bean with name userDetailsServiceImpl
2025-09-09 17:48:06.642[INFO ] : Adding welcome page template: index
2025-09-09 17:48:07.101[INFO ] : LiveReload server is running on port 35729
2025-09-09 17:48:07.163[INFO ] : Tomcat started on port 8080 (http) with context path '/'
2025-09-09 17:48:07.182[INFO ] : Started SpringBootTemplateApplication in 4.427 seconds (process running for 5.695)
2025-09-09 17:48:15.539[INFO ] : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-09-09 17:48:15.540[INFO ] : Initializing Servlet 'dispatcherServlet'
2025-09-09 17:48:15.541[INFO ] : Completed initialization in 1 ms
2025-09-09 17:48:15.584[INFO ] : HikariPool-1 - Starting...
2025-09-09 17:48:15.792[INFO ] : HikariPool-1 - Added connection net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy@6b9acc22
2025-09-09 17:48:15.795[INFO ] : HikariPool-1 - Start completed.
2025-09-09 17:48:15.832[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 17:48:15.871[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2NzI4LCJleHAiOjE3NTc0MTAzMjh9.kJ0qeGLWQ4Tvd5Ty3aLwzj0wfr689FF3k2Gk87XAMdU(String)
2025-09-09 17:48:15.886[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2NzI4LCJleHAiOjE3NTc0MTAzMjh9.kJ0qeGLWQ4Tvd5Ty3aLwzj0wfr689FF3k2Gk87XAMdU' AND expires_at > NOW()
 {executed in 14 msec}
2025-09-09 17:48:15.914[DEBUG] : <==      Total: 0
2025-09-09 17:48:16.014[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 17:48:16.015[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 17:48:16.017[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-09 17:48:16.024[DEBUG] : <==      Total: 1
2025-09-09 17:48:16.917[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 17:48:16.919[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2NzI4LCJleHAiOjE3NTc0MTAzMjh9.kJ0qeGLWQ4Tvd5Ty3aLwzj0wfr689FF3k2Gk87XAMdU(String)
2025-09-09 17:48:16.920[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2NzI4LCJleHAiOjE3NTc0MTAzMjh9.kJ0qeGLWQ4Tvd5Ty3aLwzj0wfr689FF3k2Gk87XAMdU' AND expires_at > NOW()
 {executed in 1 msec}
2025-09-09 17:48:16.922[DEBUG] : <==      Total: 0
2025-09-09 17:48:16.927[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 17:48:16.928[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 17:48:16.931[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-09 17:48:16.933[DEBUG] : <==      Total: 1
2025-09-09 17:48:16.934[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 17:48:16.935[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2NzI4LCJleHAiOjE3NTc0MTAzMjh9.kJ0qeGLWQ4Tvd5Ty3aLwzj0wfr689FF3k2Gk87XAMdU(String)
2025-09-09 17:48:16.937[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2NzI4LCJleHAiOjE3NTc0MTAzMjh9.kJ0qeGLWQ4Tvd5Ty3aLwzj0wfr689FF3k2Gk87XAMdU' AND expires_at > NOW()
 {executed in 1 msec}
2025-09-09 17:48:16.938[DEBUG] : <==      Total: 0
2025-09-09 17:48:16.943[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 17:48:16.944[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 17:48:16.945[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-09 17:48:16.947[DEBUG] : <==      Total: 1
2025-09-09 17:48:16.971[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 17:48:16.971[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2NzI4LCJleHAiOjE3NTc0MTAzMjh9.kJ0qeGLWQ4Tvd5Ty3aLwzj0wfr689FF3k2Gk87XAMdU(String)
2025-09-09 17:48:16.972[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2NzI4LCJleHAiOjE3NTc0MTAzMjh9.kJ0qeGLWQ4Tvd5Ty3aLwzj0wfr689FF3k2Gk87XAMdU' AND expires_at > NOW()
 {executed in 1 msec}
2025-09-09 17:48:16.973[DEBUG] : <==      Total: 0
2025-09-09 17:48:16.980[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 17:48:16.980[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 17:48:16.982[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 0 msec}
2025-09-09 17:48:16.985[DEBUG] : <==      Total: 1
2025-09-09 17:48:18.584[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 17:48:18.584[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2NzI4LCJleHAiOjE3NTc0MTAzMjh9.kJ0qeGLWQ4Tvd5Ty3aLwzj0wfr689FF3k2Gk87XAMdU(String)
2025-09-09 17:48:18.585[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2NzI4LCJleHAiOjE3NTc0MTAzMjh9.kJ0qeGLWQ4Tvd5Ty3aLwzj0wfr689FF3k2Gk87XAMdU' AND expires_at > NOW()
 {executed in 1 msec}
2025-09-09 17:48:18.586[DEBUG] : <==      Total: 0
2025-09-09 17:48:18.589[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 17:48:18.589[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 17:48:18.590[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-09 17:48:18.592[DEBUG] : <==      Total: 1
2025-09-09 17:48:18.601[DEBUG] : Secure-Page_UserDetails: [ROLE_USER]
2025-09-09 17:48:18.827[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 17:48:18.827[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2NzI4LCJleHAiOjE3NTc0MTAzMjh9.kJ0qeGLWQ4Tvd5Ty3aLwzj0wfr689FF3k2Gk87XAMdU(String)
2025-09-09 17:48:18.828[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 17:48:18.829[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2NzI4LCJleHAiOjE3NTc0MTAzMjh9.kJ0qeGLWQ4Tvd5Ty3aLwzj0wfr689FF3k2Gk87XAMdU' AND expires_at > NOW()
 {executed in 1 msec}
2025-09-09 17:48:18.829[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2NzI4LCJleHAiOjE3NTc0MTAzMjh9.kJ0qeGLWQ4Tvd5Ty3aLwzj0wfr689FF3k2Gk87XAMdU(String)
2025-09-09 17:48:18.831[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2NzI4LCJleHAiOjE3NTc0MTAzMjh9.kJ0qeGLWQ4Tvd5Ty3aLwzj0wfr689FF3k2Gk87XAMdU' AND expires_at > NOW()
 {executed in 1 msec}
2025-09-09 17:48:18.831[DEBUG] : <==      Total: 0
2025-09-09 17:48:18.831[DEBUG] : <==      Total: 0
2025-09-09 17:48:18.838[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 17:48:18.838[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 17:48:18.840[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 17:48:18.840[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 0 msec}
2025-09-09 17:48:18.841[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 17:48:18.842[DEBUG] : <==      Total: 1
2025-09-09 17:48:18.842[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-09 17:48:18.845[DEBUG] : <==      Total: 1
2025-09-09 17:48:23.392[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 17:48:23.392[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2NzI4LCJleHAiOjE3NTc0MTAzMjh9.kJ0qeGLWQ4Tvd5Ty3aLwzj0wfr689FF3k2Gk87XAMdU(String)
2025-09-09 17:48:23.393[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2NzI4LCJleHAiOjE3NTc0MTAzMjh9.kJ0qeGLWQ4Tvd5Ty3aLwzj0wfr689FF3k2Gk87XAMdU' AND expires_at > NOW()
 {executed in 1 msec}
2025-09-09 17:48:23.394[DEBUG] : <==      Total: 0
2025-09-09 17:48:23.397[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 17:48:23.398[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 17:48:23.400[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-09 17:48:23.402[DEBUG] : <==      Total: 1
2025-09-09 17:48:23.517[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 17:48:23.518[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2NzI4LCJleHAiOjE3NTc0MTAzMjh9.kJ0qeGLWQ4Tvd5Ty3aLwzj0wfr689FF3k2Gk87XAMdU(String)
2025-09-09 17:48:23.519[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2NzI4LCJleHAiOjE3NTc0MTAzMjh9.kJ0qeGLWQ4Tvd5Ty3aLwzj0wfr689FF3k2Gk87XAMdU' AND expires_at > NOW()
 {executed in 1 msec}
2025-09-09 17:48:23.520[DEBUG] : <==      Total: 0
2025-09-09 17:48:23.525[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 17:48:23.526[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 17:48:23.527[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-09 17:48:23.529[DEBUG] : <==      Total: 1
2025-09-09 17:48:25.030[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 17:48:25.030[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2NzI4LCJleHAiOjE3NTc0MTAzMjh9.kJ0qeGLWQ4Tvd5Ty3aLwzj0wfr689FF3k2Gk87XAMdU(String)
2025-09-09 17:48:25.031[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2NzI4LCJleHAiOjE3NTc0MTAzMjh9.kJ0qeGLWQ4Tvd5Ty3aLwzj0wfr689FF3k2Gk87XAMdU' AND expires_at > NOW()
 {executed in 1 msec}
2025-09-09 17:48:25.032[DEBUG] : <==      Total: 0
2025-09-09 17:48:25.035[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 17:48:25.035[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 17:48:25.036[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 0 msec}
2025-09-09 17:48:25.037[DEBUG] : <==      Total: 1
2025-09-09 17:48:25.119[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 17:48:25.119[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 17:48:25.120[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2NzI4LCJleHAiOjE3NTc0MTAzMjh9.kJ0qeGLWQ4Tvd5Ty3aLwzj0wfr689FF3k2Gk87XAMdU(String)
2025-09-09 17:48:25.120[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2NzI4LCJleHAiOjE3NTc0MTAzMjh9.kJ0qeGLWQ4Tvd5Ty3aLwzj0wfr689FF3k2Gk87XAMdU(String)
2025-09-09 17:48:25.121[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2NzI4LCJleHAiOjE3NTc0MTAzMjh9.kJ0qeGLWQ4Tvd5Ty3aLwzj0wfr689FF3k2Gk87XAMdU' AND expires_at > NOW()
 {executed in 0 msec}
2025-09-09 17:48:25.121[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2NzI4LCJleHAiOjE3NTc0MTAzMjh9.kJ0qeGLWQ4Tvd5Ty3aLwzj0wfr689FF3k2Gk87XAMdU' AND expires_at > NOW()
 {executed in 1 msec}
2025-09-09 17:48:25.122[DEBUG] : <==      Total: 0
2025-09-09 17:48:25.122[DEBUG] : <==      Total: 0
2025-09-09 17:48:25.126[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 17:48:25.126[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 17:48:25.126[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 17:48:25.126[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 17:48:25.127[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-09 17:48:25.127[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-09 17:48:25.129[DEBUG] : <==      Total: 1
2025-09-09 17:48:25.129[DEBUG] : <==      Total: 1
2025-09-09 17:48:25.135[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 17:48:25.135[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2NzI4LCJleHAiOjE3NTc0MTAzMjh9.kJ0qeGLWQ4Tvd5Ty3aLwzj0wfr689FF3k2Gk87XAMdU(String)
2025-09-09 17:48:25.137[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2NzI4LCJleHAiOjE3NTc0MTAzMjh9.kJ0qeGLWQ4Tvd5Ty3aLwzj0wfr689FF3k2Gk87XAMdU' AND expires_at > NOW()
 {executed in 1 msec}
2025-09-09 17:48:25.138[DEBUG] : <==      Total: 0
2025-09-09 17:48:25.142[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 17:48:25.143[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 17:48:25.144[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-09 17:48:25.146[DEBUG] : <==      Total: 1
2025-09-09 17:48:28.575[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 17:48:28.576[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2NzI4LCJleHAiOjE3NTc0MTAzMjh9.kJ0qeGLWQ4Tvd5Ty3aLwzj0wfr689FF3k2Gk87XAMdU(String)
2025-09-09 17:48:28.577[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2NzI4LCJleHAiOjE3NTc0MTAzMjh9.kJ0qeGLWQ4Tvd5Ty3aLwzj0wfr689FF3k2Gk87XAMdU' AND expires_at > NOW()
 {executed in 1 msec}
2025-09-09 17:48:28.578[DEBUG] : <==      Total: 0
2025-09-09 17:48:28.581[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 17:48:28.581[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 17:48:28.582[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-09 17:48:28.583[DEBUG] : <==      Total: 1
2025-09-09 17:48:28.591[DEBUG] : Secure-Page_UserDetails: [ROLE_USER]
2025-09-09 17:48:28.635[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 17:48:28.635[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2NzI4LCJleHAiOjE3NTc0MTAzMjh9.kJ0qeGLWQ4Tvd5Ty3aLwzj0wfr689FF3k2Gk87XAMdU(String)
2025-09-09 17:48:28.636[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2NzI4LCJleHAiOjE3NTc0MTAzMjh9.kJ0qeGLWQ4Tvd5Ty3aLwzj0wfr689FF3k2Gk87XAMdU' AND expires_at > NOW()
 {executed in 1 msec}
2025-09-09 17:48:28.637[DEBUG] : <==      Total: 0
2025-09-09 17:48:28.641[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 17:48:28.642[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 17:48:28.643[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-09 17:48:28.644[DEBUG] : <==      Total: 1
2025-09-09 17:48:28.671[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 17:48:28.671[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2NzI4LCJleHAiOjE3NTc0MTAzMjh9.kJ0qeGLWQ4Tvd5Ty3aLwzj0wfr689FF3k2Gk87XAMdU(String)
2025-09-09 17:48:28.673[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2NzI4LCJleHAiOjE3NTc0MTAzMjh9.kJ0qeGLWQ4Tvd5Ty3aLwzj0wfr689FF3k2Gk87XAMdU' AND expires_at > NOW()
 {executed in 0 msec}
2025-09-09 17:48:28.674[DEBUG] : <==      Total: 0
2025-09-09 17:48:28.680[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 17:48:28.680[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 17:48:28.682[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-09 17:48:28.685[DEBUG] : <==      Total: 1
2025-09-09 17:48:29.529[DEBUG] : ==>  Preparing: SELECT id, token, expires_at, blacklisted_at FROM blacklisted_tokens WHERE token = ? AND expires_at > NOW()
2025-09-09 17:48:29.530[DEBUG] : ==> Parameters: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2NzI4LCJleHAiOjE3NTc0MTAzMjh9.kJ0qeGLWQ4Tvd5Ty3aLwzj0wfr689FF3k2Gk87XAMdU(String)
2025-09-09 17:48:29.531[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, token, expires_at, blacklisted_at
        FROM blacklisted_tokens
        WHERE token = 'eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2NzI4LCJleHAiOjE3NTc0MTAzMjh9.kJ0qeGLWQ4Tvd5Ty3aLwzj0wfr689FF3k2Gk87XAMdU' AND expires_at > NOW()
 {executed in 1 msec}
2025-09-09 17:48:29.531[DEBUG] : <==      Total: 0
2025-09-09 17:48:29.534[DEBUG] : ==>  Preparing: SELECT id, username, password, displayname, role, created_at, updated_at FROM users WHERE username = ?
2025-09-09 17:48:29.535[DEBUG] : ==> Parameters: jaehoon(String)
2025-09-09 17:48:29.536[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT id, username, password, displayname, role, created_at, updated_at
        FROM users
        WHERE username = 'jaehoon'
 {executed in 1 msec}
2025-09-09 17:48:29.538[DEBUG] : <==      Total: 1
2025-09-09 17:48:29.557[DEBUG] :  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. INSERT INTO blacklisted_tokens (token, expires_at)
        VALUES ('eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqYWVob29uIiwiaWF0IjoxNzU3NDA2NzI4LCJleHAiOjE3NTc0MTAzMjh9.kJ0qeGLWQ4Tvd5Ty3aLwzj0wfr689FF3k2Gk87XAMdU', 2025-09-09T18:32:08)
 {executed in 5 msec}
2025-09-09 17:49:00.729[INFO ] : HikariPool-1 - Shutdown initiated...
2025-09-09 17:49:00.738[INFO ] : HikariPool-1 - Shutdown completed.
